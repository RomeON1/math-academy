{"ast":null,"code":"import _objectSpread from\"/opt/math-app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState,useCallback}from\"react\";import Header from\"./components/Header\";import Login from\"./components/auth/Login\";import Register from\"./components/auth/Register\";import{authAPI,courseAPI,userAPI}from'./services/api';import{courseStructure}from'./taskGenerators';import*as taskGenerators from'./taskGenerators';import{useTranslation}from'react-i18next';import DayNavigation from'./components/DayNavigation';// 🟢 УЛУЧШЕННЫЙ ДЕТЕКТОР СБРОСА КЭША\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const detectCacheClear=()=>{const cacheFlag=sessionStorage.getItem('cacheWasCleared');const hasAuthToken=localStorage.getItem('authToken');const hasLocalData=localStorage.getItem('userMathTests')&&localStorage.getItem('userMathAnswers');// Если есть токен но нет локальных данных - значит кеш сброшен\nif(hasAuthToken&&!hasLocalData){console.log('🚨 ОБНАРУЖЕН СБРОС КЭША: есть токен но нет локальных данных');sessionStorage.setItem('cacheWasCleared','true');return true;}return cacheFlag==='true';};// 🟢 КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ: Функция создания ЧИСТЫХ ответов\nconst createCleanAnswers=tests=>{const cleanAnswers={};tests.forEach(dayData=>{if(dayData.tasks&&Array.isArray(dayData.tasks)){dayData.tasks.forEach((task,index)=>{const answerKey=\"\".concat(dayData.day,\"-\").concat(index);cleanAnswers[answerKey]='';// Гарантированно пустая строка\n});}});console.log('✅ Создано чистых ответов:',Object.keys(cleanAnswers).length);return cleanAnswers;};// Функция для применения переводов к заданиям\nconst applyTranslationsToTasks=(tasks,t)=>{if(!tasks||!Array.isArray(tasks))return[];return tasks.map(task=>_objectSpread(_objectSpread({},task),{},{question:task.translationKey?t(task.translationKey,task.translationParams):task.question,explanation:task.explanationKey?t(task.explanationKey,task.explanationParams):task.explanation,answerFormat:task.formatKey?t(task.formatKey):task.answerFormat}));};// 🟢 ФУНКЦИЯ ПРОВЕРКИ ПРАВИЛЬНОСТИ ОТВЕТА\nconst isCorrectAnswerCheck=(day,index,correctAnswer,currentAnswers)=>{var _currentAnswers;if(!currentAnswers)return false;const userAnswer=(_currentAnswers=currentAnswers[\"\".concat(day,\"-\").concat(index)])===null||_currentAnswers===void 0?void 0:_currentAnswers.toString().trim().toLowerCase();const correct=correctAnswer===null||correctAnswer===void 0?void 0:correctAnswer.toString().toLowerCase();if(!userAnswer||!correct)return false;if(correct.includes('%')){const userNum=userAnswer.replace('%','');const correctNum=correct.replace('%','');return userNum===correctNum;}if(correct.includes('/')){const[userA,userB]=userAnswer.split('/');const[correctA,correctB]=correct.split('/');return userA===correctA&&userB===correctB;}return userAnswer===correct;};function App(){const{t,i18n}=useTranslation();const[tests,setTests]=useState([]);const[answers,setAnswers]=useState({});const[loading,setLoading]=useState(true);const[showResetConfirm,setShowResetConfirm]=useState(false);const[user,setUser]=useState(null);const[showLogin,setShowLogin]=useState(false);const[showRegister,setShowRegister]=useState(false);const[currentDay,setCurrentDay]=useState(1);const[showScrollTop,setShowScrollTop]=useState(false);const[authError,setAuthError]=useState('');const[dataLoaded,setDataLoaded]=useState(false);const[recoveryAttempted,setRecoveryAttempted]=useState(false);// 🟢 EFFECT ДЛЯ ОТСЛЕЖИВАНИЯ СКРОЛЛА\nuseEffect(()=>{const handleScroll=()=>{setShowScrollTop(window.scrollY>300);};window.addEventListener('scroll',handleScroll);return()=>window.removeEventListener('scroll',handleScroll);},[]);// 🟢 EFFECT ДЛЯ ПРОВЕРКИ ЦЕЛОСТНОСТИ ДАННЫХ ПРИ ЗАГРУЗКЕ\nuseEffect(()=>{const checkDataIntegrity=()=>{const hasAuthToken=localStorage.getItem('authToken');const hasTests=localStorage.getItem('userMathTests');const hasAnswers=localStorage.getItem('userMathAnswers');// Если пользователь авторизован но данные повреждены/отсутствуют\nif(hasAuthToken&&(!hasTests||!hasAnswers)){console.log('🚨 ОБНАРУЖЕНА ПОВРЕЖДЕННАЯ СЕССИЯ - запуск восстановления');sessionStorage.setItem('cacheWasCleared','true');setRecoveryAttempted(false);}};checkDataIntegrity();},[]);// 🟢 НАДЕЖНАЯ ПРОВЕРКА АУТЕНТИФИКАЦИИ\nconst checkAuth=useCallback(async()=>{try{const token=localStorage.getItem('authToken');if(!token){setUser({name:t('header.guest',\"Гость\"),isLoggedIn:false});setLoading(false);return;}try{const response=await authAPI.getMe();const userData=_objectSpread(_objectSpread({},response.data),{},{isLoggedIn:true});setUser(userData);localStorage.setItem('userData',JSON.stringify(userData));}catch(error){console.log('getMe failed, checking localStorage for user data');const savedUser=localStorage.getItem('userData');if(savedUser){const userData=JSON.parse(savedUser);setUser(_objectSpread(_objectSpread({},userData),{},{isLoggedIn:true}));}else{const tempUser={id:Date.now(),name:'Пользователь',email:'user@example.com',isLoggedIn:true};setUser(tempUser);localStorage.setItem('userData',JSON.stringify(tempUser));}}}catch(error){console.error('Auth check error:',error);setUser({name:t('header.guest',\"Гость\"),isLoggedIn:false});}finally{setLoading(false);}},[t]);// 🟢 ЗАГРУЗКА ПРИ СТАРТЕ\nuseEffect(()=>{checkAuth();},[checkAuth]);// 🟢 КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ: УПРОЩЕННАЯ ФУНКЦИЯ ВОССТАНОВЛЕНИЯ\nconst recoverFromDatabase=async()=>{if(recoveryAttempted)return;const hasAuthToken=localStorage.getItem('authToken');if(hasAuthToken){console.log('🚨 ВОССТАНОВЛЕНИЕ ИЗ БД: Пользователь авторизован!');setRecoveryAttempted(true);const wasCacheCleared=detectCacheClear();if(wasCacheCleared){sessionStorage.removeItem('cacheWasCleared');}try{console.log('📚 Загружаем сохраненные задания из БД...');const tasksResponse=await userAPI.getAllTasks();const dbTasks=tasksResponse.data||{};console.log('✅ Задания из БД:',Object.keys(dbTasks).length,'дней');let restoredTests=[];if(Object.keys(dbTasks).length>0){console.log('🎯 ВОССТАНАВЛИВАЕМ сохраненные задания из БД');restoredTests=Object.keys(dbTasks).map(dayStr=>{const day=parseInt(dayStr);const dayTasks=dbTasks[dayStr];const dayInfo=courseStructure.find(d=>d.day===day)||{titleKey:\"days.day\".concat(day),theoryLink:null};return{day:day,titleKey:dayInfo.titleKey,theoryLink:dayInfo.theoryLink,tasks:dayTasks.map(task=>_objectSpread({question:task.question,answer:task.answer,explanation:task.explanation,answerFormat:task.answerFormat,translationKey:task.translation_key,translationParams:task.translation_params},task.task_data&&typeof task.task_data==='object'?task.task_data:{}))};}).filter(day=>day.tasks.length>0);console.log(\"\\u2705 \\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043E \".concat(restoredTests.length,\" \\u0434\\u043D\\u0435\\u0439 \\u0441 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\\u043C\\u0438 \\u0438\\u0437 \\u0411\\u0414\"));}else{console.log('🆕 СОХРАНЕННЫХ ЗАДАНИЙ НЕТ - генерируем новые');restoredTests=courseStructure.map(day=>({day:day.day,titleKey:day.titleKey,theoryLink:day.theoryLink,tasks:taskGenerators[day.generator]?taskGenerators[day.generator](day.taskCount,t):[]})).filter(day=>day.tasks.length>0);console.log(\"\\u2705 \\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u043E \".concat(restoredTests.length,\" \\u0434\\u043D\\u0435\\u0439 \\u0441 \\u043D\\u043E\\u0432\\u044B\\u043C\\u0438 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\\u043C\\u0438\"));// Сохраняем новые задания в БД\nconsole.log('💾 Сохраняем сгенерированные задания в БД...');for(const dayData of restoredTests){try{await userAPI.saveTasks(dayData.day,dayData.tasks);console.log(\"\\u2705 \\u0414\\u0435\\u043D\\u044C \".concat(dayData.day,\" \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D \\u0432 \\u0411\\u0414\"));}catch(error){console.error(\"\\u274C \\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u0438\\u044F \\u0434\\u043D\\u044F \".concat(dayData.day,\":\"),error);}}}// 🟢 КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ: СОЗДАЕМ ЧИСТЫЕ ОТВЕТЫ вместо восстановления старых\nconsole.log('🔄 СОЗДАЕМ ЧИСТЫЕ ОТВЕТЫ для заданий');const cleanAnswers=createCleanAnswers(restoredTests);// 🟢 КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ: Устанавливаем тесты и ОЧИЩАЕМ ответы\nsetTests(restoredTests);setAnswers(cleanAnswers);localStorage.setItem('userMathTests',JSON.stringify(restoredTests));localStorage.setItem('userMathAnswers',JSON.stringify(cleanAnswers));console.log('🎉 ВОССТАНОВЛЕНИЕ ИЗ БАЗЫ ДАННЫХ ЗАВЕРШЕНО!');}catch(error){console.error('❌ Ошибка восстановления из БД:',error);// Аварийный режим: создаем новые задания с чистыми ответами\nconsole.log('🆘 Создаем аварийные данные...');const emergencyTests=courseStructure.map(day=>({day:day.day,titleKey:day.titleKey,theoryLink:day.theoryLink,tasks:taskGenerators[day.generator]?taskGenerators[day.generator](day.taskCount,t):[]})).filter(day=>day.tasks.length>0);const emergencyAnswers=createCleanAnswers(emergencyTests);setTests(emergencyTests);setAnswers(emergencyAnswers);localStorage.setItem('userMathTests',JSON.stringify(emergencyTests));localStorage.setItem('userMathAnswers',JSON.stringify(emergencyAnswers));}}};// 🟢 УЛУЧШЕННАЯ ЗАГРУЗКА ДАННЫХ\nconst loadUserData=useCallback(async()=>{if(dataLoaded)return;try{const savedTests=localStorage.getItem('userMathTests');const savedAnswers=localStorage.getItem('userMathAnswers');let finalTests=[];let finalAnswers={};// Проверяем авторизацию перед использованием локальных данных\nconst hasAuthToken=localStorage.getItem('authToken');if(savedTests&&savedAnswers&&!hasAuthToken){// Для гостей используем локальные данные\ntry{const parsedTests=JSON.parse(savedTests);const parsedAnswers=JSON.parse(savedAnswers);finalTests=parsedTests.map(dayData=>_objectSpread(_objectSpread({},dayData),{},{tasks:applyTranslationsToTasks(dayData.tasks,t)}));finalAnswers=parsedAnswers;}catch(parseError){console.error('Error parsing localStorage data:',parseError);throw new Error('Invalid localStorage data');}}else if(hasAuthToken){// Для авторизованных пользователей всегда предпочитаем данные из БД\nconsole.log('🔐 Пользователь авторизован - ожидаем данные из БД');return;}else{// Генерация для гостей\nfinalTests=courseStructure.map(day=>({day:day.day,titleKey:day.titleKey,theoryLink:day.theoryLink,tasks:taskGenerators[day.generator]?taskGenerators[day.generator](day.taskCount,t):[]})).filter(day=>day.tasks.length>0);finalAnswers=createCleanAnswers(finalTests);}setTests(finalTests);setAnswers(finalAnswers);localStorage.setItem('userMathTests',JSON.stringify(finalTests));localStorage.setItem('userMathAnswers',JSON.stringify(finalAnswers));setDataLoaded(true);}catch(error){console.error('Error loading user data:',error);const emergencyTests=courseStructure.map(day=>({day:day.day,titleKey:day.titleKey,theoryLink:day.theoryLink,tasks:taskGenerators[day.generator]?taskGenerators[day.generator](day.taskCount,t):[]})).filter(day=>day.tasks.length>0);const emergencyAnswers=createCleanAnswers(emergencyTests);setTests(emergencyTests);setAnswers(emergencyAnswers);localStorage.setItem('userMathTests',JSON.stringify(emergencyTests));localStorage.setItem('userMathAnswers',JSON.stringify(emergencyAnswers));setDataLoaded(true);}},[user,t,dataLoaded]);// 🟢 ЗАГРУЗКА ДАННЫХ ПРИ ИЗМЕНЕНИИ ПОЛЬЗОВАТЕЛЯ ИЛИ ЯЗЫКА\nuseEffect(()=>{if(!loading&&user!==null){loadUserData();}},[user,loading,loadUserData]);useEffect(()=>{if(dataLoaded&&tests.length>0){const updatedTests=tests.map(dayData=>_objectSpread(_objectSpread({},dayData),{},{tasks:applyTranslationsToTasks(dayData.tasks,t)}));setTests(updatedTests);}},[i18n.language,t]);// 🟢 ФИНАЛЬНОЕ ВОССТАНОВЛЕНИЕ ИЗ БАЗЫ ДАННЫХ ПОСЛЕ СБРОСА КЭША\nuseEffect(()=>{recoverFromDatabase();const interval=setInterval(()=>{if(!recoveryAttempted){recoverFromDatabase();}},3000);return()=>clearInterval(interval);},[t,recoveryAttempted]);// 🟢 ОБРАБОТЧИК ВХОДА\nconst handleLogin=async formData=>{setAuthError('');try{var _response$data;console.log('🔐 Attempting login...');const response=await authAPI.login({email:formData.email,password:formData.password});if(!((_response$data=response.data)!==null&&_response$data!==void 0&&_response$data.access_token)){throw new Error('No access token received');}localStorage.setItem('authToken',response.data.access_token);console.log('✅ Login successful, token saved');setShowLogin(false);await checkAuth();}catch(error){var _error$response,_error$response$data;console.error('❌ Login error:',error);const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||error.message||'Ошибка входа';setAuthError(errorMessage);localStorage.removeItem('authToken');}};// 🟢 ОБРАБОТЧИК РЕГИСТРАЦИИ\nconst handleRegister=async formData=>{setAuthError('');try{var _loginResponse$data;console.log('📝 Attempting registration...');await authAPI.register({email:formData.email,username:formData.username,password:formData.password,grade:formData.grade});console.log('✅ Registration successful, attempting login...');const loginResponse=await authAPI.login({email:formData.email,password:formData.password});if(!((_loginResponse$data=loginResponse.data)!==null&&_loginResponse$data!==void 0&&_loginResponse$data.access_token)){throw new Error('No access token received after registration');}localStorage.setItem('authToken',loginResponse.data.access_token);console.log('✅ Auto-login successful');setShowRegister(false);await checkAuth();}catch(error){var _error$response2,_error$response2$data;console.error('❌ Registration error:',error);const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.detail)||error.message||'Ошибка регистрации';setAuthError(errorMessage);localStorage.removeItem('authToken');}};// 🟢 ОБРАБОТЧИК ВЫХОДА\nconst handleLogout=()=>{console.log('🚪 Logging out...');localStorage.removeItem('authToken');localStorage.removeItem('userData');setUser({name:t('header.guest',\"Гость\"),isLoggedIn:false});setAuthError('');};// 🟢 ОПТИМИЗИРОВАННАЯ ОБРАБОТКА ВВОДА ОТВЕТА\nconst handleAnswerChange=async(day,index,value)=>{const answerKey=\"\".concat(day,\"-\").concat(index);const newAnswers=_objectSpread(_objectSpread({},answers),{},{[answerKey]:value});setAnswers(newAnswers);localStorage.setItem('userMathAnswers',JSON.stringify(newAnswers));if(user&&user.isLoggedIn){setTimeout(async()=>{try{const dayData=tests.find(d=>d.day===day);if(dayData&&dayData.tasks[index]){const task=dayData.tasks[index];const isCorrectAnswer=isCorrectAnswerCheck(day,index,task.answer,newAnswers);await userAPI.saveAnswer(day,index,value,isCorrectAnswer);const completedTasks=dayData.tasks.filter((t,i)=>isCorrectAnswerCheck(day,i,t.answer,newAnswers)).length;await courseAPI.updateProgress(day,newAnswers,completedTasks);}}catch(error){console.log('Background answer sync failed');}},500);}};// 🟢 ВЫЧИСЛЕНИЕ ПРОГРЕССА\nconst getDayProgress=(day,tasks)=>{if(!tasks||!Array.isArray(tasks))return 0;const correctCount=tasks.filter((task,index)=>isCorrectAnswerCheck(day,index,task.answer,answers)).length;return tasks.length>0?Math.round(correctCount/tasks.length*100):0;};const getTotalProgress=()=>{let totalCorrect=0;let totalTasks=0;tests.forEach(dayData=>{if(dayData.tasks&&Array.isArray(dayData.tasks)){dayData.tasks.forEach((task,index)=>{totalTasks++;if(isCorrectAnswerCheck(dayData.day,index,task.answer,answers)){totalCorrect++;}});}});return totalTasks>0?Math.round(totalCorrect/totalTasks*100):0;};// 🟢 КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ: СБРОС ПРОГРЕССА С ОЧИСТКОЙ ОТВЕТОВ\nconst resetProgress=async()=>{try{const userTests=courseStructure.map(day=>({day:day.day,titleKey:day.titleKey,theoryLink:day.theoryLink,tasks:taskGenerators[day.generator]?taskGenerators[day.generator](day.taskCount,t):[]})).filter(day=>day.tasks.length>0);// 🟢 КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ: Создаем ЧИСТЫЕ ответы\nconst cleanAnswers=createCleanAnswers(userTests);setTests(userTests);setAnswers(cleanAnswers);localStorage.setItem('userMathTests',JSON.stringify(userTests));localStorage.setItem('userMathAnswers',JSON.stringify(cleanAnswers));if(user&&user.isLoggedIn){setTimeout(async()=>{try{await courseAPI.resetProgress();for(const dayData of userTests){await userAPI.saveTasks(dayData.day,dayData.tasks);}}catch(error){console.log('Background reset sync failed');}},500);}}catch(error){console.error('Error resetting progress:',error);}};// 🟢 ОБРАБОТЧИКИ UI\nconst handleLoginClick=()=>{setShowLogin(true);setAuthError('');};const handleRegisterClick=()=>{setShowRegister(true);setAuthError('');};const handleDayClick=dayNumber=>{setCurrentDay(dayNumber);const element=document.getElementById(\"day-\".concat(dayNumber));if(element){const headerOffset=340;const elementPosition=element.offsetTop;const offsetPosition=elementPosition-headerOffset;setTimeout(()=>{window.scrollTo({top:Math.max(0,offsetPosition),behavior:'smooth'});},50);}};// 🟢 ЗАГРУЗОЧНЫЙ ЭКРАН\nif(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-4 text-gray-600 dark:text-gray-400\",children:t('loading',\"Загрузка...\")})]})});}// 🟢 ОСНОВНОЙ RENDER\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-200\",children:[/*#__PURE__*/_jsx(Header,{user:user||{name:t('header.guest',\"Гость\"),isLoggedIn:false},progress:getTotalProgress(),onResetClick:()=>setShowResetConfirm(true),onSettingsClick:()=>console.log(\"Settings clicked\"),onLoginClick:handleLoginClick,onLogoutClick:handleLogout,grade:\"6\"}),showLogin&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsx(Login,{onLogin:handleLogin,onSwitchToRegister:()=>{setShowLogin(false);setShowRegister(true);setAuthError('');},error:authError})}),showRegister&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsx(Register,{onRegister:handleRegister,onSwitchToLogin:()=>{setShowRegister(false);setShowLogin(true);setAuthError('');},error:authError})}),user&&user.isLoggedIn&&tests.length>0&&/*#__PURE__*/_jsx(DayNavigation,{days:tests.map(day=>_objectSpread(_objectSpread({},day),{},{progress:getDayProgress(day.day,day.tasks)})),currentDay:currentDay,onDayClick:handleDayClick}),user&&user.isLoggedIn?/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto p-14 max-w-4xl\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid gap-16\",children:tests.map(dayData=>{var _dayData$tasks,_dayData$tasks2;const dayProgress=getDayProgress(dayData.day,dayData.tasks);return/*#__PURE__*/_jsxs(\"div\",{id:\"day-\".concat(dayData.day),className:\"bg-white dark:bg-gray-800 rounded-xl shadow-md p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 min-w-0\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-1\",children:[t('days.day',\"День\"),\" \",dayData.day]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-gray-800 dark:text-gray-200 font-medium\",children:t(dayData.titleKey)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-end space-y-1 flex-shrink-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-semibold text-gray-600 dark:text-gray-400\",children:[dayProgress,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-20 bg-gray-200 dark:bg-gray-700 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-500 h-2 rounded-full transition-all duration-300\",style:{width:\"\".concat(dayProgress,\"%\")}})})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:[((_dayData$tasks=dayData.tasks)===null||_dayData$tasks===void 0?void 0:_dayData$tasks.length)||0,\" \",t('days.tasks',\"заданий\")]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:(_dayData$tasks2=dayData.tasks)===null||_dayData$tasks2===void 0?void 0:_dayData$tasks2.map((task,index)=>{const isAnswerCorrect=isCorrectAnswerCheck(dayData.day,index,task.answer,answers);const hasAnswer=answers[\"\".concat(dayData.day,\"-\").concat(index)];return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 rounded-lg \".concat(hasAnswer?isAnswerCorrect?'bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800':'bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800':'bg-gray-50 dark:bg-gray-700'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"flex-1 text-gray-800 dark:text-gray-200\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[t('tasks.task',\"Задача\"),\" \",index+1,\":\"]}),\" \",task.question]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:t('answer',\"Ответ\"),value:answers[\"\".concat(dayData.day,\"-\").concat(index)]||\"\",onChange:e=>handleAnswerChange(dayData.day,index,e.target.value),className:\"w-24 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white text-center\"}),hasAnswer&&(isAnswerCorrect?/*#__PURE__*/_jsx(\"span\",{className:\"text-green-500 text-xl\",title:t('correct',\"Правильно!\"),children:\"\\u2705\"}):/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 text-xl\",title:t('try_again',\"Попробуйте еще раз\"),children:\"\\u274C\"}))]})]}),task.answerFormat&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-1\",children:[\"\\uD83D\\uDCA1 \",t('answerFormat.hint',\"Формат ответа\"),\": \",task.answerFormat]}),hasAnswer&&!isAnswerCorrect&&task.explanation&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 p-2 bg-blue-50 dark:bg-blue-900/20 rounded-md\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-blue-800 dark:text-blue-200\",children:[\"\\uD83D\\uDCA1 \",task.explanation]})})]},index);})}),dayData.theoryLink&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-600\",children:/*#__PURE__*/_jsxs(\"a\",{href:dayData.theoryLink,target:\"_blank\",rel:\"noopener noreferrer\",className:\"text-blue-600 dark:text-blue-400 hover:underline text-sm flex items-center\",children:[\"\\uD83D\\uDCD6 \",t('days.theory',\"Теоретические материалы\"),\" \\\"\",t(dayData.titleKey),\"\\\"\"]})})]},dayData.day);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8 text-center text-gray-500 dark:text-gray-400 text-sm\",children:[/*#__PURE__*/_jsx(\"p\",{children:t('footer.course_description',\"Курс для закрепления знаний по математике за 6 класс\")}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\xA9 2025 Math Academy | \",t('footer.generated',\"Задания генерируются случайно\")]})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center px-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center max-w-2xl mx-auto\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-8 flex justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-32 h-32 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-6xl\",children:\"\\uD83D\\uDCDA\"})}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6\",children:t('auth.welcome',\"Добро пожаловать в Math Academy!\")}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl text-gray-600 dark:text-gray-400 mb-8 max-w-md mx-auto leading-relaxed\",children:t('auth.prompt',\"Войдите или зарегистрируйтесь чтобы начать обучение\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col sm:flex-row gap-4 justify-center mb-12\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleLoginClick,className:\"bg-blue-500 hover:bg-blue-600 text-white px-8 py-3 rounded-lg font-medium text-lg transition-colors shadow-lg\",children:t('header.login',\"Войти\")}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRegisterClick,className:\"bg-green-500 hover:bg-green-600 text-white px-8 py-3 rounded-lg font-medium text-lg transition-colors shadow-lg\",children:t('header.register',\"Регистрация\")})]}),/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-200 dark:border-gray-700 pt-8\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-gray-500 dark:text-gray-400 italic\",children:t('slogan',\"От математических основ к образовательной экосистеме! 🚀\")})})]})}),showResetConfirm&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg p-6 m-4 max-w-md w-full\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-bold text-gray-900 dark:text-white mb-2\",children:[\"\\uD83D\\uDD04 \",t('reset.new_tasks',\"Новые задания\")]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400 mb-4\",children:t('reset.confirmation',\"Вы уверены, что хотите сгенерировать новые задания? Весь текущий прогресс будет сброшен.\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowResetConfirm(false),className:\"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\",children:t('reset.cancel',\"Отмена\")}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{resetProgress();setShowResetConfirm(false);},className:\"flex-1 px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors\",children:t('reset.generate',\"Сгенерировать\")})]})]})}),showScrollTop&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.scrollTo({top:0,behavior:'smooth'}),className:\"fixed bottom-6 right-6 z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-500 rounded-full w-10 h-10 flex items-center justify-center shadow-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-all text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-gray-100\",\"aria-label\":\"\\u041D\\u0430\\u0432\\u0435\\u0440\\u0445\",children:\"\\u2191\"})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","useCallback","Header","Login","Register","authAPI","courseAPI","userAPI","courseStructure","taskGenerators","useTranslation","DayNavigation","jsx","_jsx","jsxs","_jsxs","detectCacheClear","cacheFlag","sessionStorage","getItem","hasAuthToken","localStorage","hasLocalData","console","log","setItem","createCleanAnswers","tests","cleanAnswers","forEach","dayData","tasks","Array","isArray","task","index","answerKey","concat","day","Object","keys","length","applyTranslationsToTasks","t","map","_objectSpread","question","translationKey","translationParams","explanation","explanationKey","explanationParams","answerFormat","formatKey","isCorrectAnswerCheck","correctAnswer","currentAnswers","_currentAnswers","userAnswer","toString","trim","toLowerCase","correct","includes","userNum","replace","correctNum","userA","userB","split","correctA","correctB","App","i18n","setTests","answers","setAnswers","loading","setLoading","showResetConfirm","setShowResetConfirm","user","setUser","showLogin","setShowLogin","showRegister","setShowRegister","currentDay","setCurrentDay","showScrollTop","setShowScrollTop","authError","setAuthError","dataLoaded","setDataLoaded","recoveryAttempted","setRecoveryAttempted","handleScroll","window","scrollY","addEventListener","removeEventListener","checkDataIntegrity","hasTests","hasAnswers","checkAuth","token","name","isLoggedIn","response","getMe","userData","data","JSON","stringify","error","savedUser","parse","tempUser","id","Date","now","email","recoverFromDatabase","wasCacheCleared","removeItem","tasksResponse","getAllTasks","dbTasks","restoredTests","dayStr","parseInt","dayTasks","dayInfo","find","d","titleKey","theoryLink","answer","translation_key","translation_params","task_data","filter","generator","taskCount","saveTasks","emergencyTests","emergencyAnswers","loadUserData","savedTests","savedAnswers","finalTests","finalAnswers","parsedTests","parsedAnswers","parseError","Error","updatedTests","language","interval","setInterval","clearInterval","handleLogin","formData","_response$data","login","password","access_token","_error$response","_error$response$data","errorMessage","detail","message","handleRegister","_loginResponse$data","register","username","grade","loginResponse","_error$response2","_error$response2$data","handleLogout","handleAnswerChange","value","newAnswers","setTimeout","isCorrectAnswer","saveAnswer","completedTasks","i","updateProgress","getDayProgress","correctCount","Math","round","getTotalProgress","totalCorrect","totalTasks","resetProgress","userTests","handleLoginClick","handleRegisterClick","handleDayClick","dayNumber","element","document","getElementById","headerOffset","elementPosition","offsetTop","offsetPosition","scrollTo","top","max","behavior","className","children","progress","onResetClick","onSettingsClick","onLoginClick","onLogoutClick","onLogin","onSwitchToRegister","onRegister","onSwitchToLogin","days","onDayClick","_dayData$tasks","_dayData$tasks2","dayProgress","style","width","isAnswerCorrect","hasAnswer","type","placeholder","onChange","e","target","title","href","rel","onClick"],"sources":["/opt/math-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport { authAPI, courseAPI, userAPI } from './services/api';\nimport { courseStructure } from './taskGenerators';\nimport * as taskGenerators from './taskGenerators';\nimport { useTranslation } from 'react-i18next';\nimport DayNavigation from './components/DayNavigation';\n\n// 🟢 УЛУЧШЕННЫЙ ДЕТЕКТОР СБРОСА КЭША\nconst detectCacheClear = () => {\n  const cacheFlag = sessionStorage.getItem('cacheWasCleared');\n  const hasAuthToken = localStorage.getItem('authToken');\n  const hasLocalData = localStorage.getItem('userMathTests') && localStorage.getItem('userMathAnswers');\n  \n  // Если есть токен но нет локальных данных - значит кеш сброшен\n  if (hasAuthToken && !hasLocalData) {\n    console.log('🚨 ОБНАРУЖЕН СБРОС КЭША: есть токен но нет локальных данных');\n    sessionStorage.setItem('cacheWasCleared', 'true');\n    return true;\n  }\n  \n  return cacheFlag === 'true';\n};\n\n// 🟢 КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ: Функция создания ЧИСТЫХ ответов\nconst createCleanAnswers = (tests) => {\n  const cleanAnswers = {};\n  \n  tests.forEach(dayData => {\n    if (dayData.tasks && Array.isArray(dayData.tasks)) {\n      dayData.tasks.forEach((task, index) => {\n        const answerKey = `${dayData.day}-${index}`;\n        cleanAnswers[answerKey] = ''; // Гарантированно пустая строка\n      });\n    }\n  });\n  \n  console.log('✅ Создано чистых ответов:', Object.keys(cleanAnswers).length);\n  return cleanAnswers;\n};\n\n// Функция для применения переводов к заданиям\nconst applyTranslationsToTasks = (tasks, t) => {\n  if (!tasks || !Array.isArray(tasks)) return [];\n  \n  return tasks.map(task => ({\n    ...task,\n    question: task.translationKey ? t(task.translationKey, task.translationParams) : task.question,\n    explanation: task.explanationKey ? t(task.explanationKey, task.explanationParams) : task.explanation,\n    answerFormat: task.formatKey ? t(task.formatKey) : task.answerFormat\n  }));\n};\n\n// 🟢 ФУНКЦИЯ ПРОВЕРКИ ПРАВИЛЬНОСТИ ОТВЕТА\nconst isCorrectAnswerCheck = (day, index, correctAnswer, currentAnswers) => {\n  if (!currentAnswers) return false;\n  \n  const userAnswer = currentAnswers[`${day}-${index}`]?.toString().trim().toLowerCase();\n  const correct = correctAnswer?.toString().toLowerCase();\n  \n  if (!userAnswer || !correct) return false;\n  \n  if (correct.includes('%')) {\n    const userNum = userAnswer.replace('%', '');\n    const correctNum = correct.replace('%', '');\n    return userNum === correctNum;\n  }\n\n  if (correct.includes('/')) {\n    const [userA, userB] = userAnswer.split('/');\n    const [correctA, correctB] = correct.split('/');\n    return userA === correctA && userB === correctB;\n  }\n\n  return userAnswer === correct;\n};\n\nfunction App() {\n  const { t, i18n } = useTranslation();\n  const [tests, setTests] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [showResetConfirm, setShowResetConfirm] = useState(false);\n  const [user, setUser] = useState(null);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [currentDay, setCurrentDay] = useState(1);\n  const [showScrollTop, setShowScrollTop] = useState(false);\n  const [authError, setAuthError] = useState('');\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [recoveryAttempted, setRecoveryAttempted] = useState(false);\n\n  // 🟢 EFFECT ДЛЯ ОТСЛЕЖИВАНИЯ СКРОЛЛА\n  useEffect(() => {\n    const handleScroll = () => {\n      setShowScrollTop(window.scrollY > 300);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // 🟢 EFFECT ДЛЯ ПРОВЕРКИ ЦЕЛОСТНОСТИ ДАННЫХ ПРИ ЗАГРУЗКЕ\n  useEffect(() => {\n    const checkDataIntegrity = () => {\n      const hasAuthToken = localStorage.getItem('authToken');\n      const hasTests = localStorage.getItem('userMathTests');\n      const hasAnswers = localStorage.getItem('userMathAnswers');\n      \n      // Если пользователь авторизован но данные повреждены/отсутствуют\n      if (hasAuthToken && (!hasTests || !hasAnswers)) {\n        console.log('🚨 ОБНАРУЖЕНА ПОВРЕЖДЕННАЯ СЕССИЯ - запуск восстановления');\n        sessionStorage.setItem('cacheWasCleared', 'true');\n        setRecoveryAttempted(false);\n      }\n    };\n\n    checkDataIntegrity();\n  }, []);\n\n  // 🟢 НАДЕЖНАЯ ПРОВЕРКА АУТЕНТИФИКАЦИИ\n  const checkAuth = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      \n      if (!token) {\n        setUser({ name: t('header.guest', \"Гость\"), isLoggedIn: false });\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const response = await authAPI.getMe();\n        const userData = {\n          ...response.data,\n          isLoggedIn: true\n        };\n        setUser(userData);\n        localStorage.setItem('userData', JSON.stringify(userData));\n      } catch (error) {\n        console.log('getMe failed, checking localStorage for user data');\n        \n        const savedUser = localStorage.getItem('userData');\n        if (savedUser) {\n          const userData = JSON.parse(savedUser);\n          setUser({ ...userData, isLoggedIn: true });\n        } else {\n          const tempUser = {\n            id: Date.now(),\n            name: 'Пользователь',\n            email: 'user@example.com',\n            isLoggedIn: true\n          };\n          setUser(tempUser);\n          localStorage.setItem('userData', JSON.stringify(tempUser));\n        }\n      }\n    } catch (error) {\n      console.error('Auth check error:', error);\n      setUser({ name: t('header.guest', \"Гость\"), isLoggedIn: false });\n    } finally {\n      setLoading(false);\n    }\n  }, [t]);\n\n  // 🟢 ЗАГРУЗКА ПРИ СТАРТЕ\n  useEffect(() => {\n    checkAuth();\n  }, [checkAuth]);\n\n  // 🟢 КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ: УПРОЩЕННАЯ ФУНКЦИЯ ВОССТАНОВЛЕНИЯ\n  const recoverFromDatabase = async () => {\n    if (recoveryAttempted) return;\n    \n    const hasAuthToken = localStorage.getItem('authToken');\n    \n    if (hasAuthToken) {\n      console.log('🚨 ВОССТАНОВЛЕНИЕ ИЗ БД: Пользователь авторизован!');\n      setRecoveryAttempted(true);\n      \n      const wasCacheCleared = detectCacheClear();\n      if (wasCacheCleared) {\n        sessionStorage.removeItem('cacheWasCleared');\n      }\n      \n      try {\n        console.log('📚 Загружаем сохраненные задания из БД...');\n        const tasksResponse = await userAPI.getAllTasks();\n        const dbTasks = tasksResponse.data || {};\n        \n        console.log('✅ Задания из БД:', Object.keys(dbTasks).length, 'дней');\n        \n        let restoredTests = [];\n        \n        if (Object.keys(dbTasks).length > 0) {\n          console.log('🎯 ВОССТАНАВЛИВАЕМ сохраненные задания из БД');\n          \n          restoredTests = Object.keys(dbTasks).map(dayStr => {\n            const day = parseInt(dayStr);\n            const dayTasks = dbTasks[dayStr];\n            \n            const dayInfo = courseStructure.find(d => d.day === day) || {\n              titleKey: `days.day${day}`,\n              theoryLink: null\n            };\n            \n            return {\n              day: day,\n              titleKey: dayInfo.titleKey,\n              theoryLink: dayInfo.theoryLink,\n              tasks: dayTasks.map(task => ({\n                question: task.question,\n                answer: task.answer,\n                explanation: task.explanation,\n                answerFormat: task.answerFormat,\n                translationKey: task.translation_key,\n                translationParams: task.translation_params,\n                ...(task.task_data && typeof task.task_data === 'object' ? task.task_data : {})\n              }))\n            };\n          }).filter(day => day.tasks.length > 0);\n          \n          console.log(`✅ Восстановлено ${restoredTests.length} дней с заданиями из БД`);\n          \n        } else {\n          console.log('🆕 СОХРАНЕННЫХ ЗАДАНИЙ НЕТ - генерируем новые');\n          restoredTests = courseStructure.map(day => ({\n            day: day.day,\n            titleKey: day.titleKey,\n            theoryLink: day.theoryLink,\n            tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n          })).filter(day => day.tasks.length > 0);\n          \n          console.log(`✅ Создано ${restoredTests.length} дней с новыми заданиями`);\n          \n          // Сохраняем новые задания в БД\n          console.log('💾 Сохраняем сгенерированные задания в БД...');\n          for (const dayData of restoredTests) {\n            try {\n              await userAPI.saveTasks(dayData.day, dayData.tasks);\n              console.log(`✅ День ${dayData.day} сохранен в БД`);\n            } catch (error) {\n              console.error(`❌ Ошибка сохранения дня ${dayData.day}:`, error);\n            }\n          }\n        }\n\n        // 🟢 КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ: СОЗДАЕМ ЧИСТЫЕ ОТВЕТЫ вместо восстановления старых\n        console.log('🔄 СОЗДАЕМ ЧИСТЫЕ ОТВЕТЫ для заданий');\n        const cleanAnswers = createCleanAnswers(restoredTests);\n        \n        // 🟢 КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ: Устанавливаем тесты и ОЧИЩАЕМ ответы\n        setTests(restoredTests);\n        setAnswers(cleanAnswers);\n        \n        localStorage.setItem('userMathTests', JSON.stringify(restoredTests));\n        localStorage.setItem('userMathAnswers', JSON.stringify(cleanAnswers));\n        \n        console.log('🎉 ВОССТАНОВЛЕНИЕ ИЗ БАЗЫ ДАННЫХ ЗАВЕРШЕНО!');\n\n      } catch (error) {\n        console.error('❌ Ошибка восстановления из БД:', error);\n        \n        // Аварийный режим: создаем новые задания с чистыми ответами\n        console.log('🆘 Создаем аварийные данные...');\n        const emergencyTests = courseStructure.map(day => ({\n          day: day.day,\n          titleKey: day.titleKey,\n          theoryLink: day.theoryLink,\n          tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n        })).filter(day => day.tasks.length > 0);\n        \n        const emergencyAnswers = createCleanAnswers(emergencyTests);\n        \n        setTests(emergencyTests);\n        setAnswers(emergencyAnswers);\n        localStorage.setItem('userMathTests', JSON.stringify(emergencyTests));\n        localStorage.setItem('userMathAnswers', JSON.stringify(emergencyAnswers));\n      }\n    }\n  };\n\n  // 🟢 УЛУЧШЕННАЯ ЗАГРУЗКА ДАННЫХ\n  const loadUserData = useCallback(async () => {\n    if (dataLoaded) return;\n    \n    try {\n      const savedTests = localStorage.getItem('userMathTests');\n      const savedAnswers = localStorage.getItem('userMathAnswers');\n\n      let finalTests = [];\n      let finalAnswers = {};\n\n      // Проверяем авторизацию перед использованием локальных данных\n      const hasAuthToken = localStorage.getItem('authToken');\n      \n      if (savedTests && savedAnswers && !hasAuthToken) {\n        // Для гостей используем локальные данные\n        try {\n          const parsedTests = JSON.parse(savedTests);\n          const parsedAnswers = JSON.parse(savedAnswers);\n          \n          finalTests = parsedTests.map(dayData => ({\n            ...dayData,\n            tasks: applyTranslationsToTasks(dayData.tasks, t)\n          }));\n          finalAnswers = parsedAnswers;\n        } catch (parseError) {\n          console.error('Error parsing localStorage data:', parseError);\n          throw new Error('Invalid localStorage data');\n        }\n      } else if (hasAuthToken) {\n        // Для авторизованных пользователей всегда предпочитаем данные из БД\n        console.log('🔐 Пользователь авторизован - ожидаем данные из БД');\n        return;\n      } else {\n        // Генерация для гостей\n        finalTests = courseStructure.map(day => ({\n          day: day.day,\n          titleKey: day.titleKey,\n          theoryLink: day.theoryLink,\n          tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n        })).filter(day => day.tasks.length > 0);\n        \n        finalAnswers = createCleanAnswers(finalTests);\n      }\n\n      setTests(finalTests);\n      setAnswers(finalAnswers);\n      \n      localStorage.setItem('userMathTests', JSON.stringify(finalTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify(finalAnswers));\n      \n      setDataLoaded(true);\n\n    } catch (error) {\n      console.error('Error loading user data:', error);\n      \n      const emergencyTests = courseStructure.map(day => ({\n        day: day.day,\n        titleKey: day.titleKey,\n        theoryLink: day.theoryLink,\n        tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n      })).filter(day => day.tasks.length > 0);\n      \n      const emergencyAnswers = createCleanAnswers(emergencyTests);\n      \n      setTests(emergencyTests);\n      setAnswers(emergencyAnswers);\n      localStorage.setItem('userMathTests', JSON.stringify(emergencyTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify(emergencyAnswers));\n      \n      setDataLoaded(true);\n    }\n  }, [user, t, dataLoaded]);\n\n  // 🟢 ЗАГРУЗКА ДАННЫХ ПРИ ИЗМЕНЕНИИ ПОЛЬЗОВАТЕЛЯ ИЛИ ЯЗЫКА\n  useEffect(() => {\n    if (!loading && user !== null) {\n      loadUserData();\n    }\n  }, [user, loading, loadUserData]);\n\n  useEffect(() => {\n    if (dataLoaded && tests.length > 0) {\n      const updatedTests = tests.map(dayData => ({\n        ...dayData,\n        tasks: applyTranslationsToTasks(dayData.tasks, t)\n      }));\n      setTests(updatedTests);\n    }\n  }, [i18n.language, t]);\n\n  // 🟢 ФИНАЛЬНОЕ ВОССТАНОВЛЕНИЕ ИЗ БАЗЫ ДАННЫХ ПОСЛЕ СБРОСА КЭША\n  useEffect(() => {\n    recoverFromDatabase();\n    const interval = setInterval(() => {\n      if (!recoveryAttempted) {\n        recoverFromDatabase();\n      }\n    }, 3000);\n    \n    return () => clearInterval(interval);\n  }, [t, recoveryAttempted]);\n\n  // 🟢 ОБРАБОТЧИК ВХОДА\n  const handleLogin = async (formData) => {\n    setAuthError('');\n    \n    try {\n      console.log('🔐 Attempting login...');\n      const response = await authAPI.login({ \n        email: formData.email, \n        password: formData.password \n      });\n      \n      if (!response.data?.access_token) {\n        throw new Error('No access token received');\n      }\n      \n      localStorage.setItem('authToken', response.data.access_token);\n      console.log('✅ Login successful, token saved');\n      \n      setShowLogin(false);\n      await checkAuth();\n      \n    } catch (error) {\n      console.error('❌ Login error:', error);\n      const errorMessage = error.response?.data?.detail || error.message || 'Ошибка входа';\n      setAuthError(errorMessage);\n      localStorage.removeItem('authToken');\n    }\n  };\n\n  // 🟢 ОБРАБОТЧИК РЕГИСТРАЦИИ\n  const handleRegister = async (formData) => {\n    setAuthError('');\n    \n    try {\n      console.log('📝 Attempting registration...');\n      \n      await authAPI.register({ \n        email: formData.email,\n        username: formData.username, \n        password: formData.password,\n        grade: formData.grade\n      });\n      \n      console.log('✅ Registration successful, attempting login...');\n      \n      const loginResponse = await authAPI.login({\n        email: formData.email,\n        password: formData.password\n      });\n      \n      if (!loginResponse.data?.access_token) {\n        throw new Error('No access token received after registration');\n      }\n      \n      localStorage.setItem('authToken', loginResponse.data.access_token);\n      console.log('✅ Auto-login successful');\n      \n      setShowRegister(false);\n      await checkAuth();\n      \n    } catch (error) {\n      console.error('❌ Registration error:', error);\n      const errorMessage = error.response?.data?.detail || error.message || 'Ошибка регистрации';\n      setAuthError(errorMessage);\n      localStorage.removeItem('authToken');\n    }\n  };\n\n  // 🟢 ОБРАБОТЧИК ВЫХОДА\n  const handleLogout = () => {\n    console.log('🚪 Logging out...');\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userData');\n    setUser({ name: t('header.guest', \"Гость\"), isLoggedIn: false });\n    setAuthError('');\n  };\n\n  // 🟢 ОПТИМИЗИРОВАННАЯ ОБРАБОТКА ВВОДА ОТВЕТА\n  const handleAnswerChange = async (day, index, value) => {\n    const answerKey = `${day}-${index}`;\n    const newAnswers = {\n      ...answers,\n      [answerKey]: value\n    };\n    \n    setAnswers(newAnswers);\n    localStorage.setItem('userMathAnswers', JSON.stringify(newAnswers));\n    \n    if (user && user.isLoggedIn) {\n      setTimeout(async () => {\n        try {\n          const dayData = tests.find(d => d.day === day);\n          if (dayData && dayData.tasks[index]) {\n            const task = dayData.tasks[index];\n            const isCorrectAnswer = isCorrectAnswerCheck(day, index, task.answer, newAnswers);\n            \n            await userAPI.saveAnswer(day, index, value, isCorrectAnswer);\n            \n            const completedTasks = dayData.tasks.filter((t, i) => \n              isCorrectAnswerCheck(day, i, t.answer, newAnswers)\n            ).length;\n            \n            await courseAPI.updateProgress(day, newAnswers, completedTasks);\n          }\n        } catch (error) {\n          console.log('Background answer sync failed');\n        }\n      }, 500);\n    }\n  };\n\n  // 🟢 ВЫЧИСЛЕНИЕ ПРОГРЕССА\n  const getDayProgress = (day, tasks) => {\n    if (!tasks || !Array.isArray(tasks)) return 0;\n    \n    const correctCount = tasks.filter((task, index) =>\n      isCorrectAnswerCheck(day, index, task.answer, answers)\n    ).length;\n    \n    return tasks.length > 0 ? Math.round((correctCount / tasks.length) * 100) : 0;\n  };\n\n  const getTotalProgress = () => {\n    let totalCorrect = 0;\n    let totalTasks = 0;\n\n    tests.forEach(dayData => {\n      if (dayData.tasks && Array.isArray(dayData.tasks)) {\n        dayData.tasks.forEach((task, index) => {\n          totalTasks++;\n          if (isCorrectAnswerCheck(dayData.day, index, task.answer, answers)) {\n            totalCorrect++;\n          }\n        });\n      }\n    });\n\n    return totalTasks > 0 ? Math.round((totalCorrect / totalTasks) * 100) : 0;\n  };\n\n  // 🟢 КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ: СБРОС ПРОГРЕССА С ОЧИСТКОЙ ОТВЕТОВ\n  const resetProgress = async () => {\n    try {\n      const userTests = courseStructure.map(day => ({\n        day: day.day,\n        titleKey: day.titleKey,\n        theoryLink: day.theoryLink,\n        tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n      })).filter(day => day.tasks.length > 0);\n      \n      // 🟢 КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ: Создаем ЧИСТЫЕ ответы\n      const cleanAnswers = createCleanAnswers(userTests);\n      \n      setTests(userTests);\n      setAnswers(cleanAnswers);\n      \n      localStorage.setItem('userMathTests', JSON.stringify(userTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify(cleanAnswers));\n      \n      if (user && user.isLoggedIn) {\n        setTimeout(async () => {\n          try {\n            await courseAPI.resetProgress();\n            for (const dayData of userTests) {\n              await userAPI.saveTasks(dayData.day, dayData.tasks);\n            }\n          } catch (error) {\n            console.log('Background reset sync failed');\n          }\n        }, 500);\n      }\n      \n    } catch (error) {\n      console.error('Error resetting progress:', error);\n    }\n  };\n\n  // 🟢 ОБРАБОТЧИКИ UI\n  const handleLoginClick = () => {\n    setShowLogin(true);\n    setAuthError('');\n  };\n\n  const handleRegisterClick = () => {\n    setShowRegister(true);\n    setAuthError('');\n  };\n\n  const handleDayClick = (dayNumber) => {\n    setCurrentDay(dayNumber);\n    const element = document.getElementById(`day-${dayNumber}`);\n    if (element) {\n      const headerOffset = 340;\n      const elementPosition = element.offsetTop;\n      const offsetPosition = elementPosition - headerOffset;\n\n      setTimeout(() => {\n        window.scrollTo({\n          top: Math.max(0, offsetPosition),\n          behavior: 'smooth'\n        });\n      }, 50);\n    }\n  };\n\n  // 🟢 ЗАГРУЗОЧНЫЙ ЭКРАН\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600 dark:text-gray-400\">{t('loading', \"Загрузка...\")}</p>\n        </div>\n      </div>\n    );\n  }\n\n  // 🟢 ОСНОВНОЙ RENDER\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-200\">\n      <Header \n        user={user || { name: t('header.guest', \"Гость\"), isLoggedIn: false }}\n        progress={getTotalProgress()}\n        onResetClick={() => setShowResetConfirm(true)}\n        onSettingsClick={() => console.log(\"Settings clicked\")}\n        onLoginClick={handleLoginClick}\n        onLogoutClick={handleLogout}\n        grade=\"6\"\n      />\n\n      {/* МОДАЛЬНЫЕ ОКНА */}\n      {showLogin && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <Login \n            onLogin={handleLogin} \n            onSwitchToRegister={() => { \n              setShowLogin(false); \n              setShowRegister(true); \n              setAuthError('');\n            }}\n            error={authError}\n          />\n        </div>\n      )}\n\n      {showRegister && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <Register \n            onRegister={handleRegister} \n            onSwitchToLogin={() => { \n              setShowRegister(false); \n              setShowLogin(true); \n              setAuthError('');\n            }}\n            error={authError}\n          />\n        </div>\n      )}\n\n      {/* НАВИГАЦИЯ ПО ДНЯМ */}\n      {user && user.isLoggedIn && tests.length > 0 && (\n        <DayNavigation \n          days={tests.map(day => ({\n            ...day,\n            progress: getDayProgress(day.day, day.tasks)\n          }))}\n          currentDay={currentDay}\n          onDayClick={handleDayClick}\n        />\n      )}\n\n      {/* ОСНОВНОЙ КОНТЕНТ */}\n      {user && user.isLoggedIn ? (\n        <div className=\"container mx-auto p-14 max-w-4xl\">\n          <div className=\"grid gap-16\">\n            {tests.map(dayData => {\n              const dayProgress = getDayProgress(dayData.day, dayData.tasks);\n              \n              return (\n                <div key={dayData.day} id={`day-${dayData.day}`} className=\"bg-white dark:bg-gray-800 rounded-xl shadow-md p-6\">\n                  <div className=\"flex justify-between items-start mb-4\">\n                    <div className=\"flex-1 min-w-0\">\n                      <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-1\">\n                        {t('days.day', \"День\")} {dayData.day}\n                      </h2>\n                      <p className=\"text-lg text-gray-800 dark:text-gray-200 font-medium\">\n                        {t(dayData.titleKey)}\n                      </p>\n                    </div>\n                    \n                    <div className=\"flex flex-col items-end space-y-1 flex-shrink-0\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-sm font-semibold text-gray-600 dark:text-gray-400\">\n                          {dayProgress}%\n                        </span>\n                        <div className=\"w-20 bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                          <div \n                            className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n                            style={{ width: `${dayProgress}%` }}\n                          />\n                        </div>\n                      </div>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {dayData.tasks?.length || 0} {t('days.tasks', \"заданий\")}\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-3\">\n                    {dayData.tasks?.map((task, index) => {\n                      const isAnswerCorrect = isCorrectAnswerCheck(dayData.day, index, task.answer, answers);\n                      const hasAnswer = answers[`${dayData.day}-${index}`];\n                      \n                      return (\n                        <div key={index} className={`p-4 rounded-lg ${\n                          hasAnswer \n                            ? isAnswerCorrect \n                              ? 'bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800'\n                              : 'bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800'\n                            : 'bg-gray-50 dark:bg-gray-700'\n                        }`}>\n                          <div className=\"flex items-center space-x-3\">\n                            <span className=\"flex-1 text-gray-800 dark:text-gray-200\">\n                              <strong>{t('tasks.task', \"Задача\")} {index + 1}:</strong> {task.question}\n                            </span>\n\n                            <div className=\"flex items-center space-x-2\">\n                              <input\n                                type=\"text\"\n                                placeholder={t('answer', \"Ответ\")}\n                                value={answers[`${dayData.day}-${index}`] || \"\"}\n                                onChange={e => handleAnswerChange(dayData.day, index, e.target.value)}\n                                className=\"w-24 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white text-center\"\n                              />\n                              {hasAnswer && (\n                                isAnswerCorrect ? (\n                                  <span className=\"text-green-500 text-xl\" title={t('correct', \"Правильно!\")}>✅</span>\n                                ) : (\n                                  <span className=\"text-red-500 text-xl\" title={t('try_again', \"Попробуйте еще раз\")}>❌</span>\n                                )\n                              )}\n                            </div>\n                          </div>\n                          \n                          {task.answerFormat && (\n                            <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                              💡 {t('answerFormat.hint', \"Формат ответа\")}: {task.answerFormat}\n                            </div>\n                          )}\n                          \n                          {hasAnswer && !isAnswerCorrect && task.explanation && (\n                            <div className=\"mt-2 p-2 bg-blue-50 dark:bg-blue-900/20 rounded-md\">\n                              <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n                                💡 {task.explanation}\n                              </p>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n\n                  {dayData.theoryLink && (\n                    <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-600\">\n                      <a\n                        href={dayData.theoryLink}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-blue-600 dark:text-blue-400 hover:underline text-sm flex items-center\"\n                      >\n                        📖 {t('days.theory', \"Теоретические материалы\")} \"{t(dayData.titleKey)}\"\n                      </a>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n\n          <div className=\"mt-8 text-center text-gray-500 dark:text-gray-400 text-sm\">\n            <p>{t('footer.course_description', \"Курс для закрепления знаний по математике за 6 класс\")}</p>\n            <p>© 2025 Math Academy | {t('footer.generated', \"Задания генерируются случайно\")}</p>\n          </div>\n        </div>\n      ) : (\n        <div className=\"min-h-screen flex items-center justify-center px-4\">\n          <div className=\"text-center max-w-2xl mx-auto\">\n            <div className=\"mb-8 flex justify-center\">\n              <div className=\"w-32 h-32 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-6xl\">\n                📚\n              </div>\n            </div>\n            \n            <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6\">\n              {t('auth.welcome', \"Добро пожаловать в Math Academy!\")}\n            </h1>\n            \n            <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-8 max-w-md mx-auto leading-relaxed\">\n              {t('auth.prompt', \"Войдите или зарегистрируйтесь чтобы начать обучение\")}\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-12\">\n              <button\n                onClick={handleLoginClick}\n                className=\"bg-blue-500 hover:bg-blue-600 text-white px-8 py-3 rounded-lg font-medium text-lg transition-colors shadow-lg\"\n              >\n                {t('header.login', \"Войти\")}\n              </button>\n              <button\n                onClick={handleRegisterClick}\n                className=\"bg-green-500 hover:bg-green-600 text-white px-8 py-3 rounded-lg font-medium text-lg transition-colors shadow-lg\"\n              >\n                {t('header.register', \"Регистрация\")}\n              </button>\n            </div>\n            \n            <div className=\"border-t border-gray-200 dark:border-gray-700 pt-8\">\n              <p className=\"text-lg text-gray-500 dark:text-gray-400 italic\">\n                {t('slogan', \"От математических основ к образовательной экосистеме! 🚀\")}\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* ПОДТВЕРЖДЕНИЕ СБРОСА ПРОГРЕССА */}\n      {showResetConfirm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 m-4 max-w-md w-full\">\n            <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-2\">\n              🔄 {t('reset.new_tasks', \"Новые задания\")}\n            </h3>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n              {t('reset.confirmation', \"Вы уверены, что хотите сгенерировать новые задания? Весь текущий прогресс будет сброшен.\")}\n            </p>\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowResetConfirm(false)}\n                className=\"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\n              >\n                {t('reset.cancel', \"Отмена\")}\n              </button>\n              <button\n                onClick={() => {\n                  resetProgress();\n                  setShowResetConfirm(false);\n                }}\n                className=\"flex-1 px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors\"\n              >\n                {t('reset.generate', \"Сгенерировать\")}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* КНОПКА НАВЕРХ */}\n      {showScrollTop && (\n        <button \n          onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\n          className=\"fixed bottom-6 right-6 z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-500 rounded-full w-10 h-10 flex items-center justify-center shadow-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-all text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-gray-100\"\n          aria-label=\"Наверх\"\n        >\n          ↑\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}