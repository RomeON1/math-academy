{"ast":null,"code":"// day2-geometry.js\nconst getRandomInt=(min,max)=>Math.floor(Math.random()*(max-min+1))+min;export const geometryGenerator=(count,t)=>{const tasks=[];const usedQuestions=new Set();while(tasks.length<count){let question,answer,explanation,answerFormat;let translationKey,translationParams,explanationKey,explanationParams,formatKey;let type=getRandomInt(1,10);switch(type){case 1:// Периметр квадрата\nconst side1=getRandomInt(3,12);const perimeter1=side1*4;question=\"\\u041F\\u0435\\u0440\\u0438\\u043C\\u0435\\u0442\\u0440 \\u043A\\u0432\\u0430\\u0434\\u0440\\u0430\\u0442\\u0430 \\u0441\\u043E \\u0441\\u0442\\u043E\\u0440\\u043E\\u043D\\u043E\\u0439 \".concat(side1,\" \\u0441\\u043C?\");translationKey='tasks.geometry.perimeter_square';translationParams={side:side1};answer=perimeter1.toString();explanation=\"\\u041F\\u0435\\u0440\\u0438\\u043C\\u0435\\u0442\\u0440 = 4 \\xD7 \".concat(side1,\" = \").concat(perimeter1,\" \\u0441\\u043C\");explanationKey='tasks.geometry.perimeter_square_explanation';explanationParams={side:side1,result:perimeter1};answerFormat=\"число\";formatKey='answerFormats.number';break;case 2:// Площадь прямоугольника\nconst width2=getRandomInt(4,10);const height2=getRandomInt(5,15);const area2=width2*height2;question=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043F\\u0440\\u044F\\u043C\\u043E\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430 \".concat(width2,\"\\xD7\").concat(height2,\" \\u0441\\u043C?\");translationKey='tasks.geometry.area_rectangle';translationParams={width:width2,height:height2};answer=area2.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C = \".concat(width2,\" \\xD7 \").concat(height2,\" = \").concat(area2,\" \\u0441\\u043C\\xB2\");explanationKey='tasks.geometry.area_rectangle_explanation';explanationParams={width:width2,height:height2,result:area2};answerFormat=\"число (в см²)\";formatKey='answerFormats.cm2';break;case 3:// Площадь треугольника\nconst base3=getRandomInt(6,15);const height3=getRandomInt(4,12);const area3=Math.round(base3*height3/2);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u0442\\u0440\\u0435\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430 \\u0441 \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\u043C \".concat(base3,\" \\u0441\\u043C \\u0438 \\u0432\\u044B\\u0441\\u043E\\u0442\\u043E\\u0439 \").concat(height3,\" \\u0441\\u043C\");translationKey='tasks.geometry.area_triangle';translationParams={base:base3,height:height3};answer=area3.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C = (\".concat(base3,\" \\xD7 \").concat(height3,\") / 2 = \").concat(area3,\" \\u0441\\u043C\\xB2\");explanationKey='tasks.geometry.area_triangle_explanation';explanationParams={base:base3,height:height3,result:area3};answerFormat=\"число (в см²)\";formatKey='answerFormats.cm2';break;case 4:// Длина окружности\nconst radius4=getRandomInt(2,10);const circumference4=Math.round(2*3.14*radius4);question=\"\\u0414\\u043B\\u0438\\u043D\\u0430 \\u043E\\u043A\\u0440\\u0443\\u0436\\u043D\\u043E\\u0441\\u0442\\u0438 \\u0440\\u0430\\u0434\\u0438\\u0443\\u0441\\u043E\\u043C \".concat(radius4,\" \\u0441\\u043C (\\u03C0\\u22483.14)?\");translationKey='tasks.geometry.circumference';translationParams={radius:radius4};answer=circumference4.toString();explanation=\"\\u0414\\u043B\\u0438\\u043D\\u0430 = 2 \\xD7 3.14 \\xD7 \".concat(radius4,\" = \").concat(circumference4,\" \\u0441\\u043C\");explanationKey='tasks.geometry.circumference_explanation';explanationParams={radius:radius4,result:circumference4};answerFormat=\"число\";formatKey='answerFormats.number';break;case 5:// Площадь круга\nconst radius5=getRandomInt(3,8);const area5=Math.round(3.14*radius5*radius5);question=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043A\\u0440\\u0443\\u0433\\u0430 \\u0440\\u0430\\u0434\\u0438\\u0443\\u0441\\u043E\\u043C \".concat(radius5,\" \\u0441\\u043C (\\u03C0\\u22483.14)?\");translationKey='tasks.geometry.area_circle';translationParams={radius:radius5};answer=area5.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C = 3.14 \\xD7 \".concat(radius5,\"\\xB2 = \").concat(area5,\" \\u0441\\u043C\\xB2\");explanationKey='tasks.geometry.area_circle_explanation';explanationParams={radius:radius5,result:area5};answerFormat=\"число (в см²)\";formatKey='answerFormats.cm2';break;case 6:// Объем куба\nconst edge6=getRandomInt(2,7);const volume6=edge6*edge6*edge6;question=\"\\u041E\\u0431\\u044A\\u0435\\u043C \\u043A\\u0443\\u0431\\u0430 \\u0441 \\u0440\\u0435\\u0431\\u0440\\u043E\\u043C \".concat(edge6,\" \\u0441\\u043C?\");translationKey='tasks.geometry.volume_cube';translationParams={edge:edge6};answer=volume6.toString();explanation=\"\\u041E\\u0431\\u044A\\u0435\\u043C = \".concat(edge6,\" \\xD7 \").concat(edge6,\" \\xD7 \").concat(edge6,\" = \").concat(volume6,\" \\u0441\\u043C\\xB3\");explanationKey='tasks.geometry.volume_cube_explanation';explanationParams={edge:edge6,result:volume6};answerFormat=\"число (в см³)\";formatKey='answerFormats.cm3';break;case 7:// Углы треугольника\nconst angle17=getRandomInt(30,70);const angle27=getRandomInt(30,70);const angle37=180-angle17-angle27;question=\"\\u0414\\u0432\\u0430 \\u0443\\u0433\\u043B\\u0430 \\u0442\\u0440\\u0435\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430 \\u0440\\u0430\\u0432\\u043D\\u044B \".concat(angle17,\"\\xB0 \\u0438 \").concat(angle27,\"\\xB0. \\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0440\\u0435\\u0442\\u0438\\u0439 \\u0443\\u0433\\u043E\\u043B.\");translationKey='tasks.geometry.triangle_angles';translationParams={angle1:angle17,angle2:angle27};answer=angle37.toString();explanation=\"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u0443\\u0433\\u043B\\u043E\\u0432 = 180\\xB0, \\u0442\\u0440\\u0435\\u0442\\u0438\\u0439 \\u0443\\u0433\\u043E\\u043B = 180 - \".concat(angle17,\" - \").concat(angle27,\" = \").concat(angle37,\"\\xB0\");explanationKey='tasks.geometry.triangle_angles_explanation';explanationParams={angle1:angle17,angle2:angle27,result:angle37};answerFormat=\"число\";formatKey='answerFormats.number';break;case 8:// Периметр треугольника\nconst side18=getRandomInt(5,12);const side28=getRandomInt(6,14);const side38=getRandomInt(7,16);const perimeter8=side18+side28+side38;question=\"\\u041F\\u0435\\u0440\\u0438\\u043C\\u0435\\u0442\\u0440 \\u0442\\u0440\\u0435\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430 \\u0441\\u043E \\u0441\\u0442\\u043E\\u0440\\u043E\\u043D\\u0430\\u043C\\u0438 \".concat(side18,\" \\u0441\\u043C, \").concat(side28,\" \\u0441\\u043C \\u0438 \").concat(side38,\" \\u0441\\u043C?\");translationKey='tasks.geometry.perimeter_triangle';translationParams={side1:side18,side2:side28,side3:side38};answer=perimeter8.toString();explanation=\"\\u041F\\u0435\\u0440\\u0438\\u043C\\u0435\\u0442\\u0440 = \".concat(side18,\" + \").concat(side28,\" + \").concat(side38,\" = \").concat(perimeter8,\" \\u0441\\u043C\");explanationKey='tasks.geometry.perimeter_triangle_explanation';explanationParams={side1:side18,side2:side28,side3:side38,result:perimeter8};answerFormat=\"число\";formatKey='answerFormats.number';break;case 9:// Объем прямоугольного параллелепипеда\nconst length9=getRandomInt(4,10);const width9=getRandomInt(3,8);const height9=getRandomInt(5,12);const volume9=length9*width9*height9;question=\"\\u041E\\u0431\\u044A\\u0435\\u043C \\u043F\\u0440\\u044F\\u043C\\u043E\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043F\\u0430\\u0440\\u0430\\u043B\\u043B\\u0435\\u043B\\u0435\\u043F\\u0438\\u043F\\u0435\\u0434\\u0430 \".concat(length9,\"\\xD7\").concat(width9,\"\\xD7\").concat(height9,\" \\u0441\\u043C?\");translationKey='tasks.geometry.volume_rectangular';translationParams={length:length9,width:width9,height:height9};answer=volume9.toString();explanation=\"\\u041E\\u0431\\u044A\\u0435\\u043C = \".concat(length9,\" \\xD7 \").concat(width9,\" \\xD7 \").concat(height9,\" = \").concat(volume9,\" \\u0441\\u043C\\xB3\");explanationKey='tasks.geometry.volume_rectangular_explanation';explanationParams={length:length9,width:width9,height:height9,result:volume9};answerFormat=\"число (в см³)\";formatKey='answerFormats.cm3';break;case 10:// Диаметр окружности\nconst radius10=getRandomInt(3,12);const diameter10=radius10*2;question=\"\\u0414\\u0438\\u0430\\u043C\\u0435\\u0442\\u0440 \\u043E\\u043A\\u0440\\u0443\\u0436\\u043D\\u043E\\u0441\\u0442\\u0438 \\u0440\\u0430\\u0434\\u0438\\u0443\\u0441\\u043E\\u043C \".concat(radius10,\" \\u0441\\u043C?\");translationKey='tasks.geometry.diameter';translationParams={radius:radius10};answer=diameter10.toString();explanation=\"\\u0414\\u0438\\u0430\\u043C\\u0435\\u0442\\u0440 = 2 \\xD7 \".concat(radius10,\" = \").concat(diameter10,\" \\u0441\\u043C\");explanationKey='tasks.geometry.diameter_explanation';explanationParams={radius:radius10,result:diameter10};answerFormat=\"число\";formatKey='answerFormats.number';break;default:type=getRandomInt(1,10);continue;}if(!usedQuestions.has(question)){usedQuestions.add(question);tasks.push({question,answer,explanation,answerFormat,translationKey,translationParams,explanationKey,explanationParams,formatKey});}}return tasks;};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","geometryGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","side1","perimeter1","concat","side","toString","result","width2","height2","area2","width","height","base3","height3","area3","round","base","radius4","circumference4","radius","radius5","area5","edge6","volume6","edge","angle17","angle27","angle37","angle1","angle2","side18","side28","side38","perimeter8","side2","side3","length9","width9","height9","volume9","radius10","diameter10","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day2-geometry.js"],"sourcesContent":["// day2-geometry.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const geometryGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Периметр квадрата\n        const side1 = getRandomInt(3, 12);\n        const perimeter1 = side1 * 4;\n        question = `Периметр квадрата со стороной ${side1} см?`;\n        translationKey = 'tasks.geometry.perimeter_square';\n        translationParams = { side: side1 };\n        answer = perimeter1.toString();\n        explanation = `Периметр = 4 × ${side1} = ${perimeter1} см`;\n        explanationKey = 'tasks.geometry.perimeter_square_explanation';\n        explanationParams = { side: side1, result: perimeter1 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 2: // Площадь прямоугольника\n        const width2 = getRandomInt(4, 10);\n        const height2 = getRandomInt(5, 15);\n        const area2 = width2 * height2;\n        question = `Площадь прямоугольника ${width2}×${height2} см?`;\n        translationKey = 'tasks.geometry.area_rectangle';\n        translationParams = { width: width2, height: height2 };\n        answer = area2.toString();\n        explanation = `Площадь = ${width2} × ${height2} = ${area2} см²`;\n        explanationKey = 'tasks.geometry.area_rectangle_explanation';\n        explanationParams = { width: width2, height: height2, result: area2 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 3: // Площадь треугольника\n        const base3 = getRandomInt(6, 15);\n        const height3 = getRandomInt(4, 12);\n        const area3 = Math.round((base3 * height3) / 2);\n        question = `Найдите площадь треугольника с основанием ${base3} см и высотой ${height3} см`;\n        translationKey = 'tasks.geometry.area_triangle';\n        translationParams = { base: base3, height: height3 };\n        answer = area3.toString();\n        explanation = `Площадь = (${base3} × ${height3}) / 2 = ${area3} см²`;\n        explanationKey = 'tasks.geometry.area_triangle_explanation';\n        explanationParams = { base: base3, height: height3, result: area3 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 4: // Длина окружности\n        const radius4 = getRandomInt(2, 10);\n        const circumference4 = Math.round(2 * 3.14 * radius4);\n        question = `Длина окружности радиусом ${radius4} см (π≈3.14)?`;\n        translationKey = 'tasks.geometry.circumference';\n        translationParams = { radius: radius4 };\n        answer = circumference4.toString();\n        explanation = `Длина = 2 × 3.14 × ${radius4} = ${circumference4} см`;\n        explanationKey = 'tasks.geometry.circumference_explanation';\n        explanationParams = { radius: radius4, result: circumference4 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 5: // Площадь круга\n        const radius5 = getRandomInt(3, 8);\n        const area5 = Math.round(3.14 * radius5 * radius5);\n        question = `Площадь круга радиусом ${radius5} см (π≈3.14)?`;\n        translationKey = 'tasks.geometry.area_circle';\n        translationParams = { radius: radius5 };\n        answer = area5.toString();\n        explanation = `Площадь = 3.14 × ${radius5}² = ${area5} см²`;\n        explanationKey = 'tasks.geometry.area_circle_explanation';\n        explanationParams = { radius: radius5, result: area5 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 6: // Объем куба\n        const edge6 = getRandomInt(2, 7);\n        const volume6 = edge6 * edge6 * edge6;\n        question = `Объем куба с ребром ${edge6} см?`;\n        translationKey = 'tasks.geometry.volume_cube';\n        translationParams = { edge: edge6 };\n        answer = volume6.toString();\n        explanation = `Объем = ${edge6} × ${edge6} × ${edge6} = ${volume6} см³`;\n        explanationKey = 'tasks.geometry.volume_cube_explanation';\n        explanationParams = { edge: edge6, result: volume6 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 7: // Углы треугольника\n        const angle17 = getRandomInt(30, 70);\n        const angle27 = getRandomInt(30, 70);\n        const angle37 = 180 - angle17 - angle27;\n        question = `Два угла треугольника равны ${angle17}° и ${angle27}°. Найдите третий угол.`;\n        translationKey = 'tasks.geometry.triangle_angles';\n        translationParams = { angle1: angle17, angle2: angle27 };\n        answer = angle37.toString();\n        explanation = `Сумма углов = 180°, третий угол = 180 - ${angle17} - ${angle27} = ${angle37}°`;\n        explanationKey = 'tasks.geometry.triangle_angles_explanation';\n        explanationParams = { angle1: angle17, angle2: angle27, result: angle37 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 8: // Периметр треугольника\n        const side18 = getRandomInt(5, 12);\n        const side28 = getRandomInt(6, 14);\n        const side38 = getRandomInt(7, 16);\n        const perimeter8 = side18 + side28 + side38;\n        question = `Периметр треугольника со сторонами ${side18} см, ${side28} см и ${side38} см?`;\n        translationKey = 'tasks.geometry.perimeter_triangle';\n        translationParams = { side1: side18, side2: side28, side3: side38 };\n        answer = perimeter8.toString();\n        explanation = `Периметр = ${side18} + ${side28} + ${side38} = ${perimeter8} см`;\n        explanationKey = 'tasks.geometry.perimeter_triangle_explanation';\n        explanationParams = { side1: side18, side2: side28, side3: side38, result: perimeter8 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 9: // Объем прямоугольного параллелепипеда\n        const length9 = getRandomInt(4, 10);\n        const width9 = getRandomInt(3, 8);\n        const height9 = getRandomInt(5, 12);\n        const volume9 = length9 * width9 * height9;\n        question = `Объем прямоугольного параллелепипеда ${length9}×${width9}×${height9} см?`;\n        translationKey = 'tasks.geometry.volume_rectangular';\n        translationParams = { length: length9, width: width9, height: height9 };\n        answer = volume9.toString();\n        explanation = `Объем = ${length9} × ${width9} × ${height9} = ${volume9} см³`;\n        explanationKey = 'tasks.geometry.volume_rectangular_explanation';\n        explanationParams = { length: length9, width: width9, height: height9, result: volume9 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 10: // Диаметр окружности\n        const radius10 = getRandomInt(3, 12);\n        const diameter10 = radius10 * 2;\n        question = `Диаметр окружности радиусом ${radius10} см?`;\n        translationKey = 'tasks.geometry.diameter';\n        translationParams = { radius: radius10 };\n        answer = diameter10.toString();\n        explanation = `Диаметр = 2 × ${radius10} = ${diameter10} см`;\n        explanationKey = 'tasks.geometry.diameter_explanation';\n        explanationParams = { radius: radius10, result: diameter10 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"AAAA;AACA,KAAM,CAAAA,YAAY,CAAGA,CAACC,GAAG,CAAEC,GAAG,GAAKC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAIH,GAAG,CAAGD,GAAG,CAAG,CAAC,CAAC,CAAC,CAAGA,GAAG,CAEpF,MAAO,MAAM,CAAAK,iBAAiB,CAAGA,CAACC,KAAK,CAAEC,CAAC,GAAK,CAC7C,KAAM,CAAAC,KAAK,CAAG,EAAE,CAChB,KAAM,CAAAC,aAAa,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CAE/B,MAAOF,KAAK,CAACG,MAAM,CAAGL,KAAK,CAAE,CAC3B,GAAI,CAAAM,QAAQ,CAAEC,MAAM,CAAEC,WAAW,CAAEC,YAAY,CAC/C,GAAI,CAAAC,cAAc,CAAEC,iBAAiB,CAAEC,cAAc,CAAEC,iBAAiB,CAAEC,SAAS,CACnF,GAAI,CAAAC,IAAI,CAAGtB,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CAE9B,OAAQsB,IAAI,EACV,IAAK,EAAC,CAAE;AACN,KAAM,CAAAC,KAAK,CAAGvB,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACjC,KAAM,CAAAwB,UAAU,CAAGD,KAAK,CAAG,CAAC,CAC5BV,QAAQ,oKAAAY,MAAA,CAAoCF,KAAK,kBAAM,CACvDN,cAAc,CAAG,iCAAiC,CAClDC,iBAAiB,CAAG,CAAEQ,IAAI,CAAEH,KAAM,CAAC,CACnCT,MAAM,CAAGU,UAAU,CAACG,QAAQ,CAAC,CAAC,CAC9BZ,WAAW,8DAAAU,MAAA,CAAqBF,KAAK,QAAAE,MAAA,CAAMD,UAAU,iBAAK,CAC1DL,cAAc,CAAG,6CAA6C,CAC9DC,iBAAiB,CAAG,CAAEM,IAAI,CAAEH,KAAK,CAAEK,MAAM,CAAEJ,UAAW,CAAC,CACvDR,YAAY,CAAG,OAAO,CACtBK,SAAS,CAAG,sBAAsB,CAClC,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAQ,MAAM,CAAG7B,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CAClC,KAAM,CAAA8B,OAAO,CAAG9B,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACnC,KAAM,CAAA+B,KAAK,CAAGF,MAAM,CAAGC,OAAO,CAC9BjB,QAAQ,oIAAAY,MAAA,CAA6BI,MAAM,SAAAJ,MAAA,CAAIK,OAAO,kBAAM,CAC5Db,cAAc,CAAG,+BAA+B,CAChDC,iBAAiB,CAAG,CAAEc,KAAK,CAAEH,MAAM,CAAEI,MAAM,CAAEH,OAAQ,CAAC,CACtDhB,MAAM,CAAGiB,KAAK,CAACJ,QAAQ,CAAC,CAAC,CACzBZ,WAAW,iDAAAU,MAAA,CAAgBI,MAAM,WAAAJ,MAAA,CAAMK,OAAO,QAAAL,MAAA,CAAMM,KAAK,qBAAM,CAC/DZ,cAAc,CAAG,2CAA2C,CAC5DC,iBAAiB,CAAG,CAAEY,KAAK,CAAEH,MAAM,CAAEI,MAAM,CAAEH,OAAO,CAAEF,MAAM,CAAEG,KAAM,CAAC,CACrEf,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAa,KAAK,CAAGlC,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACjC,KAAM,CAAAmC,OAAO,CAAGnC,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACnC,KAAM,CAAAoC,KAAK,CAAGjC,IAAI,CAACkC,KAAK,CAAEH,KAAK,CAAGC,OAAO,CAAI,CAAC,CAAC,CAC/CtB,QAAQ,uOAAAY,MAAA,CAAgDS,KAAK,qEAAAT,MAAA,CAAiBU,OAAO,iBAAK,CAC1FlB,cAAc,CAAG,8BAA8B,CAC/CC,iBAAiB,CAAG,CAAEoB,IAAI,CAAEJ,KAAK,CAAED,MAAM,CAAEE,OAAQ,CAAC,CACpDrB,MAAM,CAAGsB,KAAK,CAACT,QAAQ,CAAC,CAAC,CACzBZ,WAAW,kDAAAU,MAAA,CAAiBS,KAAK,WAAAT,MAAA,CAAMU,OAAO,aAAAV,MAAA,CAAWW,KAAK,qBAAM,CACpEjB,cAAc,CAAG,0CAA0C,CAC3DC,iBAAiB,CAAG,CAAEkB,IAAI,CAAEJ,KAAK,CAAED,MAAM,CAAEE,OAAO,CAAEP,MAAM,CAAEQ,KAAM,CAAC,CACnEpB,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAkB,OAAO,CAAGvC,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACnC,KAAM,CAAAwC,cAAc,CAAGrC,IAAI,CAACkC,KAAK,CAAC,CAAC,CAAG,IAAI,CAAGE,OAAO,CAAC,CACrD1B,QAAQ,iJAAAY,MAAA,CAAgCc,OAAO,qCAAe,CAC9DtB,cAAc,CAAG,8BAA8B,CAC/CC,iBAAiB,CAAG,CAAEuB,MAAM,CAAEF,OAAQ,CAAC,CACvCzB,MAAM,CAAG0B,cAAc,CAACb,QAAQ,CAAC,CAAC,CAClCZ,WAAW,sDAAAU,MAAA,CAAyBc,OAAO,QAAAd,MAAA,CAAMe,cAAc,iBAAK,CACpErB,cAAc,CAAG,0CAA0C,CAC3DC,iBAAiB,CAAG,CAAEqB,MAAM,CAAEF,OAAO,CAAEX,MAAM,CAAEY,cAAe,CAAC,CAC/DxB,YAAY,CAAG,OAAO,CACtBK,SAAS,CAAG,sBAAsB,CAClC,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAqB,OAAO,CAAG1C,YAAY,CAAC,CAAC,CAAE,CAAC,CAAC,CAClC,KAAM,CAAA2C,KAAK,CAAGxC,IAAI,CAACkC,KAAK,CAAC,IAAI,CAAGK,OAAO,CAAGA,OAAO,CAAC,CAClD7B,QAAQ,+HAAAY,MAAA,CAA6BiB,OAAO,qCAAe,CAC3DzB,cAAc,CAAG,4BAA4B,CAC7CC,iBAAiB,CAAG,CAAEuB,MAAM,CAAEC,OAAQ,CAAC,CACvC5B,MAAM,CAAG6B,KAAK,CAAChB,QAAQ,CAAC,CAAC,CACzBZ,WAAW,2DAAAU,MAAA,CAAuBiB,OAAO,YAAAjB,MAAA,CAAOkB,KAAK,qBAAM,CAC3DxB,cAAc,CAAG,wCAAwC,CACzDC,iBAAiB,CAAG,CAAEqB,MAAM,CAAEC,OAAO,CAAEd,MAAM,CAAEe,KAAM,CAAC,CACtD3B,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAuB,KAAK,CAAG5C,YAAY,CAAC,CAAC,CAAE,CAAC,CAAC,CAChC,KAAM,CAAA6C,OAAO,CAAGD,KAAK,CAAGA,KAAK,CAAGA,KAAK,CACrC/B,QAAQ,wGAAAY,MAAA,CAA0BmB,KAAK,kBAAM,CAC7C3B,cAAc,CAAG,4BAA4B,CAC7CC,iBAAiB,CAAG,CAAE4B,IAAI,CAAEF,KAAM,CAAC,CACnC9B,MAAM,CAAG+B,OAAO,CAAClB,QAAQ,CAAC,CAAC,CAC3BZ,WAAW,qCAAAU,MAAA,CAAcmB,KAAK,WAAAnB,MAAA,CAAMmB,KAAK,WAAAnB,MAAA,CAAMmB,KAAK,QAAAnB,MAAA,CAAMoB,OAAO,qBAAM,CACvE1B,cAAc,CAAG,wCAAwC,CACzDC,iBAAiB,CAAG,CAAE0B,IAAI,CAAEF,KAAK,CAAEhB,MAAM,CAAEiB,OAAQ,CAAC,CACpD7B,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAA0B,OAAO,CAAG/C,YAAY,CAAC,EAAE,CAAE,EAAE,CAAC,CACpC,KAAM,CAAAgD,OAAO,CAAGhD,YAAY,CAAC,EAAE,CAAE,EAAE,CAAC,CACpC,KAAM,CAAAiD,OAAO,CAAG,GAAG,CAAGF,OAAO,CAAGC,OAAO,CACvCnC,QAAQ,wJAAAY,MAAA,CAAkCsB,OAAO,iBAAAtB,MAAA,CAAOuB,OAAO,mHAAyB,CACxF/B,cAAc,CAAG,gCAAgC,CACjDC,iBAAiB,CAAG,CAAEgC,MAAM,CAAEH,OAAO,CAAEI,MAAM,CAAEH,OAAQ,CAAC,CACxDlC,MAAM,CAAGmC,OAAO,CAACtB,QAAQ,CAAC,CAAC,CAC3BZ,WAAW,mJAAAU,MAAA,CAA8CsB,OAAO,QAAAtB,MAAA,CAAMuB,OAAO,QAAAvB,MAAA,CAAMwB,OAAO,QAAG,CAC7F9B,cAAc,CAAG,4CAA4C,CAC7DC,iBAAiB,CAAG,CAAE8B,MAAM,CAAEH,OAAO,CAAEI,MAAM,CAAEH,OAAO,CAAEpB,MAAM,CAAEqB,OAAQ,CAAC,CACzEjC,YAAY,CAAG,OAAO,CACtBK,SAAS,CAAG,sBAAsB,CAClC,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAA+B,MAAM,CAAGpD,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CAClC,KAAM,CAAAqD,MAAM,CAAGrD,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CAClC,KAAM,CAAAsD,MAAM,CAAGtD,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CAClC,KAAM,CAAAuD,UAAU,CAAGH,MAAM,CAAGC,MAAM,CAAGC,MAAM,CAC3CzC,QAAQ,kMAAAY,MAAA,CAAyC2B,MAAM,oBAAA3B,MAAA,CAAQ4B,MAAM,0BAAA5B,MAAA,CAAS6B,MAAM,kBAAM,CAC1FrC,cAAc,CAAG,mCAAmC,CACpDC,iBAAiB,CAAG,CAAEK,KAAK,CAAE6B,MAAM,CAAEI,KAAK,CAAEH,MAAM,CAAEI,KAAK,CAAEH,MAAO,CAAC,CACnExC,MAAM,CAAGyC,UAAU,CAAC5B,QAAQ,CAAC,CAAC,CAC9BZ,WAAW,uDAAAU,MAAA,CAAiB2B,MAAM,QAAA3B,MAAA,CAAM4B,MAAM,QAAA5B,MAAA,CAAM6B,MAAM,QAAA7B,MAAA,CAAM8B,UAAU,iBAAK,CAC/EpC,cAAc,CAAG,+CAA+C,CAChEC,iBAAiB,CAAG,CAAEG,KAAK,CAAE6B,MAAM,CAAEI,KAAK,CAAEH,MAAM,CAAEI,KAAK,CAAEH,MAAM,CAAE1B,MAAM,CAAE2B,UAAW,CAAC,CACvFvC,YAAY,CAAG,OAAO,CACtBK,SAAS,CAAG,sBAAsB,CAClC,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAqC,OAAO,CAAG1D,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACnC,KAAM,CAAA2D,MAAM,CAAG3D,YAAY,CAAC,CAAC,CAAE,CAAC,CAAC,CACjC,KAAM,CAAA4D,OAAO,CAAG5D,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACnC,KAAM,CAAA6D,OAAO,CAAGH,OAAO,CAAGC,MAAM,CAAGC,OAAO,CAC1C/C,QAAQ,mNAAAY,MAAA,CAA2CiC,OAAO,SAAAjC,MAAA,CAAIkC,MAAM,SAAAlC,MAAA,CAAImC,OAAO,kBAAM,CACrF3C,cAAc,CAAG,mCAAmC,CACpDC,iBAAiB,CAAG,CAAEN,MAAM,CAAE8C,OAAO,CAAE1B,KAAK,CAAE2B,MAAM,CAAE1B,MAAM,CAAE2B,OAAQ,CAAC,CACvE9C,MAAM,CAAG+C,OAAO,CAAClC,QAAQ,CAAC,CAAC,CAC3BZ,WAAW,qCAAAU,MAAA,CAAciC,OAAO,WAAAjC,MAAA,CAAMkC,MAAM,WAAAlC,MAAA,CAAMmC,OAAO,QAAAnC,MAAA,CAAMoC,OAAO,qBAAM,CAC5E1C,cAAc,CAAG,+CAA+C,CAChEC,iBAAiB,CAAG,CAAER,MAAM,CAAE8C,OAAO,CAAE1B,KAAK,CAAE2B,MAAM,CAAE1B,MAAM,CAAE2B,OAAO,CAAEhC,MAAM,CAAEiC,OAAQ,CAAC,CACxF7C,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,GAAE,CAAE;AACP,KAAM,CAAAyC,QAAQ,CAAG9D,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACpC,KAAM,CAAA+D,UAAU,CAAGD,QAAQ,CAAG,CAAC,CAC/BjD,QAAQ,6JAAAY,MAAA,CAAkCqC,QAAQ,kBAAM,CACxD7C,cAAc,CAAG,yBAAyB,CAC1CC,iBAAiB,CAAG,CAAEuB,MAAM,CAAEqB,QAAS,CAAC,CACxChD,MAAM,CAAGiD,UAAU,CAACpC,QAAQ,CAAC,CAAC,CAC9BZ,WAAW,wDAAAU,MAAA,CAAoBqC,QAAQ,QAAArC,MAAA,CAAMsC,UAAU,iBAAK,CAC5D5C,cAAc,CAAG,qCAAqC,CACtDC,iBAAiB,CAAG,CAAEqB,MAAM,CAAEqB,QAAQ,CAAElC,MAAM,CAAEmC,UAAW,CAAC,CAC5D/C,YAAY,CAAG,OAAO,CACtBK,SAAS,CAAG,sBAAsB,CAClC,MAEF,QACEC,IAAI,CAAGtB,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CAC1B,SACJ,CAEA,GAAI,CAACU,aAAa,CAACsD,GAAG,CAACnD,QAAQ,CAAC,CAAE,CAChCH,aAAa,CAACuD,GAAG,CAACpD,QAAQ,CAAC,CAC3BJ,KAAK,CAACyD,IAAI,CAAC,CACTrD,QAAQ,CACRC,MAAM,CACNC,WAAW,CACXC,YAAY,CACZC,cAAc,CACdC,iBAAiB,CACjBC,cAAc,CACdC,iBAAiB,CACjBC,SACF,CAAC,CAAC,CACJ,CACF,CACA,MAAO,CAAAZ,KAAK,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}