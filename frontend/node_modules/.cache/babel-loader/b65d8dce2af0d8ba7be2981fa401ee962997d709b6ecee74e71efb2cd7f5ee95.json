{"ast":null,"code":"var _jsxFileName = \"/opt/math-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport { authAPI, courseAPI, userAPI } from './services/api';\nimport { courseStructure } from './taskGenerators';\nimport * as taskGenerators from './taskGenerators';\nimport { useTranslation } from 'react-i18next';\nimport DayNavigation from './components/DayNavigation';\n\n// 🟢 УЛУЧШЕННЫЙ ДЕТЕКТОР СБРОСА КЭША\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst detectCacheClear = () => {\n  const cacheFlag = sessionStorage.getItem('cacheWasCleared');\n  const hasAuthToken = localStorage.getItem('authToken');\n  const hasLocalData = localStorage.getItem('userMathTests') && localStorage.getItem('userMathAnswers');\n\n  // Если есть токен но нет локальных данных - значит кеш сброшен\n  if (hasAuthToken && !hasLocalData) {\n    console.log('🚨 ОБНАРУЖЕН СБРОС КЭША: есть токен но нет локальных данных');\n    sessionStorage.setItem('cacheWasCleared', 'true');\n    return true;\n  }\n  return cacheFlag === 'true';\n};\n\n// Функция для применения переводов к заданиям\nconst applyTranslationsToTasks = (tasks, t) => {\n  if (!tasks || !Array.isArray(tasks)) return [];\n  return tasks.map(task => ({\n    ...task,\n    question: task.translationKey ? t(task.translationKey, task.translationParams) : task.question,\n    explanation: task.explanationKey ? t(task.explanationKey, task.explanationParams) : task.explanation,\n    answerFormat: task.formatKey ? t(task.formatKey) : task.answerFormat\n  }));\n};\n\n// 🟢 ФУНКЦИЯ ПРОВЕРКИ ПРАВИЛЬНОСТИ ОТВЕТА\nconst isCorrectAnswerCheck = (day, index, correctAnswer, currentAnswers) => {\n  var _currentAnswers;\n  if (!currentAnswers) return false;\n  const userAnswer = (_currentAnswers = currentAnswers[`${day}-${index}`]) === null || _currentAnswers === void 0 ? void 0 : _currentAnswers.toString().trim().toLowerCase();\n  const correct = correctAnswer === null || correctAnswer === void 0 ? void 0 : correctAnswer.toString().toLowerCase();\n  if (!userAnswer || !correct) return false;\n  if (correct.includes('%')) {\n    const userNum = userAnswer.replace('%', '');\n    const correctNum = correct.replace('%', '');\n    return userNum === correctNum;\n  }\n  if (correct.includes('/')) {\n    const [userA, userB] = userAnswer.split('/');\n    const [correctA, correctB] = correct.split('/');\n    return userA === correctA && userB === correctB;\n  }\n  return userAnswer === correct;\n};\nfunction App() {\n  _s();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [tests, setTests] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [showResetConfirm, setShowResetConfirm] = useState(false);\n  const [user, setUser] = useState(null);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [currentDay, setCurrentDay] = useState(1);\n  const [showScrollTop, setShowScrollTop] = useState(false);\n  const [authError, setAuthError] = useState('');\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [recoveryAttempted, setRecoveryAttempted] = useState(false);\n\n  // 🟢 EFFECT ДЛЯ ОТСЛЕЖИВАНИЯ СКРОЛЛА\n  useEffect(() => {\n    const handleScroll = () => {\n      setShowScrollTop(window.scrollY > 300);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // 🟢 EFFECT ДЛЯ ПРОВЕРКИ ЦЕЛОСТНОСТИ ДАННЫХ ПРИ ЗАГРУЗКЕ\n  useEffect(() => {\n    const checkDataIntegrity = () => {\n      const hasAuthToken = localStorage.getItem('authToken');\n      const hasTests = localStorage.getItem('userMathTests');\n      const hasAnswers = localStorage.getItem('userMathAnswers');\n\n      // Если пользователь авторизован но данные повреждены/отсутствуют\n      if (hasAuthToken && (!hasTests || !hasAnswers)) {\n        console.log('🚨 ОБНАРУЖЕНА ПОВРЕЖДЕННАЯ СЕССИЯ - запуск восстановления');\n        sessionStorage.setItem('cacheWasCleared', 'true');\n        setRecoveryAttempted(false);\n      }\n    };\n    checkDataIntegrity();\n  }, []);\n\n  // 🟢 НАДЕЖНАЯ ПРОВЕРКА АУТЕНТИФИКАЦИИ\n  const checkAuth = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        setUser({\n          name: t('header.guest', \"Гость\"),\n          isLoggedIn: false\n        });\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await authAPI.getMe();\n        const userData = {\n          ...response.data,\n          isLoggedIn: true\n        };\n        setUser(userData);\n        localStorage.setItem('userData', JSON.stringify(userData));\n      } catch (error) {\n        console.log('getMe failed, checking localStorage for user data');\n        const savedUser = localStorage.getItem('userData');\n        if (savedUser) {\n          const userData = JSON.parse(savedUser);\n          setUser({\n            ...userData,\n            isLoggedIn: true\n          });\n        } else {\n          const tempUser = {\n            id: Date.now(),\n            name: 'Пользователь',\n            email: 'user@example.com',\n            isLoggedIn: true\n          };\n          setUser(tempUser);\n          localStorage.setItem('userData', JSON.stringify(tempUser));\n        }\n      }\n    } catch (error) {\n      console.error('Auth check error:', error);\n      setUser({\n        name: t('header.guest', \"Гость\"),\n        isLoggedIn: false\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [t]);\n\n  // 🟢 ЗАГРУЗКА ПРИ СТАРТЕ\n  useEffect(() => {\n    checkAuth();\n  }, [checkAuth]);\n\n  // 🟢 УЛУЧШЕННАЯ ФУНКЦИЯ ВОССТАНОВЛЕНИЯ ИЗ БАЗЫ ДАННЫХ\n  const recoverFromDatabase = async () => {\n    if (recoveryAttempted) return;\n    const hasAuthToken = localStorage.getItem('authToken');\n    const hasLocalTests = localStorage.getItem('userMathTests');\n    const hasLocalAnswers = localStorage.getItem('userMathAnswers');\n    console.log('🔍 СТАТУС ВОССТАНОВЛЕНИЯ:', {\n      hasAuthToken: !!hasAuthToken,\n      hasLocalTests: !!hasLocalTests,\n      hasLocalAnswers: !!hasLocalAnswers,\n      recoveryAttempted\n    });\n    const wasCacheCleared = detectCacheClear();\n\n    // 🟢 ИСПРАВЛЕНИЕ: Восстанавливаем из БД всегда когда есть токен, даже если есть локальные данные\n    if (hasAuthToken) {\n      console.log('🚨 ВОССТАНОВЛЕНИЕ ИЗ БД: Пользователь авторизован!');\n      setRecoveryAttempted(true);\n      if (wasCacheCleared) {\n        sessionStorage.removeItem('cacheWasCleared');\n      }\n      try {\n        console.log('📚 Загружаем сохраненные задания из БД...');\n        const tasksResponse = await userAPI.getAllTasks();\n        const dbTasks = tasksResponse.data || {};\n        console.log('✅ Задания из БД:', Object.keys(dbTasks).length, 'дней');\n        console.log('📥 Загружаем ответы из БД...');\n        const answersResponse = await userAPI.getAnswers();\n        const dbAnswers = answersResponse.data || {};\n        console.log('✅ Ответы из БД:', Object.keys(dbAnswers).length, 'записей');\n        let restoredTests = [];\n        let shouldGenerateNewTasks = false;\n        if (Object.keys(dbTasks).length > 0) {\n          console.log('🎯 ВОССТАНАВЛИВАЕМ сохраненные задания из БД');\n          restoredTests = Object.keys(dbTasks).map(dayStr => {\n            const day = parseInt(dayStr);\n            const dayTasks = dbTasks[dayStr];\n            const dayInfo = courseStructure.find(d => d.day === day) || {\n              titleKey: `days.day${day}`,\n              theoryLink: null\n            };\n            return {\n              day: day,\n              titleKey: dayInfo.titleKey,\n              theoryLink: dayInfo.theoryLink,\n              tasks: dayTasks.map(task => ({\n                question: task.question,\n                answer: task.answer,\n                explanation: task.explanation,\n                answerFormat: task.answerFormat,\n                translationKey: task.translation_key,\n                translationParams: task.translation_params,\n                ...(task.task_data && typeof task.task_data === 'object' ? task.task_data : {})\n              }))\n            };\n          }).filter(day => day.tasks.length > 0);\n          console.log(`✅ Восстановлено ${restoredTests.length} дней с заданиями из БД`);\n        } else {\n          console.log('🆕 СОХРАНЕННЫХ ЗАДАНИЙ НЕТ - генерируем новые');\n          shouldGenerateNewTasks = true;\n          restoredTests = courseStructure.map(day => ({\n            day: day.day,\n            titleKey: day.titleKey,\n            theoryLink: day.theoryLink,\n            tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n          })).filter(day => day.tasks.length > 0);\n          console.log(`✅ Создано ${restoredTests.length} дней с новыми заданиями`);\n        }\n\n        // 🟢 ИСПРАВЛЕНИЕ: Восстанавливаем ВСЕ ответы из БД, даже если задания новые\n        const restoredAnswers = {};\n        if (Object.keys(dbAnswers).length > 0) {\n          console.log('🔄 Восстанавливаем ответы из БД...');\n          Object.keys(dbAnswers).forEach(key => {\n            const [day, index] = key.split('-').map(Number);\n\n            // Если у нас есть задания для этого дня и индекса - используем ответ\n            const dayData = restoredTests.find(d => d.day === day);\n            if (dayData && dayData.tasks && dayData.tasks[index]) {\n              restoredAnswers[key] = dbAnswers[key];\n            }\n            // 🟢 ВАЖНОЕ ИСПРАВЛЕНИЕ: Сохраняем ответ даже если задания временно не совпадают\n            else {\n              console.log(`📦 Сохраняем ответ для будущих заданий: ${key}`);\n              restoredAnswers[key] = dbAnswers[key];\n            }\n          });\n          console.log(`✅ Восстановлено ответов: ${Object.keys(restoredAnswers).length}`);\n        }\n\n        // 🟢 ИСПРАВЛЕНИЕ: Сохраняем новые задания в БД если их не было\n        if (shouldGenerateNewTasks) {\n          console.log('💾 Сохраняем сгенерированные задания в БД...');\n          for (const dayData of restoredTests) {\n            try {\n              await userAPI.saveTasks(dayData.day, dayData.tasks);\n              console.log(`✅ День ${dayData.day} сохранен в БД`);\n            } catch (error) {\n              console.error(`❌ Ошибка сохранения дня ${dayData.day}:`, error);\n            }\n          }\n        }\n\n        // 🟢 ИСПРАВЛЕНИЕ: Устанавливаем данные с правильной последовательностью\n        setTests(restoredTests);\n\n        // Небольшая задержка для гарантии обновления состояния\n        setTimeout(() => {\n          setAnswers(restoredAnswers);\n          localStorage.setItem('userMathTests', JSON.stringify(restoredTests));\n          localStorage.setItem('userMathAnswers', JSON.stringify(restoredAnswers));\n          console.log('🎉 ВОССТАНОВЛЕНИЕ ИЗ БАЗЫ ДАННЫХ ЗАВЕРШЕНО!');\n        }, 100);\n      } catch (error) {\n        var _error$response;\n        console.error('❌ Ошибка восстановления из БД:', error);\n        console.log('🔍 Детали ошибки:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n\n        // 🟢 ИСПРАВЛЕНИЕ: Создаем аварийные данные но сохраняем ответы если они есть\n        console.log('🆘 Создаем аварийные данные...');\n        const emergencyTests = courseStructure.map(day => ({\n          day: day.day,\n          titleKey: day.titleKey,\n          theoryLink: day.theoryLink,\n          tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n        })).filter(day => day.tasks.length > 0);\n\n        // Пытаемся сохранить хотя бы ответы\n        let emergencyAnswers = {};\n        try {\n          const answersResponse = await userAPI.getAnswers();\n          emergencyAnswers = answersResponse.data || {};\n          console.log(`✅ Сохранено ${Object.keys(emergencyAnswers).length} ответов в аварийном режиме`);\n        } catch (answersError) {\n          console.log('❌ Не удалось загрузить ответы в аварийном режиме');\n        }\n        setTests(emergencyTests);\n        setAnswers(emergencyAnswers);\n        localStorage.setItem('userMathTests', JSON.stringify(emergencyTests));\n        localStorage.setItem('userMathAnswers', JSON.stringify(emergencyAnswers));\n      }\n    }\n  };\n\n  // 🟢 УЛУЧШЕННАЯ ЗАГРУЗКА ДАННЫХ\n  const loadUserData = useCallback(async () => {\n    if (dataLoaded) return;\n    try {\n      const savedTests = localStorage.getItem('userMathTests');\n      const savedAnswers = localStorage.getItem('userMathAnswers');\n      let finalTests = [];\n      let finalAnswers = {};\n\n      // 🟢 ИСПРАВЛЕНИЕ: Проверяем авторизацию перед использованием локальных данных\n      const hasAuthToken = localStorage.getItem('authToken');\n      if (savedTests && savedAnswers && !hasAuthToken) {\n        // Для гостей используем локальные данные\n        try {\n          const parsedTests = JSON.parse(savedTests);\n          const parsedAnswers = JSON.parse(savedAnswers);\n          finalTests = parsedTests.map(dayData => ({\n            ...dayData,\n            tasks: applyTranslationsToTasks(dayData.tasks, t)\n          }));\n          finalAnswers = parsedAnswers;\n        } catch (parseError) {\n          console.error('Error parsing localStorage data:', parseError);\n          throw new Error('Invalid localStorage data');\n        }\n      } else if (hasAuthToken) {\n        // 🟢 ИСПРАВЛЕНИЕ: Для авторизованных пользователей всегда предпочитаем данные из БД\n        console.log('🔐 Пользователь авторизован - ожидаем данные из БД');\n        // Не загружаем локальные данные, ждем восстановления из БД\n        return;\n      } else {\n        // Генерация для гостей\n        finalTests = courseStructure.map(day => ({\n          day: day.day,\n          titleKey: day.titleKey,\n          theoryLink: day.theoryLink,\n          tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n        })).filter(day => day.tasks.length > 0);\n        finalAnswers = {};\n      }\n      setTests(finalTests);\n      setAnswers(finalAnswers);\n      localStorage.setItem('userMathTests', JSON.stringify(finalTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify(finalAnswers));\n      setDataLoaded(true);\n\n      // 🟢 ИСПРАВЛЕНИЕ: Фоновая синхронизация только для авторизованных пользователей\n      if (user && user.isLoggedIn) {\n        setTimeout(async () => {\n          try {\n            console.log('🔄 Starting background sync with server...');\n            const serverAnswers = await userAPI.getAnswers().catch(() => ({\n              data: {}\n            }));\n            if (serverAnswers.data && Object.keys(serverAnswers.data).length > 0) {\n              console.log('✅ Answers loaded from DB:', Object.keys(serverAnswers.data).length);\n\n              // Обновляем ответы из БД\n              setAnswers(prevAnswers => {\n                const mergedAnswers = {\n                  ...prevAnswers,\n                  ...serverAnswers.data\n                };\n                localStorage.setItem('userMathAnswers', JSON.stringify(mergedAnswers));\n                return mergedAnswers;\n              });\n            }\n            console.log('✅ Background sync completed');\n          } catch (syncError) {\n            console.log('Background sync failed, continuing with local data');\n          }\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Error loading user data:', error);\n      const emergencyTests = courseStructure.map(day => ({\n        day: day.day,\n        titleKey: day.titleKey,\n        theoryLink: day.theoryLink,\n        tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n      })).filter(day => day.tasks.length > 0);\n      setTests(emergencyTests);\n      setAnswers({});\n      localStorage.setItem('userMathTests', JSON.stringify(emergencyTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify({}));\n      setDataLoaded(true);\n    }\n  }, [user, t, dataLoaded]);\n\n  // 🟢 ЗАГРУЗКА ДАННЫХ ПРИ ИЗМЕНЕНИИ ПОЛЬЗОВАТЕЛЯ ИЛИ ЯЗЫКА\n  useEffect(() => {\n    if (!loading && user !== null) {\n      loadUserData();\n    }\n  }, [user, loading, loadUserData]);\n  useEffect(() => {\n    if (dataLoaded && tests.length > 0) {\n      const updatedTests = tests.map(dayData => ({\n        ...dayData,\n        tasks: applyTranslationsToTasks(dayData.tasks, t)\n      }));\n      setTests(updatedTests);\n    }\n  }, [i18n.language, t]);\n\n  // 🟢 ФИНАЛЬНОЕ ВОССТАНОВЛЕНИЕ ИЗ БАЗЫ ДАННЫХ ПОСЛЕ СБРОСА КЭША\n  useEffect(() => {\n    recoverFromDatabase();\n    const interval = setInterval(() => {\n      if (!recoveryAttempted) {\n        recoverFromDatabase();\n      }\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [t, recoveryAttempted]);\n\n  // 🟢 ДОБАВИМ КНОПКУ ДЛЯ РУЧНОГО ВОССТАНОВЛЕНИЯ (для тестирования)\n  const manualRecovery = () => {\n    console.log('🔄 РУЧНОЙ ЗАПУСК ВОССТАНОВЛЕНИЯ');\n    sessionStorage.setItem('cacheWasCleared', 'true');\n    setRecoveryAttempted(false);\n    recoverFromDatabase();\n  };\n\n  // 🟢 НАДЕЖНЫЙ ОБРАБОТЧИК ВХОДА\n  const handleLogin = async formData => {\n    setAuthError('');\n    try {\n      var _response$data;\n      console.log('🔐 Attempting login...');\n      const response = await authAPI.login({\n        email: formData.email,\n        password: formData.password\n      });\n      if (!((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.access_token)) {\n        throw new Error('No access token received');\n      }\n      localStorage.setItem('authToken', response.data.access_token);\n      console.log('✅ Login successful, token saved');\n      setShowLogin(false);\n      await checkAuth();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('❌ Login error:', error);\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || error.message || 'Ошибка входа';\n      setAuthError(errorMessage);\n      localStorage.removeItem('authToken');\n    }\n  };\n\n  // 🟢 НАДЕЖНЫЙ ОБРАБОТЧИК РЕГИСТРАЦИИ\n  const handleRegister = async formData => {\n    setAuthError('');\n    try {\n      var _loginResponse$data;\n      console.log('📝 Attempting registration...');\n      await authAPI.register({\n        email: formData.email,\n        username: formData.username,\n        password: formData.password,\n        grade: formData.grade\n      });\n      console.log('✅ Registration successful, attempting login...');\n      const loginResponse = await authAPI.login({\n        email: formData.email,\n        password: formData.password\n      });\n      if (!((_loginResponse$data = loginResponse.data) !== null && _loginResponse$data !== void 0 && _loginResponse$data.access_token)) {\n        throw new Error('No access token received after registration');\n      }\n      localStorage.setItem('authToken', loginResponse.data.access_token);\n      console.log('✅ Auto-login successful');\n      setShowRegister(false);\n      await checkAuth();\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('❌ Registration error:', error);\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || error.message || 'Ошибка регистрации';\n      setAuthError(errorMessage);\n      localStorage.removeItem('authToken');\n    }\n  };\n\n  // 🟢 ОБРАБОТЧИК ВЫХОДА\n  const handleLogout = () => {\n    console.log('🚪 Logging out...');\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userData');\n    setUser({\n      name: t('header.guest', \"Гость\"),\n      isLoggedIn: false\n    });\n    setAuthError('');\n  };\n\n  // 🟢 ОПТИМИЗИРОВАННАЯ ОБРАБОТКА ВВОДА ОТВЕТА\n  const handleAnswerChange = async (day, index, value) => {\n    const answerKey = `${day}-${index}`;\n    const newAnswers = {\n      ...answers,\n      [answerKey]: value\n    };\n    setAnswers(newAnswers);\n    localStorage.setItem('userMathAnswers', JSON.stringify(newAnswers));\n    if (user && user.isLoggedIn) {\n      setTimeout(async () => {\n        try {\n          const dayData = tests.find(d => d.day === day);\n          if (dayData && dayData.tasks[index]) {\n            const task = dayData.tasks[index];\n            const isCorrectAnswer = isCorrectAnswerCheck(day, index, task.answer, newAnswers);\n            await userAPI.saveAnswer(day, index, value, isCorrectAnswer);\n            const completedTasks = dayData.tasks.filter((t, i) => isCorrectAnswerCheck(day, i, t.answer, newAnswers)).length;\n            await courseAPI.updateProgress(day, newAnswers, completedTasks);\n          }\n        } catch (error) {\n          console.log('Background answer sync failed');\n        }\n      }, 500);\n    }\n  };\n\n  // 🟢 ВЫЧИСЛЕНИЕ ПРОГРЕССА\n  const getDayProgress = (day, tasks) => {\n    if (!tasks || !Array.isArray(tasks)) return 0;\n    const correctCount = tasks.filter((task, index) => isCorrectAnswerCheck(day, index, task.answer, answers)).length;\n    return tasks.length > 0 ? Math.round(correctCount / tasks.length * 100) : 0;\n  };\n  const getTotalProgress = () => {\n    let totalCorrect = 0;\n    let totalTasks = 0;\n    tests.forEach(dayData => {\n      if (dayData.tasks && Array.isArray(dayData.tasks)) {\n        dayData.tasks.forEach((task, index) => {\n          totalTasks++;\n          if (isCorrectAnswerCheck(dayData.day, index, task.answer, answers)) {\n            totalCorrect++;\n          }\n        });\n      }\n    });\n    return totalTasks > 0 ? Math.round(totalCorrect / totalTasks * 100) : 0;\n  };\n\n  // 🟢 СБРОС ПРОГРЕССА\n  const resetProgress = async () => {\n    try {\n      const userTests = courseStructure.map(day => ({\n        day: day.day,\n        titleKey: day.titleKey,\n        theoryLink: day.theoryLink,\n        tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n      })).filter(day => day.tasks.length > 0);\n\n      // 🟢 ИСПРАВЛЕНИЕ: Очищаем ответы при сбросе прогресса\n      setTests(userTests);\n      setAnswers({}); // Важно: очищаем ответы!\n\n      localStorage.setItem('userMathTests', JSON.stringify(userTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify({}));\n      if (user && user.isLoggedIn) {\n        setTimeout(async () => {\n          try {\n            await courseAPI.resetProgress();\n            for (const dayData of userTests) {\n              await userAPI.saveTasks(dayData.day, dayData.tasks);\n            }\n          } catch (error) {\n            console.log('Background reset sync failed');\n          }\n        }, 500);\n      }\n    } catch (error) {\n      console.error('Error resetting progress:', error);\n    }\n  };\n\n  // 🟢 ОБРАБОТЧИКИ UI\n  const handleLoginClick = () => {\n    setShowLogin(true);\n    setAuthError('');\n  };\n  const handleRegisterClick = () => {\n    setShowRegister(true);\n    setAuthError('');\n  };\n  const handleDayClick = dayNumber => {\n    setCurrentDay(dayNumber);\n    const element = document.getElementById(`day-${dayNumber}`);\n    if (element) {\n      const headerOffset = 340;\n      const elementPosition = element.offsetTop;\n      const offsetPosition = elementPosition - headerOffset;\n      setTimeout(() => {\n        window.scrollTo({\n          top: Math.max(0, offsetPosition),\n          behavior: 'smooth'\n        });\n      }, 50);\n    }\n  };\n\n  // 🟢 ЗАГРУЗОЧНЫЙ ЭКРАН\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-gray-600 dark:text-gray-400\",\n          children: t('loading', \"Загрузка...\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 🟢 ОСНОВНОЙ RENDER\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-200\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      user: user || {\n        name: t('header.guest', \"Гость\"),\n        isLoggedIn: false\n      },\n      progress: getTotalProgress(),\n      onResetClick: () => setShowResetConfirm(true),\n      onSettingsClick: () => console.log(\"Settings clicked\"),\n      onLoginClick: handleLoginClick,\n      onLogoutClick: handleLogout,\n      grade: \"6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 7\n    }, this), process.env.NODE_ENV === 'development' && user && user.isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-20 right-4 z-40\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: manualRecovery,\n        className: \"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg text-sm font-medium\",\n        title: \"\\u0422\\u0435\\u0441\\u0442 \\u0432\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F \\u0438\\u0437 \\u0411\\u0414\",\n        children: \"\\uD83D\\uDD04 \\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 9\n    }, this), showLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin,\n        onSwitchToRegister: () => {\n          setShowLogin(false);\n          setShowRegister(true);\n          setAuthError('');\n        },\n        error: authError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 9\n    }, this), showRegister && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(Register, {\n        onRegister: handleRegister,\n        onSwitchToLogin: () => {\n          setShowRegister(false);\n          setShowLogin(true);\n          setAuthError('');\n        },\n        error: authError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 9\n    }, this), user && user.isLoggedIn && tests.length > 0 && /*#__PURE__*/_jsxDEV(DayNavigation, {\n      days: tests.map(day => ({\n        ...day,\n        progress: getDayProgress(day.day, day.tasks)\n      })),\n      currentDay: currentDay,\n      onDayClick: handleDayClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 9\n    }, this), user && user.isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-14 max-w-4xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-16\",\n        children: tests.map(dayData => {\n          var _dayData$tasks, _dayData$tasks2;\n          const dayProgress = getDayProgress(dayData.day, dayData.tasks);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `day-${dayData.day}`,\n            className: \"bg-white dark:bg-gray-800 rounded-xl shadow-md p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 min-w-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-xl font-bold text-gray-900 dark:text-white mb-1\",\n                  children: [t('days.day', \"День\"), \" \", dayData.day]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 748,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-lg text-gray-800 dark:text-gray-200 font-medium\",\n                  children: t(dayData.titleKey)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 747,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col items-end space-y-1 flex-shrink-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm font-semibold text-gray-600 dark:text-gray-400\",\n                    children: [dayProgress, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 758,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-20 bg-gray-200 dark:bg-gray-700 rounded-full h-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-blue-500 h-2 rounded-full transition-all duration-300\",\n                      style: {\n                        width: `${dayProgress}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 761,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-500 dark:text-gray-400\",\n                  children: [((_dayData$tasks = dayData.tasks) === null || _dayData$tasks === void 0 ? void 0 : _dayData$tasks.length) || 0, \" \", t('days.tasks', \"заданий\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-3\",\n              children: (_dayData$tasks2 = dayData.tasks) === null || _dayData$tasks2 === void 0 ? void 0 : _dayData$tasks2.map((task, index) => {\n                const isAnswerCorrect = isCorrectAnswerCheck(dayData.day, index, task.answer, answers);\n                const hasAnswer = answers[`${dayData.day}-${index}`];\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `p-4 rounded-lg ${hasAnswer ? isAnswerCorrect ? 'bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800' : 'bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800' : 'bg-gray-50 dark:bg-gray-700'}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"flex-1 text-gray-800 dark:text-gray-200\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [t('tasks.task', \"Задача\"), \" \", index + 1, \":\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 789,\n                        columnNumber: 31\n                      }, this), \" \", task.question]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 788,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center space-x-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: t('answer', \"Ответ\"),\n                        value: answers[`${dayData.day}-${index}`] || \"\",\n                        onChange: e => handleAnswerChange(dayData.day, index, e.target.value),\n                        className: \"w-24 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white text-center\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 793,\n                        columnNumber: 31\n                      }, this), hasAnswer && (isAnswerCorrect ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-green-500 text-xl\",\n                        title: t('correct', \"Правильно!\"),\n                        children: \"\\u2705\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 802,\n                        columnNumber: 35\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-red-500 text-xl\",\n                        title: t('try_again', \"Попробуйте еще раз\"),\n                        children: \"\\u274C\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 804,\n                        columnNumber: 35\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 792,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 787,\n                    columnNumber: 27\n                  }, this), task.answerFormat && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500 dark:text-gray-400 mt-1\",\n                    children: [\"\\uD83D\\uDCA1 \", t('answerFormat.hint', \"Формат ответа\"), \": \", task.answerFormat]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 811,\n                    columnNumber: 29\n                  }, this), hasAnswer && !isAnswerCorrect && task.explanation && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-2 p-2 bg-blue-50 dark:bg-blue-900/20 rounded-md\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-blue-800 dark:text-blue-200\",\n                      children: [\"\\uD83D\\uDCA1 \", task.explanation]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 818,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 817,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 780,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 19\n            }, this), dayData.theoryLink && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 pt-4 border-t border-gray-200 dark:border-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: dayData.theoryLink,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"text-blue-600 dark:text-blue-400 hover:underline text-sm flex items-center\",\n                children: [\"\\uD83D\\uDCD6 \", t('days.theory', \"Теоретические материалы\"), \" \\\"\", t(dayData.titleKey), \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 21\n            }, this)]\n          }, dayData.day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 text-center text-gray-500 dark:text-gray-400 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('footer.course_description', \"Курс для закрепления знаний по математике за 6 класс\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xA9 2025 Math Academy | \", t('footer.generated', \"Задания генерируются случайно\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center max-w-2xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8 flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-32 h-32 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-6xl\",\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6\",\n          children: t('auth.welcome', \"Добро пожаловать в Math Academy!\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl text-gray-600 dark:text-gray-400 mb-8 max-w-md mx-auto leading-relaxed\",\n          children: t('auth.prompt', \"Войдите или зарегистрируйтесь чтобы начать обучение\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col sm:flex-row gap-4 justify-center mb-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLoginClick,\n            className: \"bg-blue-500 hover:bg-blue-600 text-white px-8 py-3 rounded-lg font-medium text-lg transition-colors shadow-lg\",\n            children: t('header.login', \"Войти\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRegisterClick,\n            className: \"bg-green-500 hover:bg-green-600 text-white px-8 py-3 rounded-lg font-medium text-lg transition-colors shadow-lg\",\n            children: t('header.register', \"Регистрация\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-t border-gray-200 dark:border-gray-700 pt-8\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg text-gray-500 dark:text-gray-400 italic\",\n            children: t('slogan', \"От математических основ к образовательной экосистеме! 🚀\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 9\n    }, this), showResetConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-lg p-6 m-4 max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold text-gray-900 dark:text-white mb-2\",\n          children: [\"\\uD83D\\uDD04 \", t('reset.new_tasks', \"Новые задания\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 dark:text-gray-400 mb-4\",\n          children: t('reset.confirmation', \"Вы уверены, что хотите сгенерировать новые задания? Весь текущий прогресс будет сброшен.\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowResetConfirm(false),\n            className: \"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\",\n            children: t('reset.cancel', \"Отмена\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              resetProgress();\n              setShowResetConfirm(false);\n            },\n            className: \"flex-1 px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors\",\n            children: t('reset.generate', \"Сгенерировать\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 9\n    }, this), showScrollTop && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      }),\n      className: \"fixed bottom-6 right-6 z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-500 rounded-full w-10 h-10 flex items-center justify-center shadow-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-all text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-gray-100\",\n      \"aria-label\": \"\\u041D\\u0430\\u0432\\u0435\\u0440\\u0445\",\n      children: \"\\u2191\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 924,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 672,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K5BwLLs04C/cx0lIpNm0Ikqybtg=\", false, function () {\n  return [useTranslation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Header","Login","Register","authAPI","courseAPI","userAPI","courseStructure","taskGenerators","useTranslation","DayNavigation","jsxDEV","_jsxDEV","detectCacheClear","cacheFlag","sessionStorage","getItem","hasAuthToken","localStorage","hasLocalData","console","log","setItem","applyTranslationsToTasks","tasks","t","Array","isArray","map","task","question","translationKey","translationParams","explanation","explanationKey","explanationParams","answerFormat","formatKey","isCorrectAnswerCheck","day","index","correctAnswer","currentAnswers","_currentAnswers","userAnswer","toString","trim","toLowerCase","correct","includes","userNum","replace","correctNum","userA","userB","split","correctA","correctB","App","_s","i18n","tests","setTests","answers","setAnswers","loading","setLoading","showResetConfirm","setShowResetConfirm","user","setUser","showLogin","setShowLogin","showRegister","setShowRegister","currentDay","setCurrentDay","showScrollTop","setShowScrollTop","authError","setAuthError","dataLoaded","setDataLoaded","recoveryAttempted","setRecoveryAttempted","handleScroll","window","scrollY","addEventListener","removeEventListener","checkDataIntegrity","hasTests","hasAnswers","checkAuth","token","name","isLoggedIn","response","getMe","userData","data","JSON","stringify","error","savedUser","parse","tempUser","id","Date","now","email","recoverFromDatabase","hasLocalTests","hasLocalAnswers","wasCacheCleared","removeItem","tasksResponse","getAllTasks","dbTasks","Object","keys","length","answersResponse","getAnswers","dbAnswers","restoredTests","shouldGenerateNewTasks","dayStr","parseInt","dayTasks","dayInfo","find","d","titleKey","theoryLink","answer","translation_key","translation_params","task_data","filter","generator","taskCount","restoredAnswers","forEach","key","Number","dayData","saveTasks","setTimeout","_error$response","emergencyTests","emergencyAnswers","answersError","loadUserData","savedTests","savedAnswers","finalTests","finalAnswers","parsedTests","parsedAnswers","parseError","Error","serverAnswers","catch","prevAnswers","mergedAnswers","syncError","updatedTests","language","interval","setInterval","clearInterval","manualRecovery","handleLogin","formData","_response$data","login","password","access_token","_error$response2","_error$response2$data","errorMessage","detail","message","handleRegister","_loginResponse$data","register","username","grade","loginResponse","_error$response3","_error$response3$data","handleLogout","handleAnswerChange","value","answerKey","newAnswers","isCorrectAnswer","saveAnswer","completedTasks","i","updateProgress","getDayProgress","correctCount","Math","round","getTotalProgress","totalCorrect","totalTasks","resetProgress","userTests","handleLoginClick","handleRegisterClick","handleDayClick","dayNumber","element","document","getElementById","headerOffset","elementPosition","offsetTop","offsetPosition","scrollTo","top","max","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","onResetClick","onSettingsClick","onLoginClick","onLogoutClick","process","env","NODE_ENV","onClick","title","onLogin","onSwitchToRegister","onRegister","onSwitchToLogin","days","onDayClick","_dayData$tasks","_dayData$tasks2","dayProgress","style","width","isAnswerCorrect","hasAnswer","type","placeholder","onChange","e","target","href","rel","_c","$RefreshReg$"],"sources":["/opt/math-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport { authAPI, courseAPI, userAPI } from './services/api';\nimport { courseStructure } from './taskGenerators';\nimport * as taskGenerators from './taskGenerators';\nimport { useTranslation } from 'react-i18next';\nimport DayNavigation from './components/DayNavigation';\n\n// 🟢 УЛУЧШЕННЫЙ ДЕТЕКТОР СБРОСА КЭША\nconst detectCacheClear = () => {\n  const cacheFlag = sessionStorage.getItem('cacheWasCleared');\n  const hasAuthToken = localStorage.getItem('authToken');\n  const hasLocalData = localStorage.getItem('userMathTests') && localStorage.getItem('userMathAnswers');\n  \n  // Если есть токен но нет локальных данных - значит кеш сброшен\n  if (hasAuthToken && !hasLocalData) {\n    console.log('🚨 ОБНАРУЖЕН СБРОС КЭША: есть токен но нет локальных данных');\n    sessionStorage.setItem('cacheWasCleared', 'true');\n    return true;\n  }\n  \n  return cacheFlag === 'true';\n};\n\n// Функция для применения переводов к заданиям\nconst applyTranslationsToTasks = (tasks, t) => {\n  if (!tasks || !Array.isArray(tasks)) return [];\n  \n  return tasks.map(task => ({\n    ...task,\n    question: task.translationKey ? t(task.translationKey, task.translationParams) : task.question,\n    explanation: task.explanationKey ? t(task.explanationKey, task.explanationParams) : task.explanation,\n    answerFormat: task.formatKey ? t(task.formatKey) : task.answerFormat\n  }));\n};\n\n// 🟢 ФУНКЦИЯ ПРОВЕРКИ ПРАВИЛЬНОСТИ ОТВЕТА\nconst isCorrectAnswerCheck = (day, index, correctAnswer, currentAnswers) => {\n  if (!currentAnswers) return false;\n  \n  const userAnswer = currentAnswers[`${day}-${index}`]?.toString().trim().toLowerCase();\n  const correct = correctAnswer?.toString().toLowerCase();\n  \n  if (!userAnswer || !correct) return false;\n  \n  if (correct.includes('%')) {\n    const userNum = userAnswer.replace('%', '');\n    const correctNum = correct.replace('%', '');\n    return userNum === correctNum;\n  }\n\n  if (correct.includes('/')) {\n    const [userA, userB] = userAnswer.split('/');\n    const [correctA, correctB] = correct.split('/');\n    return userA === correctA && userB === correctB;\n  }\n\n  return userAnswer === correct;\n};\n\nfunction App() {\n  const { t, i18n } = useTranslation();\n  const [tests, setTests] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [showResetConfirm, setShowResetConfirm] = useState(false);\n  const [user, setUser] = useState(null);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [currentDay, setCurrentDay] = useState(1);\n  const [showScrollTop, setShowScrollTop] = useState(false);\n  const [authError, setAuthError] = useState('');\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [recoveryAttempted, setRecoveryAttempted] = useState(false);\n\n  // 🟢 EFFECT ДЛЯ ОТСЛЕЖИВАНИЯ СКРОЛЛА\n  useEffect(() => {\n    const handleScroll = () => {\n      setShowScrollTop(window.scrollY > 300);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // 🟢 EFFECT ДЛЯ ПРОВЕРКИ ЦЕЛОСТНОСТИ ДАННЫХ ПРИ ЗАГРУЗКЕ\n  useEffect(() => {\n    const checkDataIntegrity = () => {\n      const hasAuthToken = localStorage.getItem('authToken');\n      const hasTests = localStorage.getItem('userMathTests');\n      const hasAnswers = localStorage.getItem('userMathAnswers');\n      \n      // Если пользователь авторизован но данные повреждены/отсутствуют\n      if (hasAuthToken && (!hasTests || !hasAnswers)) {\n        console.log('🚨 ОБНАРУЖЕНА ПОВРЕЖДЕННАЯ СЕССИЯ - запуск восстановления');\n        sessionStorage.setItem('cacheWasCleared', 'true');\n        setRecoveryAttempted(false);\n      }\n    };\n\n    checkDataIntegrity();\n  }, []);\n\n  // 🟢 НАДЕЖНАЯ ПРОВЕРКА АУТЕНТИФИКАЦИИ\n  const checkAuth = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      \n      if (!token) {\n        setUser({ name: t('header.guest', \"Гость\"), isLoggedIn: false });\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const response = await authAPI.getMe();\n        const userData = {\n          ...response.data,\n          isLoggedIn: true\n        };\n        setUser(userData);\n        localStorage.setItem('userData', JSON.stringify(userData));\n      } catch (error) {\n        console.log('getMe failed, checking localStorage for user data');\n        \n        const savedUser = localStorage.getItem('userData');\n        if (savedUser) {\n          const userData = JSON.parse(savedUser);\n          setUser({ ...userData, isLoggedIn: true });\n        } else {\n          const tempUser = {\n            id: Date.now(),\n            name: 'Пользователь',\n            email: 'user@example.com',\n            isLoggedIn: true\n          };\n          setUser(tempUser);\n          localStorage.setItem('userData', JSON.stringify(tempUser));\n        }\n      }\n    } catch (error) {\n      console.error('Auth check error:', error);\n      setUser({ name: t('header.guest', \"Гость\"), isLoggedIn: false });\n    } finally {\n      setLoading(false);\n    }\n  }, [t]);\n\n  // 🟢 ЗАГРУЗКА ПРИ СТАРТЕ\n  useEffect(() => {\n    checkAuth();\n  }, [checkAuth]);\n\n  // 🟢 УЛУЧШЕННАЯ ФУНКЦИЯ ВОССТАНОВЛЕНИЯ ИЗ БАЗЫ ДАННЫХ\n  const recoverFromDatabase = async () => {\n    if (recoveryAttempted) return;\n    \n    const hasAuthToken = localStorage.getItem('authToken');\n    const hasLocalTests = localStorage.getItem('userMathTests');\n    const hasLocalAnswers = localStorage.getItem('userMathAnswers');\n    \n    console.log('🔍 СТАТУС ВОССТАНОВЛЕНИЯ:', {\n      hasAuthToken: !!hasAuthToken,\n      hasLocalTests: !!hasLocalTests, \n      hasLocalAnswers: !!hasLocalAnswers,\n      recoveryAttempted\n    });\n\n    const wasCacheCleared = detectCacheClear();\n    \n    // 🟢 ИСПРАВЛЕНИЕ: Восстанавливаем из БД всегда когда есть токен, даже если есть локальные данные\n    if (hasAuthToken) {\n      console.log('🚨 ВОССТАНОВЛЕНИЕ ИЗ БД: Пользователь авторизован!');\n      setRecoveryAttempted(true);\n      \n      if (wasCacheCleared) {\n        sessionStorage.removeItem('cacheWasCleared');\n      }\n      \n      try {\n        console.log('📚 Загружаем сохраненные задания из БД...');\n        const tasksResponse = await userAPI.getAllTasks();\n        const dbTasks = tasksResponse.data || {};\n        \n        console.log('✅ Задания из БД:', Object.keys(dbTasks).length, 'дней');\n        \n        console.log('📥 Загружаем ответы из БД...');\n        const answersResponse = await userAPI.getAnswers();\n        const dbAnswers = answersResponse.data || {};\n        \n        console.log('✅ Ответы из БД:', Object.keys(dbAnswers).length, 'записей');\n\n        let restoredTests = [];\n        let shouldGenerateNewTasks = false;\n        \n        if (Object.keys(dbTasks).length > 0) {\n          console.log('🎯 ВОССТАНАВЛИВАЕМ сохраненные задания из БД');\n          \n          restoredTests = Object.keys(dbTasks).map(dayStr => {\n            const day = parseInt(dayStr);\n            const dayTasks = dbTasks[dayStr];\n            \n            const dayInfo = courseStructure.find(d => d.day === day) || {\n              titleKey: `days.day${day}`,\n              theoryLink: null\n            };\n            \n            return {\n              day: day,\n              titleKey: dayInfo.titleKey,\n              theoryLink: dayInfo.theoryLink,\n              tasks: dayTasks.map(task => ({\n                question: task.question,\n                answer: task.answer,\n                explanation: task.explanation,\n                answerFormat: task.answerFormat,\n                translationKey: task.translation_key,\n                translationParams: task.translation_params,\n                ...(task.task_data && typeof task.task_data === 'object' ? task.task_data : {})\n              }))\n            };\n          }).filter(day => day.tasks.length > 0);\n          \n          console.log(`✅ Восстановлено ${restoredTests.length} дней с заданиями из БД`);\n          \n        } else {\n          console.log('🆕 СОХРАНЕННЫХ ЗАДАНИЙ НЕТ - генерируем новые');\n          shouldGenerateNewTasks = true;\n          restoredTests = courseStructure.map(day => ({\n            day: day.day,\n            titleKey: day.titleKey,\n            theoryLink: day.theoryLink,\n            tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n          })).filter(day => day.tasks.length > 0);\n          \n          console.log(`✅ Создано ${restoredTests.length} дней с новыми заданиями`);\n        }\n\n        // 🟢 ИСПРАВЛЕНИЕ: Восстанавливаем ВСЕ ответы из БД, даже если задания новые\n        const restoredAnswers = {};\n        \n        if (Object.keys(dbAnswers).length > 0) {\n          console.log('🔄 Восстанавливаем ответы из БД...');\n          \n          Object.keys(dbAnswers).forEach(key => {\n            const [day, index] = key.split('-').map(Number);\n            \n            // Если у нас есть задания для этого дня и индекса - используем ответ\n            const dayData = restoredTests.find(d => d.day === day);\n            if (dayData && dayData.tasks && dayData.tasks[index]) {\n              restoredAnswers[key] = dbAnswers[key];\n            } \n            // 🟢 ВАЖНОЕ ИСПРАВЛЕНИЕ: Сохраняем ответ даже если задания временно не совпадают\n            else {\n              console.log(`📦 Сохраняем ответ для будущих заданий: ${key}`);\n              restoredAnswers[key] = dbAnswers[key];\n            }\n          });\n          \n          console.log(`✅ Восстановлено ответов: ${Object.keys(restoredAnswers).length}`);\n        }\n\n        // 🟢 ИСПРАВЛЕНИЕ: Сохраняем новые задания в БД если их не было\n        if (shouldGenerateNewTasks) {\n          console.log('💾 Сохраняем сгенерированные задания в БД...');\n          for (const dayData of restoredTests) {\n            try {\n              await userAPI.saveTasks(dayData.day, dayData.tasks);\n              console.log(`✅ День ${dayData.day} сохранен в БД`);\n            } catch (error) {\n              console.error(`❌ Ошибка сохранения дня ${dayData.day}:`, error);\n            }\n          }\n        }\n\n        // 🟢 ИСПРАВЛЕНИЕ: Устанавливаем данные с правильной последовательностью\n        setTests(restoredTests);\n        \n        // Небольшая задержка для гарантии обновления состояния\n        setTimeout(() => {\n          setAnswers(restoredAnswers);\n          localStorage.setItem('userMathTests', JSON.stringify(restoredTests));\n          localStorage.setItem('userMathAnswers', JSON.stringify(restoredAnswers));\n          console.log('🎉 ВОССТАНОВЛЕНИЕ ИЗ БАЗЫ ДАННЫХ ЗАВЕРШЕНО!');\n        }, 100);\n        \n      } catch (error) {\n        console.error('❌ Ошибка восстановления из БД:', error);\n        console.log('🔍 Детали ошибки:', error.response?.data);\n        \n        // 🟢 ИСПРАВЛЕНИЕ: Создаем аварийные данные но сохраняем ответы если они есть\n        console.log('🆘 Создаем аварийные данные...');\n        const emergencyTests = courseStructure.map(day => ({\n          day: day.day,\n          titleKey: day.titleKey,\n          theoryLink: day.theoryLink,\n          tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n        })).filter(day => day.tasks.length > 0);\n        \n        // Пытаемся сохранить хотя бы ответы\n        let emergencyAnswers = {};\n        try {\n          const answersResponse = await userAPI.getAnswers();\n          emergencyAnswers = answersResponse.data || {};\n          console.log(`✅ Сохранено ${Object.keys(emergencyAnswers).length} ответов в аварийном режиме`);\n        } catch (answersError) {\n          console.log('❌ Не удалось загрузить ответы в аварийном режиме');\n        }\n        \n        setTests(emergencyTests);\n        setAnswers(emergencyAnswers);\n        localStorage.setItem('userMathTests', JSON.stringify(emergencyTests));\n        localStorage.setItem('userMathAnswers', JSON.stringify(emergencyAnswers));\n      }\n    }\n  };\n\n  // 🟢 УЛУЧШЕННАЯ ЗАГРУЗКА ДАННЫХ\n  const loadUserData = useCallback(async () => {\n    if (dataLoaded) return;\n    \n    try {\n      const savedTests = localStorage.getItem('userMathTests');\n      const savedAnswers = localStorage.getItem('userMathAnswers');\n\n      let finalTests = [];\n      let finalAnswers = {};\n\n      // 🟢 ИСПРАВЛЕНИЕ: Проверяем авторизацию перед использованием локальных данных\n      const hasAuthToken = localStorage.getItem('authToken');\n      \n      if (savedTests && savedAnswers && !hasAuthToken) {\n        // Для гостей используем локальные данные\n        try {\n          const parsedTests = JSON.parse(savedTests);\n          const parsedAnswers = JSON.parse(savedAnswers);\n          \n          finalTests = parsedTests.map(dayData => ({\n            ...dayData,\n            tasks: applyTranslationsToTasks(dayData.tasks, t)\n          }));\n          finalAnswers = parsedAnswers;\n        } catch (parseError) {\n          console.error('Error parsing localStorage data:', parseError);\n          throw new Error('Invalid localStorage data');\n        }\n      } else if (hasAuthToken) {\n        // 🟢 ИСПРАВЛЕНИЕ: Для авторизованных пользователей всегда предпочитаем данные из БД\n        console.log('🔐 Пользователь авторизован - ожидаем данные из БД');\n        // Не загружаем локальные данные, ждем восстановления из БД\n        return;\n      } else {\n        // Генерация для гостей\n        finalTests = courseStructure.map(day => ({\n          day: day.day,\n          titleKey: day.titleKey,\n          theoryLink: day.theoryLink,\n          tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n        })).filter(day => day.tasks.length > 0);\n        \n        finalAnswers = {};\n      }\n\n      setTests(finalTests);\n      setAnswers(finalAnswers);\n      \n      localStorage.setItem('userMathTests', JSON.stringify(finalTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify(finalAnswers));\n      \n      setDataLoaded(true);\n\n      // 🟢 ИСПРАВЛЕНИЕ: Фоновая синхронизация только для авторизованных пользователей\n      if (user && user.isLoggedIn) {\n        setTimeout(async () => {\n          try {\n            console.log('🔄 Starting background sync with server...');\n            \n            const serverAnswers = await userAPI.getAnswers().catch(() => ({ data: {} }));\n            \n            if (serverAnswers.data && Object.keys(serverAnswers.data).length > 0) {\n              console.log('✅ Answers loaded from DB:', Object.keys(serverAnswers.data).length);\n              \n              // Обновляем ответы из БД\n              setAnswers(prevAnswers => {\n                const mergedAnswers = { ...prevAnswers, ...serverAnswers.data };\n                localStorage.setItem('userMathAnswers', JSON.stringify(mergedAnswers));\n                return mergedAnswers;\n              });\n            }\n\n            console.log('✅ Background sync completed');\n          } catch (syncError) {\n            console.log('Background sync failed, continuing with local data');\n          }\n        }, 2000);\n      }\n\n    } catch (error) {\n      console.error('Error loading user data:', error);\n      \n      const emergencyTests = courseStructure.map(day => ({\n        day: day.day,\n        titleKey: day.titleKey,\n        theoryLink: day.theoryLink,\n        tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n      })).filter(day => day.tasks.length > 0);\n      \n      setTests(emergencyTests);\n      setAnswers({});\n      localStorage.setItem('userMathTests', JSON.stringify(emergencyTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify({}));\n      \n      setDataLoaded(true);\n    }\n  }, [user, t, dataLoaded]);\n\n  // 🟢 ЗАГРУЗКА ДАННЫХ ПРИ ИЗМЕНЕНИИ ПОЛЬЗОВАТЕЛЯ ИЛИ ЯЗЫКА\n  useEffect(() => {\n    if (!loading && user !== null) {\n      loadUserData();\n    }\n  }, [user, loading, loadUserData]);\n\n  useEffect(() => {\n    if (dataLoaded && tests.length > 0) {\n      const updatedTests = tests.map(dayData => ({\n        ...dayData,\n        tasks: applyTranslationsToTasks(dayData.tasks, t)\n      }));\n      setTests(updatedTests);\n    }\n  }, [i18n.language, t]);\n\n  // 🟢 ФИНАЛЬНОЕ ВОССТАНОВЛЕНИЕ ИЗ БАЗЫ ДАННЫХ ПОСЛЕ СБРОСА КЭША\n  useEffect(() => {\n    recoverFromDatabase();\n    const interval = setInterval(() => {\n      if (!recoveryAttempted) {\n        recoverFromDatabase();\n      }\n    }, 3000);\n    \n    return () => clearInterval(interval);\n  }, [t, recoveryAttempted]);\n\n  // 🟢 ДОБАВИМ КНОПКУ ДЛЯ РУЧНОГО ВОССТАНОВЛЕНИЯ (для тестирования)\n  const manualRecovery = () => {\n    console.log('🔄 РУЧНОЙ ЗАПУСК ВОССТАНОВЛЕНИЯ');\n    sessionStorage.setItem('cacheWasCleared', 'true');\n    setRecoveryAttempted(false);\n    recoverFromDatabase();\n  };\n\n  // 🟢 НАДЕЖНЫЙ ОБРАБОТЧИК ВХОДА\n  const handleLogin = async (formData) => {\n    setAuthError('');\n    \n    try {\n      console.log('🔐 Attempting login...');\n      const response = await authAPI.login({ \n        email: formData.email, \n        password: formData.password \n      });\n      \n      if (!response.data?.access_token) {\n        throw new Error('No access token received');\n      }\n      \n      localStorage.setItem('authToken', response.data.access_token);\n      console.log('✅ Login successful, token saved');\n      \n      setShowLogin(false);\n      await checkAuth();\n      \n    } catch (error) {\n      console.error('❌ Login error:', error);\n      const errorMessage = error.response?.data?.detail || error.message || 'Ошибка входа';\n      setAuthError(errorMessage);\n      localStorage.removeItem('authToken');\n    }\n  };\n\n  // 🟢 НАДЕЖНЫЙ ОБРАБОТЧИК РЕГИСТРАЦИИ\n  const handleRegister = async (formData) => {\n    setAuthError('');\n    \n    try {\n      console.log('📝 Attempting registration...');\n      \n      await authAPI.register({ \n        email: formData.email,\n        username: formData.username, \n        password: formData.password,\n        grade: formData.grade\n      });\n      \n      console.log('✅ Registration successful, attempting login...');\n      \n      const loginResponse = await authAPI.login({\n        email: formData.email,\n        password: formData.password\n      });\n      \n      if (!loginResponse.data?.access_token) {\n        throw new Error('No access token received after registration');\n      }\n      \n      localStorage.setItem('authToken', loginResponse.data.access_token);\n      console.log('✅ Auto-login successful');\n      \n      setShowRegister(false);\n      await checkAuth();\n      \n    } catch (error) {\n      console.error('❌ Registration error:', error);\n      const errorMessage = error.response?.data?.detail || error.message || 'Ошибка регистрации';\n      setAuthError(errorMessage);\n      localStorage.removeItem('authToken');\n    }\n  };\n\n  // 🟢 ОБРАБОТЧИК ВЫХОДА\n  const handleLogout = () => {\n    console.log('🚪 Logging out...');\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userData');\n    setUser({ name: t('header.guest', \"Гость\"), isLoggedIn: false });\n    setAuthError('');\n  };\n\n  // 🟢 ОПТИМИЗИРОВАННАЯ ОБРАБОТКА ВВОДА ОТВЕТА\n  const handleAnswerChange = async (day, index, value) => {\n    const answerKey = `${day}-${index}`;\n    const newAnswers = {\n      ...answers,\n      [answerKey]: value\n    };\n    \n    setAnswers(newAnswers);\n    localStorage.setItem('userMathAnswers', JSON.stringify(newAnswers));\n    \n    if (user && user.isLoggedIn) {\n      setTimeout(async () => {\n        try {\n          const dayData = tests.find(d => d.day === day);\n          if (dayData && dayData.tasks[index]) {\n            const task = dayData.tasks[index];\n            const isCorrectAnswer = isCorrectAnswerCheck(day, index, task.answer, newAnswers);\n            \n            await userAPI.saveAnswer(day, index, value, isCorrectAnswer);\n            \n            const completedTasks = dayData.tasks.filter((t, i) => \n              isCorrectAnswerCheck(day, i, t.answer, newAnswers)\n            ).length;\n            \n            await courseAPI.updateProgress(day, newAnswers, completedTasks);\n          }\n        } catch (error) {\n          console.log('Background answer sync failed');\n        }\n      }, 500);\n    }\n  };\n\n  // 🟢 ВЫЧИСЛЕНИЕ ПРОГРЕССА\n  const getDayProgress = (day, tasks) => {\n    if (!tasks || !Array.isArray(tasks)) return 0;\n    \n    const correctCount = tasks.filter((task, index) =>\n      isCorrectAnswerCheck(day, index, task.answer, answers)\n    ).length;\n    \n    return tasks.length > 0 ? Math.round((correctCount / tasks.length) * 100) : 0;\n  };\n\n  const getTotalProgress = () => {\n    let totalCorrect = 0;\n    let totalTasks = 0;\n\n    tests.forEach(dayData => {\n      if (dayData.tasks && Array.isArray(dayData.tasks)) {\n        dayData.tasks.forEach((task, index) => {\n          totalTasks++;\n          if (isCorrectAnswerCheck(dayData.day, index, task.answer, answers)) {\n            totalCorrect++;\n          }\n        });\n      }\n    });\n\n    return totalTasks > 0 ? Math.round((totalCorrect / totalTasks) * 100) : 0;\n  };\n\n  // 🟢 СБРОС ПРОГРЕССА\n  const resetProgress = async () => {\n    try {\n      const userTests = courseStructure.map(day => ({\n        day: day.day,\n        titleKey: day.titleKey,\n        theoryLink: day.theoryLink,\n        tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n      })).filter(day => day.tasks.length > 0);\n      \n      // 🟢 ИСПРАВЛЕНИЕ: Очищаем ответы при сбросе прогресса\n      setTests(userTests);\n      setAnswers({}); // Важно: очищаем ответы!\n      \n      localStorage.setItem('userMathTests', JSON.stringify(userTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify({}));\n      \n      if (user && user.isLoggedIn) {\n        setTimeout(async () => {\n          try {\n            await courseAPI.resetProgress();\n            for (const dayData of userTests) {\n              await userAPI.saveTasks(dayData.day, dayData.tasks);\n            }\n          } catch (error) {\n            console.log('Background reset sync failed');\n          }\n        }, 500);\n      }\n      \n    } catch (error) {\n      console.error('Error resetting progress:', error);\n    }\n  };\n\n  // 🟢 ОБРАБОТЧИКИ UI\n  const handleLoginClick = () => {\n    setShowLogin(true);\n    setAuthError('');\n  };\n\n  const handleRegisterClick = () => {\n    setShowRegister(true);\n    setAuthError('');\n  };\n\n  const handleDayClick = (dayNumber) => {\n    setCurrentDay(dayNumber);\n    const element = document.getElementById(`day-${dayNumber}`);\n    if (element) {\n      const headerOffset = 340;\n      const elementPosition = element.offsetTop;\n      const offsetPosition = elementPosition - headerOffset;\n\n      setTimeout(() => {\n        window.scrollTo({\n          top: Math.max(0, offsetPosition),\n          behavior: 'smooth'\n        });\n      }, 50);\n    }\n  };\n\n  // 🟢 ЗАГРУЗОЧНЫЙ ЭКРАН\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600 dark:text-gray-400\">{t('loading', \"Загрузка...\")}</p>\n        </div>\n      </div>\n    );\n  }\n\n  // 🟢 ОСНОВНОЙ RENDER\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-200\">\n      <Header \n        user={user || { name: t('header.guest', \"Гость\"), isLoggedIn: false }}\n        progress={getTotalProgress()}\n        onResetClick={() => setShowResetConfirm(true)}\n        onSettingsClick={() => console.log(\"Settings clicked\")}\n        onLoginClick={handleLoginClick}\n        onLogoutClick={handleLogout}\n        grade=\"6\"\n      />\n\n      {/* 🟢 КНОПКА ДЛЯ ТЕСТИРОВАНИЯ ВОССТАНОВЛЕНИЯ (только для разработки) */}\n      {process.env.NODE_ENV === 'development' && user && user.isLoggedIn && (\n        <div className=\"fixed top-20 right-4 z-40\">\n          <button\n            onClick={manualRecovery}\n            className=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg text-sm font-medium\"\n            title=\"Тест восстановления из БД\"\n          >\n            🔄 Восстановить\n          </button>\n        </div>\n      )}\n\n      {/* МОДАЛЬНЫЕ ОКНА */}\n      {showLogin && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <Login \n            onLogin={handleLogin} \n            onSwitchToRegister={() => { \n              setShowLogin(false); \n              setShowRegister(true); \n              setAuthError('');\n            }}\n            error={authError}\n          />\n        </div>\n      )}\n\n      {showRegister && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <Register \n            onRegister={handleRegister} \n            onSwitchToLogin={() => { \n              setShowRegister(false); \n              setShowLogin(true); \n              setAuthError('');\n            }}\n            error={authError}\n          />\n        </div>\n      )}\n\n      {/* НАВИГАЦИЯ ПО ДНЯМ */}\n      {user && user.isLoggedIn && tests.length > 0 && (\n        <DayNavigation \n          days={tests.map(day => ({\n            ...day,\n            progress: getDayProgress(day.day, day.tasks)\n          }))}\n          currentDay={currentDay}\n          onDayClick={handleDayClick}\n        />\n      )}\n\n      {/* ОСНОВНОЙ КОНТЕНТ */}\n      {user && user.isLoggedIn ? (\n        <div className=\"container mx-auto p-14 max-w-4xl\">\n          <div className=\"grid gap-16\">\n            {tests.map(dayData => {\n              const dayProgress = getDayProgress(dayData.day, dayData.tasks);\n              \n              return (\n                <div key={dayData.day} id={`day-${dayData.day}`} className=\"bg-white dark:bg-gray-800 rounded-xl shadow-md p-6\">\n                  <div className=\"flex justify-between items-start mb-4\">\n                    <div className=\"flex-1 min-w-0\">\n                      <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-1\">\n                        {t('days.day', \"День\")} {dayData.day}\n                      </h2>\n                      <p className=\"text-lg text-gray-800 dark:text-gray-200 font-medium\">\n                        {t(dayData.titleKey)}\n                      </p>\n                    </div>\n                    \n                    <div className=\"flex flex-col items-end space-y-1 flex-shrink-0\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-sm font-semibold text-gray-600 dark:text-gray-400\">\n                          {dayProgress}%\n                        </span>\n                        <div className=\"w-20 bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                          <div \n                            className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n                            style={{ width: `${dayProgress}%` }}\n                          />\n                        </div>\n                      </div>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {dayData.tasks?.length || 0} {t('days.tasks', \"заданий\")}\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-3\">\n                    {dayData.tasks?.map((task, index) => {\n                      const isAnswerCorrect = isCorrectAnswerCheck(dayData.day, index, task.answer, answers);\n                      const hasAnswer = answers[`${dayData.day}-${index}`];\n                      \n                      return (\n                        <div key={index} className={`p-4 rounded-lg ${\n                          hasAnswer \n                            ? isAnswerCorrect \n                              ? 'bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800'\n                              : 'bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800'\n                            : 'bg-gray-50 dark:bg-gray-700'\n                        }`}>\n                          <div className=\"flex items-center space-x-3\">\n                            <span className=\"flex-1 text-gray-800 dark:text-gray-200\">\n                              <strong>{t('tasks.task', \"Задача\")} {index + 1}:</strong> {task.question}\n                            </span>\n\n                            <div className=\"flex items-center space-x-2\">\n                              <input\n                                type=\"text\"\n                                placeholder={t('answer', \"Ответ\")}\n                                value={answers[`${dayData.day}-${index}`] || \"\"}\n                                onChange={e => handleAnswerChange(dayData.day, index, e.target.value)}\n                                className=\"w-24 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white text-center\"\n                              />\n                              {hasAnswer && (\n                                isAnswerCorrect ? (\n                                  <span className=\"text-green-500 text-xl\" title={t('correct', \"Правильно!\")}>✅</span>\n                                ) : (\n                                  <span className=\"text-red-500 text-xl\" title={t('try_again', \"Попробуйте еще раз\")}>❌</span>\n                                )\n                              )}\n                            </div>\n                          </div>\n                          \n                          {task.answerFormat && (\n                            <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                              💡 {t('answerFormat.hint', \"Формат ответа\")}: {task.answerFormat}\n                            </div>\n                          )}\n                          \n                          {hasAnswer && !isAnswerCorrect && task.explanation && (\n                            <div className=\"mt-2 p-2 bg-blue-50 dark:bg-blue-900/20 rounded-md\">\n                              <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n                                💡 {task.explanation}\n                              </p>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n\n                  {dayData.theoryLink && (\n                    <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-600\">\n                      <a\n                        href={dayData.theoryLink}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-blue-600 dark:text-blue-400 hover:underline text-sm flex items-center\"\n                      >\n                        📖 {t('days.theory', \"Теоретические материалы\")} \"{t(dayData.titleKey)}\"\n                      </a>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n\n          <div className=\"mt-8 text-center text-gray-500 dark:text-gray-400 text-sm\">\n            <p>{t('footer.course_description', \"Курс для закрепления знаний по математике за 6 класс\")}</p>\n            <p>© 2025 Math Academy | {t('footer.generated', \"Задания генерируются случайно\")}</p>\n          </div>\n        </div>\n      ) : (\n        <div className=\"min-h-screen flex items-center justify-center px-4\">\n          <div className=\"text-center max-w-2xl mx-auto\">\n            <div className=\"mb-8 flex justify-center\">\n              <div className=\"w-32 h-32 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-6xl\">\n                📚\n              </div>\n            </div>\n            \n            <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6\">\n              {t('auth.welcome', \"Добро пожаловать в Math Academy!\")}\n            </h1>\n            \n            <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-8 max-w-md mx-auto leading-relaxed\">\n              {t('auth.prompt', \"Войдите или зарегистрируйтесь чтобы начать обучение\")}\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-12\">\n              <button\n                onClick={handleLoginClick}\n                className=\"bg-blue-500 hover:bg-blue-600 text-white px-8 py-3 rounded-lg font-medium text-lg transition-colors shadow-lg\"\n              >\n                {t('header.login', \"Войти\")}\n              </button>\n              <button\n                onClick={handleRegisterClick}\n                className=\"bg-green-500 hover:bg-green-600 text-white px-8 py-3 rounded-lg font-medium text-lg transition-colors shadow-lg\"\n              >\n                {t('header.register', \"Регистрация\")}\n              </button>\n            </div>\n            \n            <div className=\"border-t border-gray-200 dark:border-gray-700 pt-8\">\n              <p className=\"text-lg text-gray-500 dark:text-gray-400 italic\">\n                {t('slogan', \"От математических основ к образовательной экосистеме! 🚀\")}\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* ПОДТВЕРЖДЕНИЕ СБРОСА ПРОГРЕССА */}\n      {showResetConfirm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 m-4 max-w-md w-full\">\n            <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-2\">\n              🔄 {t('reset.new_tasks', \"Новые задания\")}\n            </h3>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n              {t('reset.confirmation', \"Вы уверены, что хотите сгенерировать новые задания? Весь текущий прогресс будет сброшен.\")}\n            </p>\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowResetConfirm(false)}\n                className=\"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\n              >\n                {t('reset.cancel', \"Отмена\")}\n              </button>\n              <button\n                onClick={() => {\n                  resetProgress();\n                  setShowResetConfirm(false);\n                }}\n                className=\"flex-1 px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors\"\n              >\n                {t('reset.generate', \"Сгенерировать\")}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* КНОПКА НАВЕРХ */}\n      {showScrollTop && (\n        <button \n          onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\n          className=\"fixed bottom-6 right-6 z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-500 rounded-full w-10 h-10 flex items-center justify-center shadow-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-all text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-gray-100\"\n          aria-label=\"Наверх\"\n        >\n          ↑\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}