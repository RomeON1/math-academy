{"ast":null,"code":"// day10-volumes.js\nconst getRandomInt=(min,max)=>Math.floor(Math.random()*(max-min+1))+min;export const volumesGenerator=(count,t)=>{const tasks=[];const usedQuestions=new Set();while(tasks.length<count){let question,answer,explanation,answerFormat;let translationKey,translationParams,explanationKey,explanationParams,formatKey;let type=getRandomInt(1,10);switch(type){case 1:// Объем куба\nconst edge1=getRandomInt(2,8);const volume1=edge1*edge1*edge1;question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043C \\u043A\\u0443\\u0431\\u0430 \\u0441 \\u0440\\u0435\\u0431\\u0440\\u043E\\u043C \".concat(edge1,\" \\u0441\\u043C\");translationKey='tasks.volumes.cube';translationParams={edge:edge1};answer=volume1.toString();explanation=\"\\u041E\\u0431\\u044A\\u0435\\u043C \\u043A\\u0443\\u0431\\u0430 = \\u0440\\u0435\\u0431\\u0440\\u043E\\xB3 = \".concat(edge1,\" \\xD7 \").concat(edge1,\" \\xD7 \").concat(edge1,\" = \").concat(volume1,\" \\u0441\\u043C\\xB3\");explanationKey='tasks.volumes.cube_explanation';explanationParams={edge:edge1,result:volume1};answerFormat=\"число (в см³)\";formatKey='answerFormats.cm3';break;case 2:// Объем прямоугольного параллелепипеда\nconst length2=getRandomInt(4,10);const width2=getRandomInt(3,8);const height2=getRandomInt(5,12);const volume2=length2*width2*height2;question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043C \\u043F\\u0440\\u044F\\u043C\\u043E\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043F\\u0430\\u0440\\u0430\\u043B\\u043B\\u0435\\u043B\\u0435\\u043F\\u0438\\u043F\\u0435\\u0434\\u0430 \".concat(length2,\"\\xD7\").concat(width2,\"\\xD7\").concat(height2,\" \\u0441\\u043C\");translationKey='tasks.volumes.rectangular_prism';translationParams={length:length2,width:width2,height:height2};answer=volume2.toString();explanation=\"\\u041E\\u0431\\u044A\\u0435\\u043C = \\u0434\\u043B\\u0438\\u043D\\u0430 \\xD7 \\u0448\\u0438\\u0440\\u0438\\u043D\\u0430 \\xD7 \\u0432\\u044B\\u0441\\u043E\\u0442\\u0430 = \".concat(length2,\" \\xD7 \").concat(width2,\" \\xD7 \").concat(height2,\" = \").concat(volume2,\" \\u0441\\u043C\\xB3\");explanationKey='tasks.volumes.rectangular_prism_explanation';explanationParams={length:length2,width:width2,height:height2,result:volume2};answerFormat=\"число (в см³)\";formatKey='answerFormats.cm3';break;case 3:// Объем цилиндра\nconst radius3=getRandomInt(2,5);const height3=getRandomInt(6,12);const volume3=Math.round(3.14*radius3*radius3*height3);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043C \\u0446\\u0438\\u043B\\u0438\\u043D\\u0434\\u0440\\u0430 \\u0440\\u0430\\u0434\\u0438\\u0443\\u0441\\u043E\\u043C \".concat(radius3,\" \\u0441\\u043C \\u0438 \\u0432\\u044B\\u0441\\u043E\\u0442\\u043E\\u0439 \").concat(height3,\" \\u0441\\u043C (\\u03C0\\u22483.14)\");translationKey='tasks.volumes.cylinder';translationParams={radius:radius3,height:height3};answer=volume3.toString();explanation=\"\\u041E\\u0431\\u044A\\u0435\\u043C \\u0446\\u0438\\u043B\\u0438\\u043D\\u0434\\u0440\\u0430 = \\u03C0 \\xD7 \\u0440\\u0430\\u0434\\u0438\\u0443\\u0441\\xB2 \\xD7 \\u0432\\u044B\\u0441\\u043E\\u0442\\u0430 = 3.14 \\xD7 \".concat(radius3,\"\\xB2 \\xD7 \").concat(height3,\" = \").concat(volume3,\" \\u0441\\u043C\\xB3\");explanationKey='tasks.volumes.cylinder_explanation';explanationParams={radius:radius3,height:height3,result:volume3};answerFormat=\"число (в см³)\";formatKey='answerFormats.cm3';break;case 4:// Объем конуса\nconst radius4=getRandomInt(2,5);const height4=getRandomInt(6,12);const volume4=Math.round(3.14*radius4*radius4*height4/3);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043C \\u043A\\u043E\\u043D\\u0443\\u0441\\u0430 \\u0440\\u0430\\u0434\\u0438\\u0443\\u0441\\u043E\\u043C \".concat(radius4,\" \\u0441\\u043C \\u0438 \\u0432\\u044B\\u0441\\u043E\\u0442\\u043E\\u0439 \").concat(height4,\" \\u0441\\u043C (\\u03C0\\u22483.14)\");translationKey='tasks.volumes.cone';translationParams={radius:radius4,height:height4};answer=volume4.toString();explanation=\"\\u041E\\u0431\\u044A\\u0435\\u043C \\u043A\\u043E\\u043D\\u0443\\u0441\\u0430 = (\\u03C0 \\xD7 \\u0440\\u0430\\u0434\\u0438\\u0443\\u0441\\xB2 \\xD7 \\u0432\\u044B\\u0441\\u043E\\u0442\\u0430) / 3 = (3.14 \\xD7 \".concat(radius4,\"\\xB2 \\xD7 \").concat(height4,\") / 3 = \").concat(volume4,\" \\u0441\\u043C\\xB3\");explanationKey='tasks.volumes.cone_explanation';explanationParams={radius:radius4,height:height4,result:volume4};answerFormat=\"число (в см³)\";formatKey='answerFormats.cm3';break;case 5:// Объем пирамиды\nconst baseSide5=getRandomInt(4,8);const height5=getRandomInt(6,12);const baseArea5=baseSide5*baseSide5;const volume5=Math.round(baseArea5*height5/3);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043C \\u043A\\u0432\\u0430\\u0434\\u0440\\u0430\\u0442\\u043D\\u043E\\u0439 \\u043F\\u0438\\u0440\\u0430\\u043C\\u0438\\u0434\\u044B \\u0441\\u043E \\u0441\\u0442\\u043E\\u0440\\u043E\\u043D\\u043E\\u0439 \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \".concat(baseSide5,\" \\u0441\\u043C \\u0438 \\u0432\\u044B\\u0441\\u043E\\u0442\\u043E\\u0439 \").concat(height5,\" \\u0441\\u043C\");translationKey='tasks.volumes.pyramid';translationParams={side:baseSide5,height:height5};answer=volume5.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F = \".concat(baseSide5,\" \\xD7 \").concat(baseSide5,\" = \").concat(baseArea5,\" \\u0441\\u043C\\xB2, \\u043E\\u0431\\u044A\\u0435\\u043C = (\\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\xD7 \\u0432\\u044B\\u0441\\u043E\\u0442\\u0430) / 3 = (\").concat(baseArea5,\" \\xD7 \").concat(height5,\") / 3 = \").concat(volume5,\" \\u0441\\u043C\\xB3\");explanationKey='tasks.volumes.pyramid_explanation';explanationParams={side:baseSide5,height:height5,baseArea:baseArea5,result:volume5};answerFormat=\"число (в см³)\";formatKey='answerFormats.cm3';break;case 6:// Объем шара\nconst radius6=getRandomInt(3,6);const volume6=Math.round(4*3.14*radius6*radius6*radius6/3);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043C \\u0448\\u0430\\u0440\\u0430 \\u0440\\u0430\\u0434\\u0438\\u0443\\u0441\\u043E\\u043C \".concat(radius6,\" \\u0441\\u043C (\\u03C0\\u22483.14)\");translationKey='tasks.volumes.sphere';translationParams={radius:radius6};answer=volume6.toString();explanation=\"\\u041E\\u0431\\u044A\\u0435\\u043C \\u0448\\u0430\\u0440\\u0430 = (4 \\xD7 \\u03C0 \\xD7 \\u0440\\u0430\\u0434\\u0438\\u0443\\u0441\\xB3) / 3 = (4 \\xD7 3.14 \\xD7 \".concat(radius6,\"\\xB3) / 3 = \").concat(volume6,\" \\u0441\\u043C\\xB3\");explanationKey='tasks.volumes.sphere_explanation';explanationParams={radius:radius6,result:volume6};answerFormat=\"число (в см³)\";formatKey='answerFormats.cm3';break;case 7:// Объем призмы\nconst base7=getRandomInt(4,8);const height7=getRandomInt(3,6);const length7=getRandomInt(5,10);const baseArea7=base7*height7/2;const volume7=Math.round(baseArea7*length7);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043C \\u0442\\u0440\\u0435\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u043E\\u0439 \\u043F\\u0440\\u0438\\u0437\\u043C\\u044B \\u0441 \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\u043C \".concat(base7,\" \\u0441\\u043C, \\u0432\\u044B\\u0441\\u043E\\u0442\\u043E\\u0439 \").concat(height7,\" \\u0441\\u043C \\u0438 \\u0434\\u043B\\u0438\\u043D\\u043E\\u0439 \").concat(length7,\" \\u0441\\u043C\");translationKey='tasks.volumes.triangular_prism';translationParams={base:base7,height:height7,length:length7};answer=volume7.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F = (\".concat(base7,\" \\xD7 \").concat(height7,\") / 2 = \").concat(baseArea7,\" \\u0441\\u043C\\xB2, \\u043E\\u0431\\u044A\\u0435\\u043C = \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\xD7 \\u0434\\u043B\\u0438\\u043D\\u0430 = \").concat(baseArea7,\" \\xD7 \").concat(length7,\" = \").concat(volume7,\" \\u0441\\u043C\\xB3\");explanationKey='tasks.volumes.triangular_prism_explanation';explanationParams={base:base7,height:height7,length:length7,baseArea:baseArea7,result:volume7};answerFormat=\"число (в см³)\";formatKey='answerFormats.cm3';break;case 8:// Объем через площадь основания\nconst baseArea8=getRandomInt(20,50);const height8=getRandomInt(6,12);const volume8=baseArea8*height8;question=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0446\\u0438\\u043B\\u0438\\u043D\\u0434\\u0440\\u0430 \".concat(baseArea8,\" \\u0441\\u043C\\xB2, \\u0432\\u044B\\u0441\\u043E\\u0442\\u0430 \").concat(height8,\" \\u0441\\u043C. \\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043C\");translationKey='tasks.volumes.from_base_area';translationParams={area:baseArea8,height:height8};answer=volume8.toString();explanation=\"\\u041E\\u0431\\u044A\\u0435\\u043C = \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\xD7 \\u0432\\u044B\\u0441\\u043E\\u0442\\u0430 = \".concat(baseArea8,\" \\xD7 \").concat(height8,\" = \").concat(volume8,\" \\u0441\\u043C\\xB3\");explanationKey='tasks.volumes.from_base_area_explanation';explanationParams={area:baseArea8,height:height8,result:volume8};answerFormat=\"число (в см³)\";formatKey='answerFormats.cm3';break;case 9:// Сравнение объемов\nconst edgeA9=getRandomInt(3,6);const edgeB9=getRandomInt(4,7);const volumeA9=edgeA9*edgeA9*edgeA9;const volumeB9=edgeB9*edgeB9*edgeB9;const comparisonResult=volumeA9>volumeB9?\"больше\":volumeA9<volumeB9?\"меньше\":\"равны\";question=\"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043C\\u044B \\u043A\\u0443\\u0431\\u043E\\u0432 \\u0441 \\u0440\\u0435\\u0431\\u0440\\u0430\\u043C\\u0438 \".concat(edgeA9,\" \\u0441\\u043C \\u0438 \").concat(edgeB9,\" \\u0441\\u043C\");translationKey='tasks.volumes.compare_volumes';translationParams={edgeA:edgeA9,edgeB:edgeB9};answer=comparisonResult;explanation=\"\\u041E\\u0431\\u044A\\u0435\\u043C\\u2081 = \".concat(edgeA9,\"\\xB3 = \").concat(volumeA9,\" \\u0441\\u043C\\xB3, \\u043E\\u0431\\u044A\\u0435\\u043C\\u2082 = \").concat(edgeB9,\"\\xB3 = \").concat(volumeB9,\" \\u0441\\u043C\\xB3 \\u2192 \").concat(volumeA9,\" \").concat(comparisonResult,\" \").concat(volumeB9);explanationKey='tasks.volumes.compare_volumes_explanation';explanationParams={edgeA:edgeA9,edgeB:edgeB9,volumeA:volumeA9,volumeB:volumeB9,result:comparisonResult};answerFormat=\"больше/меньше/равно\";formatKey='answerFormats.comparison';break;case 10:// Объем составного тела\nconst cubeEdge10=getRandomInt(3,5);const prismBase10=getRandomInt(4,6);const prismHeight10=getRandomInt(3,5);const prismLength10=getRandomInt(4,6);const cubeVolume10=cubeEdge10*cubeEdge10*cubeEdge10;const prismVolume10=Math.round(prismBase10*prismHeight10/2*prismLength10);const totalVolume10=cubeVolume10+prismVolume10;question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043C \\u0444\\u0438\\u0433\\u0443\\u0440\\u044B: \\u043A\\u0443\\u0431 \\u0441 \\u0440\\u0435\\u0431\\u0440\\u043E\\u043C \".concat(cubeEdge10,\" \\u0441\\u043C \\u0438 \\u0442\\u0440\\u0435\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0430\\u044F \\u043F\\u0440\\u0438\\u0437\\u043C\\u0430 \\u0441 \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\u043C \").concat(prismBase10,\" \\u0441\\u043C, \\u0432\\u044B\\u0441\\u043E\\u0442\\u043E\\u0439 \").concat(prismHeight10,\" \\u0441\\u043C \\u0438 \\u0434\\u043B\\u0438\\u043D\\u043E\\u0439 \").concat(prismLength10,\" \\u0441\\u043C\");translationKey='tasks.volumes.composite_volume';translationParams={cubeEdge:cubeEdge10,prismBase:prismBase10,prismHeight:prismHeight10,prismLength:prismLength10};answer=totalVolume10.toString();explanation=\"\\u041E\\u0431\\u044A\\u0435\\u043C \\u043A\\u0443\\u0431\\u0430 = \".concat(cubeEdge10,\"\\xB3 = \").concat(cubeVolume10,\" \\u0441\\u043C\\xB3, \\u043E\\u0431\\u044A\\u0435\\u043C \\u043F\\u0440\\u0438\\u0437\\u043C\\u044B = (\").concat(prismBase10,\" \\xD7 \").concat(prismHeight10,\" / 2) \\xD7 \").concat(prismLength10,\" = \").concat(prismVolume10,\" \\u0441\\u043C\\xB3, \\u043E\\u0431\\u0449\\u0438\\u0439 \\u043E\\u0431\\u044A\\u0435\\u043C = \").concat(cubeVolume10,\" + \").concat(prismVolume10,\" = \").concat(totalVolume10,\" \\u0441\\u043C\\xB3\");explanationKey='tasks.volumes.composite_volume_explanation';explanationParams={cubeVolume:cubeVolume10,prismVolume:prismVolume10,result:totalVolume10};answerFormat=\"число (в см³)\";formatKey='answerFormats.cm3';break;default:type=getRandomInt(1,10);continue;}if(!usedQuestions.has(question)){usedQuestions.add(question);tasks.push({question,answer,explanation,answerFormat,translationKey,translationParams,explanationKey,explanationParams,formatKey});}}return tasks;};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","volumesGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","edge1","volume1","concat","edge","toString","result","length2","width2","height2","volume2","width","height","radius3","height3","volume3","round","radius","radius4","height4","volume4","baseSide5","height5","baseArea5","volume5","side","baseArea","radius6","volume6","base7","height7","length7","baseArea7","volume7","base","baseArea8","height8","volume8","area","edgeA9","edgeB9","volumeA9","volumeB9","comparisonResult","edgeA","edgeB","volumeA","volumeB","cubeEdge10","prismBase10","prismHeight10","prismLength10","cubeVolume10","prismVolume10","totalVolume10","cubeEdge","prismBase","prismHeight","prismLength","cubeVolume","prismVolume","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day10-volumes.js"],"sourcesContent":["// day10-volumes.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const volumesGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Объем куба\n        const edge1 = getRandomInt(2, 8);\n        const volume1 = edge1 * edge1 * edge1;\n        question = `Найдите объем куба с ребром ${edge1} см`;\n        translationKey = 'tasks.volumes.cube';\n        translationParams = { edge: edge1 };\n        answer = volume1.toString();\n        explanation = `Объем куба = ребро³ = ${edge1} × ${edge1} × ${edge1} = ${volume1} см³`;\n        explanationKey = 'tasks.volumes.cube_explanation';\n        explanationParams = { edge: edge1, result: volume1 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 2: // Объем прямоугольного параллелепипеда\n        const length2 = getRandomInt(4, 10);\n        const width2 = getRandomInt(3, 8);\n        const height2 = getRandomInt(5, 12);\n        const volume2 = length2 * width2 * height2;\n        question = `Найдите объем прямоугольного параллелепипеда ${length2}×${width2}×${height2} см`;\n        translationKey = 'tasks.volumes.rectangular_prism';\n        translationParams = { length: length2, width: width2, height: height2 };\n        answer = volume2.toString();\n        explanation = `Объем = длина × ширина × высота = ${length2} × ${width2} × ${height2} = ${volume2} см³`;\n        explanationKey = 'tasks.volumes.rectangular_prism_explanation';\n        explanationParams = { length: length2, width: width2, height: height2, result: volume2 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 3: // Объем цилиндра\n        const radius3 = getRandomInt(2, 5);\n        const height3 = getRandomInt(6, 12);\n        const volume3 = Math.round(3.14 * radius3 * radius3 * height3);\n        question = `Найдите объем цилиндра радиусом ${radius3} см и высотой ${height3} см (π≈3.14)`;\n        translationKey = 'tasks.volumes.cylinder';\n        translationParams = { radius: radius3, height: height3 };\n        answer = volume3.toString();\n        explanation = `Объем цилиндра = π × радиус² × высота = 3.14 × ${radius3}² × ${height3} = ${volume3} см³`;\n        explanationKey = 'tasks.volumes.cylinder_explanation';\n        explanationParams = { radius: radius3, height: height3, result: volume3 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 4: // Объем конуса\n        const radius4 = getRandomInt(2, 5);\n        const height4 = getRandomInt(6, 12);\n        const volume4 = Math.round((3.14 * radius4 * radius4 * height4) / 3);\n        question = `Найдите объем конуса радиусом ${radius4} см и высотой ${height4} см (π≈3.14)`;\n        translationKey = 'tasks.volumes.cone';\n        translationParams = { radius: radius4, height: height4 };\n        answer = volume4.toString();\n        explanation = `Объем конуса = (π × радиус² × высота) / 3 = (3.14 × ${radius4}² × ${height4}) / 3 = ${volume4} см³`;\n        explanationKey = 'tasks.volumes.cone_explanation';\n        explanationParams = { radius: radius4, height: height4, result: volume4 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 5: // Объем пирамиды\n        const baseSide5 = getRandomInt(4, 8);\n        const height5 = getRandomInt(6, 12);\n        const baseArea5 = baseSide5 * baseSide5;\n        const volume5 = Math.round((baseArea5 * height5) / 3);\n        question = `Найдите объем квадратной пирамиды со стороной основания ${baseSide5} см и высотой ${height5} см`;\n        translationKey = 'tasks.volumes.pyramid';\n        translationParams = { side: baseSide5, height: height5 };\n        answer = volume5.toString();\n        explanation = `Площадь основания = ${baseSide5} × ${baseSide5} = ${baseArea5} см², объем = (площадь основания × высота) / 3 = (${baseArea5} × ${height5}) / 3 = ${volume5} см³`;\n        explanationKey = 'tasks.volumes.pyramid_explanation';\n        explanationParams = { side: baseSide5, height: height5, baseArea: baseArea5, result: volume5 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 6: // Объем шара\n        const radius6 = getRandomInt(3, 6);\n        const volume6 = Math.round((4 * 3.14 * radius6 * radius6 * radius6) / 3);\n        question = `Найдите объем шара радиусом ${radius6} см (π≈3.14)`;\n        translationKey = 'tasks.volumes.sphere';\n        translationParams = { radius: radius6 };\n        answer = volume6.toString();\n        explanation = `Объем шара = (4 × π × радиус³) / 3 = (4 × 3.14 × ${radius6}³) / 3 = ${volume6} см³`;\n        explanationKey = 'tasks.volumes.sphere_explanation';\n        explanationParams = { radius: radius6, result: volume6 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 7: // Объем призмы\n        const base7 = getRandomInt(4, 8);\n        const height7 = getRandomInt(3, 6);\n        const length7 = getRandomInt(5, 10);\n        const baseArea7 = (base7 * height7) / 2;\n        const volume7 = Math.round(baseArea7 * length7);\n        question = `Найдите объем треугольной призмы с основанием ${base7} см, высотой ${height7} см и длиной ${length7} см`;\n        translationKey = 'tasks.volumes.triangular_prism';\n        translationParams = { base: base7, height: height7, length: length7 };\n        answer = volume7.toString();\n        explanation = `Площадь основания = (${base7} × ${height7}) / 2 = ${baseArea7} см², объем = площадь основания × длина = ${baseArea7} × ${length7} = ${volume7} см³`;\n        explanationKey = 'tasks.volumes.triangular_prism_explanation';\n        explanationParams = { base: base7, height: height7, length: length7, baseArea: baseArea7, result: volume7 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 8: // Объем через площадь основания\n        const baseArea8 = getRandomInt(20, 50);\n        const height8 = getRandomInt(6, 12);\n        const volume8 = baseArea8 * height8;\n        question = `Площадь основания цилиндра ${baseArea8} см², высота ${height8} см. Найдите объем`;\n        translationKey = 'tasks.volumes.from_base_area';\n        translationParams = { area: baseArea8, height: height8 };\n        answer = volume8.toString();\n        explanation = `Объем = площадь основания × высота = ${baseArea8} × ${height8} = ${volume8} см³`;\n        explanationKey = 'tasks.volumes.from_base_area_explanation';\n        explanationParams = { area: baseArea8, height: height8, result: volume8 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 9: // Сравнение объемов\n        const edgeA9 = getRandomInt(3, 6);\n        const edgeB9 = getRandomInt(4, 7);\n        const volumeA9 = edgeA9 * edgeA9 * edgeA9;\n        const volumeB9 = edgeB9 * edgeB9 * edgeB9;\n        const comparisonResult = volumeA9 > volumeB9 ? \"больше\" : volumeA9 < volumeB9 ? \"меньше\" : \"равны\";\n        question = `Сравните объемы кубов с ребрами ${edgeA9} см и ${edgeB9} см`;\n        translationKey = 'tasks.volumes.compare_volumes';\n        translationParams = { edgeA: edgeA9, edgeB: edgeB9 };\n        answer = comparisonResult;\n        explanation = `Объем₁ = ${edgeA9}³ = ${volumeA9} см³, объем₂ = ${edgeB9}³ = ${volumeB9} см³ → ${volumeA9} ${comparisonResult} ${volumeB9}`;\n        explanationKey = 'tasks.volumes.compare_volumes_explanation';\n        explanationParams = { edgeA: edgeA9, edgeB: edgeB9, volumeA: volumeA9, volumeB: volumeB9, result: comparisonResult };\n        answerFormat = \"больше/меньше/равно\";\n        formatKey = 'answerFormats.comparison';\n        break;\n\n      case 10: // Объем составного тела\n        const cubeEdge10 = getRandomInt(3, 5);\n        const prismBase10 = getRandomInt(4, 6);\n        const prismHeight10 = getRandomInt(3, 5);\n        const prismLength10 = getRandomInt(4, 6);\n        const cubeVolume10 = cubeEdge10 * cubeEdge10 * cubeEdge10;\n        const prismVolume10 = Math.round((prismBase10 * prismHeight10 / 2) * prismLength10);\n        const totalVolume10 = cubeVolume10 + prismVolume10;\n        question = `Найдите объем фигуры: куб с ребром ${cubeEdge10} см и треугольная призма с основанием ${prismBase10} см, высотой ${prismHeight10} см и длиной ${prismLength10} см`;\n        translationKey = 'tasks.volumes.composite_volume';\n        translationParams = { cubeEdge: cubeEdge10, prismBase: prismBase10, prismHeight: prismHeight10, prismLength: prismLength10 };\n        answer = totalVolume10.toString();\n        explanation = `Объем куба = ${cubeEdge10}³ = ${cubeVolume10} см³, объем призмы = (${prismBase10} × ${prismHeight10} / 2) × ${prismLength10} = ${prismVolume10} см³, общий объем = ${cubeVolume10} + ${prismVolume10} = ${totalVolume10} см³`;\n        explanationKey = 'tasks.volumes.composite_volume_explanation';\n        explanationParams = { cubeVolume: cubeVolume10, prismVolume: prismVolume10, result: totalVolume10 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}