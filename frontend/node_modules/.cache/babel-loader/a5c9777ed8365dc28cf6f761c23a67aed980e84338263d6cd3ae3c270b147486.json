{"ast":null,"code":"// day7-commonFractions.js\nconst getRandomInt=(min,max)=>Math.floor(Math.random()*(max-min+1))+min;export const commonFractionsGenerator=(count,t)=>{const tasks=[];const usedQuestions=new Set();while(tasks.length<count){let question,answer,explanation,answerFormat;let translationKey,translationParams,explanationKey,explanationParams,formatKey;let type=getRandomInt(1,10);switch(type){case 1:// Сокращение дроби\nconst num1=getRandomInt(2,8);const den1=getRandomInt(3,12);const gcd1=(a,b)=>b===0?a:gcd1(b,a%b);const divisor1=gcd1(num1*2,den1*2);question=\"\\u0421\\u043E\\u043A\\u0440\\u0430\\u0442\\u0438\\u0442\\u0435 \\u0434\\u0440\\u043E\\u0431\\u044C: \".concat(num1*2,\"/\").concat(den1*2);translationKey='tasks.common_fractions.reduce';translationParams={numerator:num1*2,denominator:den1*2};answer=\"\".concat(num1,\"/\").concat(den1);explanation=\"\\u0414\\u0435\\u043B\\u0438\\u043C \\u0447\\u0438\\u0441\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C \\u0438 \\u0437\\u043D\\u0430\\u043C\\u0435\\u043D\\u0430\\u0442\\u0435\\u043B\\u044C \\u043D\\u0430 \".concat(divisor1,\": \").concat(num1*2,\"/\").concat(den1*2,\" = \").concat(num1,\"/\").concat(den1);explanationKey='tasks.common_fractions.reduce_explanation';explanationParams={numerator:num1*2,denominator:den1*2,divisor:divisor1,result:\"\".concat(num1,\"/\").concat(den1)};answerFormat=\"дробь\";formatKey='answerFormats.fraction';break;case 2:// Приведение к общему знаменателю\nconst a2=getRandomInt(1,4);const b2=getRandomInt(1,4);const den2=6;const fraction1=\"\".concat(a2*2,\"/\").concat(den2);const fraction2=\"\".concat(b2*3,\"/\").concat(den2);question=\"\\u041F\\u0440\\u0438\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0440\\u043E\\u0431\\u0438 \".concat(a2,\"/3 \\u0438 \").concat(b2,\"/2 \\u043A \\u043E\\u0431\\u0449\\u0435\\u043C\\u0443 \\u0437\\u043D\\u0430\\u043C\\u0435\\u043D\\u0430\\u0442\\u0435\\u043B\\u044E \").concat(den2);translationKey='tasks.common_fractions.common_denominator';translationParams={a:a2,b:b2,den:den2};answer=\"\".concat(fraction1,\" \\u0438 \").concat(fraction2);explanation=\"3 \\u2192 \".concat(den2,\": \\xD72 = \").concat(fraction1,\", 2 \\u2192 \").concat(den2,\": \\xD73 = \").concat(fraction2);explanationKey='tasks.common_fractions.common_denominator_explanation';explanationParams={a:a2,b:b2,den:den2,result:answer};answerFormat=\"две дроби через 'и'\";formatKey='answerFormats.fractions_pair';break;case 3:// Сравнение дробей\nconst num3_1=getRandomInt(1,3);const den3_1=getRandomInt(4,8);const num3_2=getRandomInt(1,3);const den3_2=getRandomInt(4,8);const value1=(num3_1/den3_1).toFixed(2);const value2=(num3_2/den3_2).toFixed(2);const comparisonResult=num3_1/den3_1>num3_2/den3_2?\">\":num3_1/den3_1<num3_2/den3_2?\"<\":\"=\";question=\"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0438\\u0442\\u0435 \\u0434\\u0440\\u043E\\u0431\\u0438: \".concat(num3_1,\"/\").concat(den3_1,\" \\u0438 \").concat(num3_2,\"/\").concat(den3_2);translationKey='tasks.common_fractions.compare';translationParams={a:num3_1,b:den3_1,c:num3_2,d:den3_2};answer=comparisonResult;explanation=\"\".concat(num3_1,\"/\").concat(den3_1,\" \").concat(comparisonResult,\" \").concat(num3_2,\"/\").concat(den3_2,\" (\").concat(value1,\" \").concat(comparisonResult,\" \").concat(value2,\")\");explanationKey='tasks.common_fractions.compare_explanation';explanationParams={a:num3_1,b:den3_1,c:num3_2,d:den3_2,value1,value2,result:comparisonResult};answerFormat=\"больше/меньше/равно\";formatKey='answerFormats.comparison';break;case 4:// Перевод в смешанное число\nconst num4=getRandomInt(7,15);const den4=getRandomInt(2,5);const whole4=Math.floor(num4/den4);const remainder4=num4%den4;question=\"\\u041F\\u0435\\u0440\\u0435\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0440\\u043E\\u0431\\u044C \".concat(num4,\"/\").concat(den4,\" \\u0432 \\u0441\\u043C\\u0435\\u0448\\u0430\\u043D\\u043D\\u043E\\u0435 \\u0447\\u0438\\u0441\\u043B\\u043E\");translationKey='tasks.common_fractions.to_mixed';translationParams={numerator:num4,denominator:den4};answer=remainder4===0?\"\".concat(whole4):\"\".concat(whole4,\" \").concat(remainder4,\"/\").concat(den4);explanation=\"\".concat(num4,\"/\").concat(den4,\" = \").concat(whole4,\" \\u0446\\u0435\\u043B\\u044B\\u0445 \\u0438 \").concat(remainder4,\"/\").concat(den4);explanationKey='tasks.common_fractions.to_mixed_explanation';explanationParams={numerator:num4,denominator:den4,whole:whole4,remainder:remainder4};answerFormat=\"смешанное число\";formatKey='answerFormats.mixed_number';break;case 5:// Перевод из смешанного числа\nconst whole5=getRandomInt(1,3);const num5=getRandomInt(1,4);const den5=getRandomInt(2,6);const improperFraction=\"\".concat(whole5*den5+num5,\"/\").concat(den5);question=\"\\u041F\\u0435\\u0440\\u0435\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043C\\u0435\\u0448\\u0430\\u043D\\u043D\\u043E\\u0435 \\u0447\\u0438\\u0441\\u043B\\u043E \".concat(whole5,\" \").concat(num5,\"/\").concat(den5,\" \\u0432 \\u043D\\u0435\\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u0443\\u044E \\u0434\\u0440\\u043E\\u0431\\u044C\");translationKey='tasks.common_fractions.from_mixed';translationParams={whole:whole5,numerator:num5,denominator:den5};answer=improperFraction;explanation=\"\".concat(whole5,\" \").concat(num5,\"/\").concat(den5,\" = (\").concat(whole5,\" \\xD7 \").concat(den5,\" + \").concat(num5,\") / \").concat(den5,\" = \").concat(improperFraction);explanationKey='tasks.common_fractions.from_mixed_explanation';explanationParams={whole:whole5,numerator:num5,denominator:den5,result:improperFraction};answerFormat=\"дробь\";formatKey='answerFormats.fraction';break;case 6:// Сложение с общим знаменателем\nconst num6_1=getRandomInt(1,4);const num6_2=getRandomInt(1,4);const den6=8;const sum6=num6_1+num6_2;question=\"\\u0421\\u043B\\u043E\\u0436\\u0438\\u0442\\u0435 \\u0434\\u0440\\u043E\\u0431\\u0438: \".concat(num6_1,\"/\").concat(den6,\" + \").concat(num6_2,\"/\").concat(den6);translationKey='tasks.common_fractions.add_same_denominator';translationParams={a:num6_1,b:num6_2,den:den6};answer=\"\".concat(sum6,\"/\").concat(den6);explanation=\"\\u041F\\u0440\\u0438 \\u043E\\u0434\\u0438\\u043D\\u0430\\u043A\\u043E\\u0432\\u044B\\u0445 \\u0437\\u043D\\u0430\\u043C\\u0435\\u043D\\u0430\\u0442\\u0435\\u043B\\u044F\\u0445 \\u0441\\u043A\\u043B\\u0430\\u0434\\u044B\\u0432\\u0430\\u0435\\u043C \\u0447\\u0438\\u0441\\u043B\\u0438\\u0442\\u0435\\u043B\\u0438: \".concat(num6_1,\" + \").concat(num6_2,\" = \").concat(sum6);explanationKey='tasks.common_fractions.add_same_denominator_explanation';explanationParams={a:num6_1,b:num6_2,den:den6,result:answer};answerFormat=\"дробь\";formatKey='answerFormats.fraction';break;case 7:// Вычитание с общим знаменателем\nconst num7_1=getRandomInt(3,7);const num7_2=getRandomInt(1,3);const den7=8;const diff7=num7_1-num7_2;question=\"\\u0412\\u044B\\u0447\\u0442\\u0438\\u0442\\u0435 \\u0434\\u0440\\u043E\\u0431\\u0438: \".concat(num7_1,\"/\").concat(den7,\" - \").concat(num7_2,\"/\").concat(den7);translationKey='tasks.common_fractions.subtract_same_denominator';translationParams={a:num7_1,b:num7_2,den:den7};answer=\"\".concat(diff7,\"/\").concat(den7);explanation=\"\\u041F\\u0440\\u0438 \\u043E\\u0434\\u0438\\u043D\\u0430\\u043A\\u043E\\u0432\\u044B\\u0445 \\u0437\\u043D\\u0430\\u043C\\u0435\\u043D\\u0430\\u0442\\u0435\\u043B\\u044F\\u0445 \\u0432\\u044B\\u0447\\u0438\\u0442\\u0430\\u0435\\u043C \\u0447\\u0438\\u0441\\u043B\\u0438\\u0442\\u0435\\u043B\\u0438: \".concat(num7_1,\" - \").concat(num7_2,\" = \").concat(diff7);explanationKey='tasks.common_fractions.subtract_same_denominator_explanation';explanationParams={a:num7_1,b:num7_2,den:den7,result:answer};answerFormat=\"дробь\";formatKey='answerFormats.fraction';break;case 8:// Нахождение части от числа\nconst fraction8=getRandomInt(1,4);const den8=getRandomInt(2,6);const number8=getRandomInt(10,30);const result8=Math.round(fraction8/den8*number8);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \".concat(fraction8,\"/\").concat(den8,\" \\u043E\\u0442 \\u0447\\u0438\\u0441\\u043B\\u0430 \").concat(number8);translationKey='tasks.common_fractions.fraction_of_number';translationParams={numerator:fraction8,denominator:den8,number:number8};answer=result8.toString();explanation=\"\".concat(fraction8,\"/\").concat(den8,\" \\u043E\\u0442 \").concat(number8,\" = (\").concat(fraction8,\" \\xD7 \").concat(number8,\") / \").concat(den8,\" = \").concat(result8);explanationKey='tasks.common_fractions.fraction_of_number_explanation';explanationParams={numerator:fraction8,denominator:den8,number:number8,result:result8};answerFormat=\"число\";formatKey='answerFormats.number';break;case 9:// Нахождение числа по его части\nconst fraction9=getRandomInt(1,3);const den9=getRandomInt(2,5);const part9=getRandomInt(5,15);const whole9=Math.round(part9*den9/fraction9);question=\"\\u0415\\u0441\\u043B\\u0438 \".concat(fraction9,\"/\").concat(den9,\" \\u0447\\u0438\\u0441\\u043B\\u0430 \\u0440\\u0430\\u0432\\u043D\\u044B \").concat(part9,\", \\u043D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0441\\u0451 \\u0447\\u0438\\u0441\\u043B\\u043E\");translationKey='tasks.common_fractions.number_from_fraction';translationParams={numerator:fraction9,denominator:den9,part:part9};answer=whole9.toString();explanation=\"\\u0412\\u0441\\u0451 \\u0447\\u0438\\u0441\\u043B\\u043E = (\".concat(part9,\" \\xD7 \").concat(den9,\") / \").concat(fraction9,\" = \").concat(whole9);explanationKey='tasks.common_fractions.number_from_fraction_explanation';explanationParams={numerator:fraction9,denominator:den9,part:part9,result:whole9};answerFormat=\"число\";formatKey='answerFormats.number';break;case 10:// Приведение к несократимому виду\nconst num10=getRandomInt(2,6)*2;const den10=getRandomInt(3,9)*2;const gcd10=(a,b)=>b===0?a:gcd10(b,a%b);const divisor10=gcd10(num10,den10);const simplifiedFraction=\"\".concat(num10/divisor10,\"/\").concat(den10/divisor10);question=\"\\u041F\\u0440\\u0438\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0440\\u043E\\u0431\\u044C \".concat(num10,\"/\").concat(den10,\" \\u043A \\u043D\\u0435\\u0441\\u043E\\u043A\\u0440\\u0430\\u0442\\u0438\\u043C\\u043E\\u043C\\u0443 \\u0432\\u0438\\u0434\\u0443\");translationKey='tasks.common_fractions.simplify';translationParams={numerator:num10,denominator:den10};answer=simplifiedFraction;explanation=\"\\u0414\\u0435\\u043B\\u0438\\u043C \\u043D\\u0430 \".concat(divisor10,\": \").concat(num10,\"/\").concat(den10,\" = \").concat(simplifiedFraction);explanationKey='tasks.common_fractions.simplify_explanation';explanationParams={numerator:num10,denominator:den10,divisor:divisor10,result:simplifiedFraction};answerFormat=\"дробь\";formatKey='answerFormats.fraction';break;default:type=getRandomInt(1,10);continue;}if(!usedQuestions.has(question)){usedQuestions.add(question);tasks.push({question,answer,explanation,answerFormat,translationKey,translationParams,explanationKey,explanationParams,formatKey});}}return tasks;};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","commonFractionsGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","num1","den1","gcd1","a","b","divisor1","concat","numerator","denominator","divisor","result","a2","b2","den2","fraction1","fraction2","den","num3_1","den3_1","num3_2","den3_2","value1","toFixed","value2","comparisonResult","c","d","num4","den4","whole4","remainder4","whole","remainder","whole5","num5","den5","improperFraction","num6_1","num6_2","den6","sum6","num7_1","num7_2","den7","diff7","fraction8","den8","number8","result8","round","number","toString","fraction9","den9","part9","whole9","part","num10","den10","gcd10","divisor10","simplifiedFraction","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day7-commonFractions.js"],"sourcesContent":["// day7-commonFractions.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const commonFractionsGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Сокращение дроби\n        const num1 = getRandomInt(2, 8);\n        const den1 = getRandomInt(3, 12);\n        const gcd1 = (a, b) => b === 0 ? a : gcd1(b, a % b);\n        const divisor1 = gcd1(num1 * 2, den1 * 2);\n        question = `Сократите дробь: ${num1 * 2}/${den1 * 2}`;\n        translationKey = 'tasks.common_fractions.reduce';\n        translationParams = { numerator: num1 * 2, denominator: den1 * 2 };\n        answer = `${num1}/${den1}`;\n        explanation = `Делим числитель и знаменатель на ${divisor1}: ${num1 * 2}/${den1 * 2} = ${num1}/${den1}`;\n        explanationKey = 'tasks.common_fractions.reduce_explanation';\n        explanationParams = { numerator: num1 * 2, denominator: den1 * 2, divisor: divisor1, result: `${num1}/${den1}` };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 2: // Приведение к общему знаменателю\n        const a2 = getRandomInt(1, 4);\n        const b2 = getRandomInt(1, 4);\n        const den2 = 6;\n        const fraction1 = `${a2 * 2}/${den2}`;\n        const fraction2 = `${b2 * 3}/${den2}`;\n        question = `Приведите дроби ${a2}/3 и ${b2}/2 к общему знаменателю ${den2}`;\n        translationKey = 'tasks.common_fractions.common_denominator';\n        translationParams = { a: a2, b: b2, den: den2 };\n        answer = `${fraction1} и ${fraction2}`;\n        explanation = `3 → ${den2}: ×2 = ${fraction1}, 2 → ${den2}: ×3 = ${fraction2}`;\n        explanationKey = 'tasks.common_fractions.common_denominator_explanation';\n        explanationParams = { a: a2, b: b2, den: den2, result: answer };\n        answerFormat = \"две дроби через 'и'\";\n        formatKey = 'answerFormats.fractions_pair';\n        break;\n\n      case 3: // Сравнение дробей\n        const num3_1 = getRandomInt(1, 3);\n        const den3_1 = getRandomInt(4, 8);\n        const num3_2 = getRandomInt(1, 3);\n        const den3_2 = getRandomInt(4, 8);\n        const value1 = (num3_1 / den3_1).toFixed(2);\n        const value2 = (num3_2 / den3_2).toFixed(2);\n        const comparisonResult = num3_1/den3_1 > num3_2/den3_2 ? \">\" : num3_1/den3_1 < num3_2/den3_2 ? \"<\" : \"=\";\n        question = `Сравните дроби: ${num3_1}/${den3_1} и ${num3_2}/${den3_2}`;\n        translationKey = 'tasks.common_fractions.compare';\n        translationParams = { a: num3_1, b: den3_1, c: num3_2, d: den3_2 };\n        answer = comparisonResult;\n        explanation = `${num3_1}/${den3_1} ${comparisonResult} ${num3_2}/${den3_2} (${value1} ${comparisonResult} ${value2})`;\n        explanationKey = 'tasks.common_fractions.compare_explanation';\n        explanationParams = { \n          a: num3_1, b: den3_1, c: num3_2, d: den3_2, \n          value1, value2, result: comparisonResult \n        };\n        answerFormat = \"больше/меньше/равно\";\n        formatKey = 'answerFormats.comparison';\n        break;\n\n      case 4: // Перевод в смешанное число\n        const num4 = getRandomInt(7, 15);\n        const den4 = getRandomInt(2, 5);\n        const whole4 = Math.floor(num4 / den4);\n        const remainder4 = num4 % den4;\n        question = `Переведите дробь ${num4}/${den4} в смешанное число`;\n        translationKey = 'tasks.common_fractions.to_mixed';\n        translationParams = { numerator: num4, denominator: den4 };\n        answer = remainder4 === 0 ? `${whole4}` : `${whole4} ${remainder4}/${den4}`;\n        explanation = `${num4}/${den4} = ${whole4} целых и ${remainder4}/${den4}`;\n        explanationKey = 'tasks.common_fractions.to_mixed_explanation';\n        explanationParams = { numerator: num4, denominator: den4, whole: whole4, remainder: remainder4 };\n        answerFormat = \"смешанное число\";\n        formatKey = 'answerFormats.mixed_number';\n        break;\n\n      case 5: // Перевод из смешанного числа\n        const whole5 = getRandomInt(1, 3);\n        const num5 = getRandomInt(1, 4);\n        const den5 = getRandomInt(2, 6);\n        const improperFraction = `${whole5 * den5 + num5}/${den5}`;\n        question = `Переведите смешанное число ${whole5} ${num5}/${den5} в неправильную дробь`;\n        translationKey = 'tasks.common_fractions.from_mixed';\n        translationParams = { whole: whole5, numerator: num5, denominator: den5 };\n        answer = improperFraction;\n        explanation = `${whole5} ${num5}/${den5} = (${whole5} × ${den5} + ${num5}) / ${den5} = ${improperFraction}`;\n        explanationKey = 'tasks.common_fractions.from_mixed_explanation';\n        explanationParams = { whole: whole5, numerator: num5, denominator: den5, result: improperFraction };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 6: // Сложение с общим знаменателем\n        const num6_1 = getRandomInt(1, 4);\n        const num6_2 = getRandomInt(1, 4);\n        const den6 = 8;\n        const sum6 = num6_1 + num6_2;\n        question = `Сложите дроби: ${num6_1}/${den6} + ${num6_2}/${den6}`;\n        translationKey = 'tasks.common_fractions.add_same_denominator';\n        translationParams = { a: num6_1, b: num6_2, den: den6 };\n        answer = `${sum6}/${den6}`;\n        explanation = `При одинаковых знаменателях складываем числители: ${num6_1} + ${num6_2} = ${sum6}`;\n        explanationKey = 'tasks.common_fractions.add_same_denominator_explanation';\n        explanationParams = { a: num6_1, b: num6_2, den: den6, result: answer };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 7: // Вычитание с общим знаменателем\n        const num7_1 = getRandomInt(3, 7);\n        const num7_2 = getRandomInt(1, 3);\n        const den7 = 8;\n        const diff7 = num7_1 - num7_2;\n        question = `Вычтите дроби: ${num7_1}/${den7} - ${num7_2}/${den7}`;\n        translationKey = 'tasks.common_fractions.subtract_same_denominator';\n        translationParams = { a: num7_1, b: num7_2, den: den7 };\n        answer = `${diff7}/${den7}`;\n        explanation = `При одинаковых знаменателях вычитаем числители: ${num7_1} - ${num7_2} = ${diff7}`;\n        explanationKey = 'tasks.common_fractions.subtract_same_denominator_explanation';\n        explanationParams = { a: num7_1, b: num7_2, den: den7, result: answer };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 8: // Нахождение части от числа\n        const fraction8 = getRandomInt(1, 4);\n        const den8 = getRandomInt(2, 6);\n        const number8 = getRandomInt(10, 30);\n        const result8 = Math.round((fraction8 / den8) * number8);\n        question = `Найдите ${fraction8}/${den8} от числа ${number8}`;\n        translationKey = 'tasks.common_fractions.fraction_of_number';\n        translationParams = { numerator: fraction8, denominator: den8, number: number8 };\n        answer = result8.toString();\n        explanation = `${fraction8}/${den8} от ${number8} = (${fraction8} × ${number8}) / ${den8} = ${result8}`;\n        explanationKey = 'tasks.common_fractions.fraction_of_number_explanation';\n        explanationParams = { numerator: fraction8, denominator: den8, number: number8, result: result8 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 9: // Нахождение числа по его части\n        const fraction9 = getRandomInt(1, 3);\n        const den9 = getRandomInt(2, 5);\n        const part9 = getRandomInt(5, 15);\n        const whole9 = Math.round((part9 * den9) / fraction9);\n        question = `Если ${fraction9}/${den9} числа равны ${part9}, найдите всё число`;\n        translationKey = 'tasks.common_fractions.number_from_fraction';\n        translationParams = { numerator: fraction9, denominator: den9, part: part9 };\n        answer = whole9.toString();\n        explanation = `Всё число = (${part9} × ${den9}) / ${fraction9} = ${whole9}`;\n        explanationKey = 'tasks.common_fractions.number_from_fraction_explanation';\n        explanationParams = { numerator: fraction9, denominator: den9, part: part9, result: whole9 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 10: // Приведение к несократимому виду\n        const num10 = getRandomInt(2, 6) * 2;\n        const den10 = getRandomInt(3, 9) * 2;\n        const gcd10 = (a, b) => b === 0 ? a : gcd10(b, a % b);\n        const divisor10 = gcd10(num10, den10);\n        const simplifiedFraction = `${num10 / divisor10}/${den10 / divisor10}`;\n        question = `Приведите дробь ${num10}/${den10} к несократимому виду`;\n        translationKey = 'tasks.common_fractions.simplify';\n        translationParams = { numerator: num10, denominator: den10 };\n        answer = simplifiedFraction;\n        explanation = `Делим на ${divisor10}: ${num10}/${den10} = ${simplifiedFraction}`;\n        explanationKey = 'tasks.common_fractions.simplify_explanation';\n        explanationParams = { numerator: num10, denominator: den10, divisor: divisor10, result: simplifiedFraction };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}