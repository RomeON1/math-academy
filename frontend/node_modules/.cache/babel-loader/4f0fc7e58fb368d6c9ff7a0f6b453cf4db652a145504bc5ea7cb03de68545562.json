{"ast":null,"code":"var _jsxFileName = \"/opt/math-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport { authAPI, courseAPI, userAPI } from './services/api';\nimport { courseStructure } from './taskGenerators';\nimport * as taskGenerators from './taskGenerators';\nimport { useTranslation } from 'react-i18next';\nimport DayNavigation from './components/DayNavigation';\n\n// 🟢 ОБНАРУЖЕНИЕ СБРОСА КЭША\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst detectCacheClear = () => {\n  // Проверяем, был ли сброс кэша при загрузке страницы\n  const currentToken = localStorage.getItem('authToken');\n  const currentTests = localStorage.getItem('userMathTests');\n  const currentAnswers = localStorage.getItem('userMathAnswers');\n  const hadDataBefore = sessionStorage.getItem('hadUserData');\n  const wasCacheCleared = sessionStorage.getItem('cacheWasCleared');\n  console.log('🔍 ДЕТЕКТОР СБРОСА КЭША:', {\n    hadDataBefore,\n    wasCacheCleared,\n    currentToken: !!currentToken,\n    currentTests: !!currentTests,\n    currentAnswers: !!currentAnswers\n  });\n\n  // Если раньше были данные, а сейчас их нет - это сброс кэша\n  if (hadDataBefore === 'true' && (!currentTests || !currentAnswers)) {\n    console.log('🚨 ОБНАРУЖЕН СБРОС КЭША!');\n    sessionStorage.setItem('cacheWasCleared', 'true');\n    return true;\n  }\n\n  // Сохраняем текущее состояние для следующей проверки\n  if (currentToken) {\n    sessionStorage.setItem('hadUserData', 'true');\n  }\n  return wasCacheCleared === 'true';\n};\n\n// Функция для применения переводов к заданиям\nconst applyTranslationsToTasks = (tasks, t) => {\n  if (!tasks || !Array.isArray(tasks)) return [];\n  return tasks.map(task => ({\n    ...task,\n    question: task.translationKey ? t(task.translationKey, task.translationParams) : task.question,\n    explanation: task.explanationKey ? t(task.explanationKey, task.explanationParams) : task.explanation,\n    answerFormat: task.formatKey ? t(task.formatKey) : task.answerFormat\n  }));\n};\n\n// 🟢 ФУНКЦИЯ ПРОВЕРКИ ПРАВИЛЬНОСТИ ОТВЕТА\nconst isCorrectAnswerCheck = (day, index, correctAnswer, currentAnswers) => {\n  var _currentAnswers;\n  if (!currentAnswers) return false;\n  const userAnswer = (_currentAnswers = currentAnswers[`${day}-${index}`]) === null || _currentAnswers === void 0 ? void 0 : _currentAnswers.toString().trim().toLowerCase();\n  const correct = correctAnswer === null || correctAnswer === void 0 ? void 0 : correctAnswer.toString().toLowerCase();\n  if (!userAnswer || !correct) return false;\n  if (correct.includes('%')) {\n    const userNum = userAnswer.replace('%', '');\n    const correctNum = correct.replace('%', '');\n    return userNum === correctNum;\n  }\n  if (correct.includes('/')) {\n    const [userA, userB] = userAnswer.split('/');\n    const [correctA, correctB] = correct.split('/');\n    return userA === correctA && userB === correctB;\n  }\n  return userAnswer === correct;\n};\nfunction App() {\n  _s();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [tests, setTests] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [showResetConfirm, setShowResetConfirm] = useState(false);\n  const [user, setUser] = useState(null);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [currentDay, setCurrentDay] = useState(1);\n  const [showScrollTop, setShowScrollTop] = useState(false);\n  const [authError, setAuthError] = useState('');\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  // 🟢 EFFECT ДЛЯ ОТСЛЕЖИВАНИЯ СКРОЛЛА\n  useEffect(() => {\n    const handleScroll = () => {\n      setShowScrollTop(window.scrollY > 300);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // 🟢 НАДЕЖНАЯ ПРОВЕРКА АУТЕНТИФИКАЦИИ\n  const checkAuth = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        setUser({\n          name: t('header.guest', \"Гость\"),\n          isLoggedIn: false\n        });\n        setLoading(false);\n        return;\n      }\n\n      // Пробуем получить данные пользователя\n      try {\n        const response = await authAPI.getMe();\n        const userData = {\n          ...response.data,\n          isLoggedIn: true\n        };\n        setUser(userData);\n        localStorage.setItem('userData', JSON.stringify(userData));\n      } catch (error) {\n        console.log('getMe failed, checking localStorage for user data');\n\n        // Пробуем восстановить из localStorage\n        const savedUser = localStorage.getItem('userData');\n        if (savedUser) {\n          const userData = JSON.parse(savedUser);\n          setUser({\n            ...userData,\n            isLoggedIn: true\n          });\n        } else {\n          // Создаем временного пользователя\n          const tempUser = {\n            id: Date.now(),\n            name: 'Пользователь',\n            email: 'user@example.com',\n            isLoggedIn: true\n          };\n          setUser(tempUser);\n          localStorage.setItem('userData', JSON.stringify(tempUser));\n        }\n      }\n    } catch (error) {\n      console.error('Auth check error:', error);\n      setUser({\n        name: t('header.guest', \"Гость\"),\n        isLoggedIn: false\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [t]);\n\n  // 🟢 ЗАГРУЗКА ПРИ СТАРТЕ\n  useEffect(() => {\n    checkAuth();\n  }, [checkAuth]);\n\n  // 🟢 НАДЕЖНАЯ ЗАГРУЗКА ДАННЫХ\n  const loadUserData = useCallback(async () => {\n    if (dataLoaded) return;\n    try {\n      // 1. Сначала загружаем из localStorage (мгновенно)\n      const savedTests = localStorage.getItem('userMathTests');\n      const savedAnswers = localStorage.getItem('userMathAnswers');\n      let finalTests = [];\n      let finalAnswers = {};\n      if (savedTests && savedAnswers) {\n        try {\n          const parsedTests = JSON.parse(savedTests);\n          const parsedAnswers = JSON.parse(savedAnswers);\n          finalTests = parsedTests.map(dayData => ({\n            ...dayData,\n            tasks: applyTranslationsToTasks(dayData.tasks, t)\n          }));\n          finalAnswers = parsedAnswers;\n        } catch (parseError) {\n          console.error('Error parsing localStorage data:', parseError);\n          // Если ошибка парсинга - генерируем новые данные\n          throw new Error('Invalid localStorage data');\n        }\n      } else {\n        // 2. Генерируем новые задания\n        finalTests = courseStructure.map(day => ({\n          day: day.day,\n          titleKey: day.titleKey,\n          theoryLink: day.theoryLink,\n          tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n        })).filter(day => day.tasks.length > 0);\n        finalAnswers = {};\n      }\n\n      // 3. Устанавливаем данные\n      setTests(finalTests);\n      setAnswers(finalAnswers);\n\n      // 4. Сохраняем в localStorage\n      localStorage.setItem('userMathTests', JSON.stringify(finalTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify(finalAnswers));\n      setDataLoaded(true);\n\n      // 5. ФОНовая синхронизация с сервером для авторизованных пользователей\n      if (user && user.isLoggedIn) {\n        setTimeout(async () => {\n          try {\n            console.log('🔄 Starting background sync with server...');\n\n            // Загружаем ответы из БД\n            const serverAnswers = await userAPI.getAnswers().catch(() => ({\n              data: {}\n            }));\n\n            // Если на сервере есть ответы - используем их\n            if (serverAnswers.data && Object.keys(serverAnswers.data).length > 0) {\n              console.log('✅ Answers loaded from DB:', Object.keys(serverAnswers.data).length);\n              setAnswers(serverAnswers.data);\n              localStorage.setItem('userMathAnswers', JSON.stringify(serverAnswers.data));\n            }\n\n            // Сохраняем текущие тесты на сервер\n            console.log('ℹ️ Сохранение задач временно отключено');\n            console.log('✅ Background sync completed');\n          } catch (syncError) {\n            console.log('Background sync failed, continuing with local data');\n          }\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Error loading user data:', error);\n\n      // АВАРИЙНЫЙ РЕЖИМ: генерируем базовые задания\n      const emergencyTests = courseStructure.map(day => ({\n        day: day.day,\n        titleKey: day.titleKey,\n        theoryLink: day.theoryLink,\n        tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n      })).filter(day => day.tasks.length > 0);\n      setTests(emergencyTests);\n      setAnswers({});\n      localStorage.setItem('userMathTests', JSON.stringify(emergencyTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify({}));\n      setDataLoaded(true);\n    }\n  }, [user, t, dataLoaded]);\n\n  // 🟢 ЗАГРУЗКА ДАННЫХ ПРИ ИЗМЕНЕНИИ ПОЛЬЗОВАТЕЛЯ ИЛИ ЯЗЫКА\n  useEffect(() => {\n    if (!loading && user !== null) {\n      loadUserData();\n    }\n  }, [user, loading, loadUserData]);\n  useEffect(() => {\n    if (dataLoaded && tests.length > 0) {\n      // Обновляем переводы при смене языка\n      const updatedTests = tests.map(dayData => ({\n        ...dayData,\n        tasks: applyTranslationsToTasks(dayData.tasks, t)\n      }));\n      setTests(updatedTests);\n    }\n  }, [i18n.language, t]);\n\n  // 🟢 УЛУЧШЕННАЯ ФУНКЦИЯ ВОССТАНОВЛЕНИЯ ИЗ БАЗЫ ДАННЫХ\n  const recoverFromDatabase = async () => {\n    const hasAuthToken = localStorage.getItem('authToken');\n    const hasLocalTests = localStorage.getItem('userMathTests');\n    const hasLocalAnswers = localStorage.getItem('userMathAnswers');\n    console.log('🔍 СТАТУС ВОССТАНОВЛЕНИЯ:', {\n      hasAuthToken: !!hasAuthToken,\n      hasLocalTests: !!hasLocalTests,\n      hasLocalAnswers: !!hasLocalAnswers\n    });\n\n    // 🟢 ИСПРАВЛЕНИЕ: Проверяем, был ли сброс кэша\n    const wasCacheCleared = detectCacheClear();\n\n    // КРИТИЧЕСКИЙ СЛУЧАЙ: Есть токен, но был сброс кэша ИЛИ нет локальных данных\n    if (hasAuthToken && (wasCacheCleared || !hasLocalTests || !hasLocalAnswers)) {\n      console.log('🚨 ВОССТАНОВЛЕНИЕ ИЗ БД: Токен есть + сброс кэша!');\n\n      // Сбрасываем флаг сброса кэша\n      if (wasCacheCleared) {\n        sessionStorage.removeItem('cacheWasCleared');\n      }\n      try {\n        // 1. Загружаем ВСЕ сохраненные задания из БД\n        console.log('📚 Загружаем сохраненные задания из БД...');\n        const tasksResponse = await userAPI.getAllTasks();\n        const dbTasks = tasksResponse.data || {};\n        console.log('✅ Задания из БД:', Object.keys(dbTasks).length, 'дней');\n\n        // 2. Загружаем ВСЕ ответы из БД\n        console.log('📥 Загружаем ответы из БД...');\n        const answersResponse = await userAPI.getAnswers();\n        const dbAnswers = answersResponse.data || {};\n        console.log('✅ Ответы из БД:', Object.keys(dbAnswers).length, 'записей');\n\n        // 3. Если есть сохраненные задания - используем их\n        let restoredTests = [];\n        if (Object.keys(dbTasks).length > 0) {\n          console.log('🎯 ВОССТАНАВЛИВАЕМ сохраненные задания из БД');\n\n          // Преобразуем задания из БД в структуру приложения\n          restoredTests = Object.keys(dbTasks).map(dayStr => {\n            const day = parseInt(dayStr);\n            const dayTasks = dbTasks[dayStr];\n\n            // Находим информацию о дне из courseStructure\n            const dayInfo = courseStructure.find(d => d.day === day) || {\n              titleKey: `days.day${day}`,\n              theoryLink: null\n            };\n            return {\n              day: day,\n              titleKey: dayInfo.titleKey,\n              theoryLink: dayInfo.theoryLink,\n              tasks: dayTasks.map(task => ({\n                question: task.question,\n                answer: task.answer,\n                explanation: task.explanation,\n                answerFormat: task.answerFormat,\n                // Восстанавливаем translation данные из task_data\n                ...(task.task_data && typeof task.task_data === 'object' ? task.task_data : {})\n              }))\n            };\n          }).filter(day => day.tasks.length > 0);\n          console.log(`✅ Восстановлено ${restoredTests.length} дней с заданиями из БД`);\n        } else {\n          // 4. Если нет сохраненных заданий - генерируем новые\n          console.log('🆕 СОХРАНЕННЫХ ЗАДАНИЙ НЕТ - генерируем новые');\n          restoredTests = courseStructure.map(day => ({\n            day: day.day,\n            titleKey: day.titleKey,\n            theoryLink: day.theoryLink,\n            tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n          })).filter(day => day.tasks.length > 0);\n          console.log(`✅ Создано ${restoredTests.length} дней с новыми заданиями`);\n        }\n\n        // 5. Очищаем несовместимые ответы (те, для которых нет заданий)\n        const compatibleAnswers = {};\n        Object.keys(dbAnswers).forEach(key => {\n          const [day, index] = key.split('-').map(Number);\n          const dayData = restoredTests.find(d => d.day === day);\n          if (dayData && dayData.tasks && dayData.tasks[index]) {\n            compatibleAnswers[key] = dbAnswers[key];\n          } else {\n            console.log(`🗑️ Удаляем несовместимый ответ: ${key}`);\n          }\n        });\n        console.log(`✅ Совместимых ответов: ${Object.keys(compatibleAnswers).length}`);\n\n        // 6. Устанавливаем восстановленные данные\n        setTests(restoredTests);\n        setAnswers(compatibleAnswers);\n        localStorage.setItem('userMathTests', JSON.stringify(restoredTests));\n        localStorage.setItem('userMathAnswers', JSON.stringify(compatibleAnswers));\n        console.log('🎉 ВОССТАНОВЛЕНИЕ ИЗ БАЗЫ ДАННЫХ ЗАВЕРШЕНО!');\n      } catch (error) {\n        var _error$response;\n        console.error('❌ Ошибка восстановления из БД:', error);\n        console.log('🔍 Детали ошибки:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n\n        // АВАРИЙНЫЙ РЕЖИМ: создаем пустые данные\n        console.log('🆘 Создаем аварийные данные...');\n        const emergencyTests = courseStructure.map(day => ({\n          day: day.day,\n          titleKey: day.titleKey,\n          theoryLink: day.theoryLink,\n          tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n        })).filter(day => day.tasks.length > 0);\n        setTests(emergencyTests);\n        setAnswers({});\n        localStorage.setItem('userMathTests', JSON.stringify(emergencyTests));\n        localStorage.setItem('userMathAnswers', JSON.stringify({}));\n      }\n    }\n  };\n\n  // 🟢 ФИНАЛЬНОЕ ВОССТАНОВЛЕНИЕ ИЗ БАЗЫ ДАННЫХ ПОСЛЕ СБРОСА КЭША\n  useEffect(() => {\n    // Запускаем восстановление сразу и каждые 3 секунды\n    recoverFromDatabase();\n    const interval = setInterval(recoverFromDatabase, 3000);\n    return () => clearInterval(interval);\n  }, [t]);\n\n  // 🟢 НАДЕЖНЫЙ ОБРАБОТЧИК ВХОДА\n  const handleLogin = async formData => {\n    setAuthError('');\n    try {\n      var _response$data;\n      console.log('🔐 Attempting login...');\n      const response = await authAPI.login({\n        email: formData.email,\n        password: formData.password\n      });\n      if (!((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.access_token)) {\n        throw new Error('No access token received');\n      }\n      localStorage.setItem('authToken', response.data.access_token);\n      console.log('✅ Login successful, token saved');\n\n      // Закрываем форму входа\n      setShowLogin(false);\n\n      // Обновляем аутентификацию\n      await checkAuth();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('❌ Login error:', error);\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || error.message || 'Ошибка входа';\n      setAuthError(errorMessage);\n\n      // Очищаем невалидный токен\n      localStorage.removeItem('authToken');\n    }\n  };\n\n  // 🟢 НАДЕЖНЫЙ ОБРАБОТЧИК РЕГИСТРАЦИИ\n  const handleRegister = async formData => {\n    setAuthError('');\n    try {\n      var _loginResponse$data;\n      console.log('📝 Attempting registration...');\n      await authAPI.register({\n        email: formData.email,\n        username: formData.username,\n        password: formData.password,\n        grade: formData.grade\n      });\n      console.log('✅ Registration successful, attempting login...');\n      const loginResponse = await authAPI.login({\n        email: formData.email,\n        password: formData.password\n      });\n      if (!((_loginResponse$data = loginResponse.data) !== null && _loginResponse$data !== void 0 && _loginResponse$data.access_token)) {\n        throw new Error('No access token received after registration');\n      }\n      localStorage.setItem('authToken', loginResponse.data.access_token);\n      console.log('✅ Auto-login successful');\n\n      // Закрываем форму регистрации\n      setShowRegister(false);\n\n      // Обновляем аутентификацию\n      await checkAuth();\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('❌ Registration error:', error);\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || error.message || 'Ошибка регистрации';\n      setAuthError(errorMessage);\n\n      // Очищаем невалидный токен\n      localStorage.removeItem('authToken');\n    }\n  };\n\n  // 🟢 ОБРАБОТЧИК ВЫХОДА\n  const handleLogout = () => {\n    console.log('🚪 Logging out...');\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userData');\n    setUser({\n      name: t('header.guest', \"Гость\"),\n      isLoggedIn: false\n    });\n    setAuthError('');\n    // Прогресс остается в localStorage для возможности восстановления\n  };\n\n  // 🟢 ОПТИМИЗИРОВАННАЯ ОБРАБОТКА ВВОДА ОТВЕТА\n  const handleAnswerChange = async (day, index, value) => {\n    const answerKey = `${day}-${index}`;\n    const newAnswers = {\n      ...answers,\n      [answerKey]: value\n    };\n\n    // Немедленно обновляем UI\n    setAnswers(newAnswers);\n    localStorage.setItem('userMathAnswers', JSON.stringify(newAnswers));\n\n    // Фоновая синхронизация с сервером\n    if (user && user.isLoggedIn) {\n      setTimeout(async () => {\n        try {\n          const dayData = tests.find(d => d.day === day);\n          if (dayData && dayData.tasks[index]) {\n            const task = dayData.tasks[index];\n            const isCorrectAnswer = isCorrectAnswerCheck(day, index, task.answer, newAnswers);\n            await userAPI.saveAnswer(day, index, value, isCorrectAnswer);\n            const completedTasks = dayData.tasks.filter((t, i) => isCorrectAnswerCheck(day, i, t.answer, newAnswers)).length;\n            await courseAPI.updateProgress(day, newAnswers, completedTasks);\n          }\n        } catch (error) {\n          console.log('Background answer sync failed');\n        }\n      }, 500);\n    }\n  };\n\n  // 🟢 ВЫЧИСЛЕНИЕ ПРОГРЕССА\n  const getDayProgress = (day, tasks) => {\n    if (!tasks || !Array.isArray(tasks)) return 0;\n    const correctCount = tasks.filter((task, index) => isCorrectAnswerCheck(day, index, task.answer, answers)).length;\n    return tasks.length > 0 ? Math.round(correctCount / tasks.length * 100) : 0;\n  };\n  const getTotalProgress = () => {\n    let totalCorrect = 0;\n    let totalTasks = 0;\n    tests.forEach(dayData => {\n      if (dayData.tasks && Array.isArray(dayData.tasks)) {\n        dayData.tasks.forEach((task, index) => {\n          totalTasks++;\n          if (isCorrectAnswerCheck(dayData.day, index, task.answer, answers)) {\n            totalCorrect++;\n          }\n        });\n      }\n    });\n    return totalTasks > 0 ? Math.round(totalCorrect / totalTasks * 100) : 0;\n  };\n\n  // 🟢 СБРОС ПРОГРЕССА\n  const resetProgress = async () => {\n    try {\n      const userTests = courseStructure.map(day => ({\n        day: day.day,\n        titleKey: day.titleKey,\n        theoryLink: day.theoryLink,\n        tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n      })).filter(day => day.tasks.length > 0);\n      setTests(userTests);\n      setAnswers({});\n      localStorage.setItem('userMathTests', JSON.stringify(userTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify({}));\n\n      // Фоновая синхронизация с сервером\n      if (user && user.isLoggedIn) {\n        setTimeout(async () => {\n          try {\n            await courseAPI.resetProgress();\n            for (const dayData of userTests) {\n              await userAPI.saveTasks(dayData.day, dayData.tasks);\n            }\n          } catch (error) {\n            console.log('Background reset sync failed');\n          }\n        }, 500);\n      }\n    } catch (error) {\n      console.error('Error resetting progress:', error);\n    }\n  };\n\n  // 🟢 ОБРАБОТЧИКИ UI\n  const handleLoginClick = () => {\n    setShowLogin(true);\n    setAuthError('');\n  };\n  const handleRegisterClick = () => {\n    setShowRegister(true);\n    setAuthError('');\n  };\n  const handleDayClick = dayNumber => {\n    setCurrentDay(dayNumber);\n    const element = document.getElementById(`day-${dayNumber}`);\n    if (element) {\n      const headerOffset = 340;\n      const elementPosition = element.offsetTop;\n      const offsetPosition = elementPosition - headerOffset;\n      setTimeout(() => {\n        window.scrollTo({\n          top: Math.max(0, offsetPosition),\n          behavior: 'smooth'\n        });\n      }, 50);\n    }\n  };\n\n  // 🟢 ЗАГРУЗОЧНЫЙ ЭКРАН\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-gray-600 dark:text-gray-400\",\n          children: t('loading', \"Загрузка...\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 🟢 ОСНОВНОЙ RENDER\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-200\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      user: user || {\n        name: t('header.guest', \"Гость\"),\n        isLoggedIn: false\n      },\n      progress: getTotalProgress(),\n      onResetClick: () => setShowResetConfirm(true),\n      onSettingsClick: () => console.log(\"Settings clicked\"),\n      onLoginClick: handleLoginClick,\n      onLogoutClick: handleLogout,\n      grade: \"6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 7\n    }, this), showLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin,\n        onSwitchToRegister: () => {\n          setShowLogin(false);\n          setShowRegister(true);\n          setAuthError('');\n        },\n        error: authError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 9\n    }, this), showRegister && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(Register, {\n        onRegister: handleRegister,\n        onSwitchToLogin: () => {\n          setShowRegister(false);\n          setShowLogin(true);\n          setAuthError('');\n        },\n        error: authError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 9\n    }, this), user && user.isLoggedIn && tests.length > 0 && /*#__PURE__*/_jsxDEV(DayNavigation, {\n      days: tests.map(day => ({\n        ...day,\n        progress: getDayProgress(day.day, day.tasks)\n      })),\n      currentDay: currentDay,\n      onDayClick: handleDayClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 9\n    }, this), user && user.isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-14 max-w-4xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-16\",\n        children: tests.map(dayData => {\n          var _dayData$tasks, _dayData$tasks2;\n          const dayProgress = getDayProgress(dayData.day, dayData.tasks);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `day-${dayData.day}`,\n            className: \"bg-white dark:bg-gray-800 rounded-xl shadow-md p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 min-w-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-xl font-bold text-gray-900 dark:text-white mb-1\",\n                  children: [t('days.day', \"День\"), \" \", dayData.day]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-lg text-gray-800 dark:text-gray-200 font-medium\",\n                  children: t(dayData.titleKey)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col items-end space-y-1 flex-shrink-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm font-semibold text-gray-600 dark:text-gray-400\",\n                    children: [dayProgress, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-20 bg-gray-200 dark:bg-gray-700 rounded-full h-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-blue-500 h-2 rounded-full transition-all duration-300\",\n                      style: {\n                        width: `${dayProgress}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 715,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 714,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-500 dark:text-gray-400\",\n                  children: [((_dayData$tasks = dayData.tasks) === null || _dayData$tasks === void 0 ? void 0 : _dayData$tasks.length) || 0, \" \", t('days.tasks', \"заданий\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-3\",\n              children: (_dayData$tasks2 = dayData.tasks) === null || _dayData$tasks2 === void 0 ? void 0 : _dayData$tasks2.map((task, index) => {\n                const isAnswerCorrect = isCorrectAnswerCheck(dayData.day, index, task.answer, answers);\n                const hasAnswer = answers[`${dayData.day}-${index}`];\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `p-4 rounded-lg ${hasAnswer ? isAnswerCorrect ? 'bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800' : 'bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800' : 'bg-gray-50 dark:bg-gray-700'}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"flex-1 text-gray-800 dark:text-gray-200\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [t('tasks.task', \"Задача\"), \" \", index + 1, \":\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 742,\n                        columnNumber: 31\n                      }, this), \" \", task.question]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 741,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center space-x-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: t('answer', \"Ответ\"),\n                        value: answers[`${dayData.day}-${index}`] || \"\",\n                        onChange: e => handleAnswerChange(dayData.day, index, e.target.value),\n                        className: \"w-24 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white text-center\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 746,\n                        columnNumber: 31\n                      }, this), hasAnswer && (isAnswerCorrect ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-green-500 text-xl\",\n                        title: t('correct', \"Правильно!\"),\n                        children: \"\\u2705\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 755,\n                        columnNumber: 35\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-red-500 text-xl\",\n                        title: t('try_again', \"Попробуйте еще раз\"),\n                        children: \"\\u274C\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 757,\n                        columnNumber: 35\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 745,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 740,\n                    columnNumber: 27\n                  }, this), task.answerFormat && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500 dark:text-gray-400 mt-1\",\n                    children: [\"\\uD83D\\uDCA1 \", t('answerFormat.hint', \"Формат ответа\"), \": \", task.answerFormat]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 764,\n                    columnNumber: 29\n                  }, this), hasAnswer && !isAnswerCorrect && task.explanation && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-2 p-2 bg-blue-50 dark:bg-blue-900/20 rounded-md\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-blue-800 dark:text-blue-200\",\n                      children: [\"\\uD83D\\uDCA1 \", task.explanation]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 771,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 770,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 19\n            }, this), dayData.theoryLink && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 pt-4 border-t border-gray-200 dark:border-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: dayData.theoryLink,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"text-blue-600 dark:text-blue-400 hover:underline text-sm flex items-center\",\n                children: [\"\\uD83D\\uDCD6 \", t('days.theory', \"Теоретические материалы\"), \" \\\"\", t(dayData.titleKey), \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 21\n            }, this)]\n          }, dayData.day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 text-center text-gray-500 dark:text-gray-400 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('footer.course_description', \"Курс для закрепления знаний по математике за 6 класс\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xA9 2025 Math Academy | \", t('footer.generated', \"Задания генерируются случайно\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // 🟢 ЭКРАН ПРИВЕТСТВИЯ ДЛЯ НЕАВТОРИЗОВАННЫХ ПОЛЬЗОВАТЕЛЕЙ\n    _jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center max-w-2xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8 flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-32 h-32 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-6xl\",\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6\",\n          children: t('auth.welcome', \"Добро пожаловать в Math Academy!\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl text-gray-600 dark:text-gray-400 mb-8 max-w-md mx-auto leading-relaxed\",\n          children: t('auth.prompt', \"Войдите или зарегистрируйтесь чтобы начать обучение\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col sm:flex-row gap-4 justify-center mb-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLoginClick,\n            className: \"bg-blue-500 hover:bg-blue-600 text-white px-8 py-3 rounded-lg font-medium text-lg transition-colors shadow-lg\",\n            children: t('header.login', \"Войти\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRegisterClick,\n            className: \"bg-green-500 hover:bg-green-600 text-white px-8 py-3 rounded-lg font-medium text-lg transition-colors shadow-lg\",\n            children: t('header.register', \"Регистрация\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-t border-gray-200 dark:border-gray-700 pt-8\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg text-gray-500 dark:text-gray-400 italic\",\n            children: t('slogan', \"От математических основ к образовательной экосистеме! 🚀\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 9\n    }, this), showResetConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-lg p-6 m-4 max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold text-gray-900 dark:text-white mb-2\",\n          children: [\"\\uD83D\\uDD04 \", t('reset.new_tasks', \"Новые задания\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 dark:text-gray-400 mb-4\",\n          children: t('reset.confirmation', \"Вы уверены, что хотите сгенерировать новые задания? Весь текущий прогресс будет сброшен.\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowResetConfirm(false),\n            className: \"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\",\n            children: t('reset.cancel', \"Отмена\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              resetProgress();\n              setShowResetConfirm(false);\n            },\n            className: \"flex-1 px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors\",\n            children: t('reset.generate', \"Сгенерировать\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 9\n    }, this), showScrollTop && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      }),\n      className: \"fixed bottom-6 right-6 z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-500 rounded-full w-10 h-10 flex items-center justify-center shadow-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-all text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-gray-100\",\n      \"aria-label\": \"\\u041D\\u0430\\u0432\\u0435\\u0440\\u0445\",\n      children: \"\\u2191\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 638,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RE9NigRpRBN44lRO5nAgbyFmLNM=\", false, function () {\n  return [useTranslation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Header","Login","Register","authAPI","courseAPI","userAPI","courseStructure","taskGenerators","useTranslation","DayNavigation","jsxDEV","_jsxDEV","detectCacheClear","currentToken","localStorage","getItem","currentTests","currentAnswers","hadDataBefore","sessionStorage","wasCacheCleared","console","log","setItem","applyTranslationsToTasks","tasks","t","Array","isArray","map","task","question","translationKey","translationParams","explanation","explanationKey","explanationParams","answerFormat","formatKey","isCorrectAnswerCheck","day","index","correctAnswer","_currentAnswers","userAnswer","toString","trim","toLowerCase","correct","includes","userNum","replace","correctNum","userA","userB","split","correctA","correctB","App","_s","i18n","tests","setTests","answers","setAnswers","loading","setLoading","showResetConfirm","setShowResetConfirm","user","setUser","showLogin","setShowLogin","showRegister","setShowRegister","currentDay","setCurrentDay","showScrollTop","setShowScrollTop","authError","setAuthError","dataLoaded","setDataLoaded","handleScroll","window","scrollY","addEventListener","removeEventListener","checkAuth","token","name","isLoggedIn","response","getMe","userData","data","JSON","stringify","error","savedUser","parse","tempUser","id","Date","now","email","loadUserData","savedTests","savedAnswers","finalTests","finalAnswers","parsedTests","parsedAnswers","dayData","parseError","Error","titleKey","theoryLink","generator","taskCount","filter","length","setTimeout","serverAnswers","getAnswers","catch","Object","keys","syncError","emergencyTests","updatedTests","language","recoverFromDatabase","hasAuthToken","hasLocalTests","hasLocalAnswers","removeItem","tasksResponse","getAllTasks","dbTasks","answersResponse","dbAnswers","restoredTests","dayStr","parseInt","dayTasks","dayInfo","find","d","answer","task_data","compatibleAnswers","forEach","key","Number","_error$response","interval","setInterval","clearInterval","handleLogin","formData","_response$data","login","password","access_token","_error$response2","_error$response2$data","errorMessage","detail","message","handleRegister","_loginResponse$data","register","username","grade","loginResponse","_error$response3","_error$response3$data","handleLogout","handleAnswerChange","value","answerKey","newAnswers","isCorrectAnswer","saveAnswer","completedTasks","i","updateProgress","getDayProgress","correctCount","Math","round","getTotalProgress","totalCorrect","totalTasks","resetProgress","userTests","saveTasks","handleLoginClick","handleRegisterClick","handleDayClick","dayNumber","element","document","getElementById","headerOffset","elementPosition","offsetTop","offsetPosition","scrollTo","top","max","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","onResetClick","onSettingsClick","onLoginClick","onLogoutClick","onLogin","onSwitchToRegister","onRegister","onSwitchToLogin","days","onDayClick","_dayData$tasks","_dayData$tasks2","dayProgress","style","width","isAnswerCorrect","hasAnswer","type","placeholder","onChange","e","target","title","href","rel","onClick","_c","$RefreshReg$"],"sources":["/opt/math-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport { authAPI, courseAPI, userAPI } from './services/api';\nimport { courseStructure } from './taskGenerators';\nimport * as taskGenerators from './taskGenerators';\nimport { useTranslation } from 'react-i18next';\nimport DayNavigation from './components/DayNavigation';\n\n// 🟢 ОБНАРУЖЕНИЕ СБРОСА КЭША\nconst detectCacheClear = () => {\n  // Проверяем, был ли сброс кэша при загрузке страницы\n  const currentToken = localStorage.getItem('authToken');\n  const currentTests = localStorage.getItem('userMathTests');\n  const currentAnswers = localStorage.getItem('userMathAnswers');\n  \n  const hadDataBefore = sessionStorage.getItem('hadUserData');\n  const wasCacheCleared = sessionStorage.getItem('cacheWasCleared');\n  \n  console.log('🔍 ДЕТЕКТОР СБРОСА КЭША:', {\n    hadDataBefore,\n    wasCacheCleared,\n    currentToken: !!currentToken,\n    currentTests: !!currentTests,\n    currentAnswers: !!currentAnswers\n  });\n\n  // Если раньше были данные, а сейчас их нет - это сброс кэша\n  if (hadDataBefore === 'true' && (!currentTests || !currentAnswers)) {\n    console.log('🚨 ОБНАРУЖЕН СБРОС КЭША!');\n    sessionStorage.setItem('cacheWasCleared', 'true');\n    return true;\n  }\n\n  // Сохраняем текущее состояние для следующей проверки\n  if (currentToken) {\n    sessionStorage.setItem('hadUserData', 'true');\n  }\n  \n  return wasCacheCleared === 'true';\n};\n\n// Функция для применения переводов к заданиям\nconst applyTranslationsToTasks = (tasks, t) => {\n  if (!tasks || !Array.isArray(tasks)) return [];\n  \n  return tasks.map(task => ({\n    ...task,\n    question: task.translationKey ? t(task.translationKey, task.translationParams) : task.question,\n    explanation: task.explanationKey ? t(task.explanationKey, task.explanationParams) : task.explanation,\n    answerFormat: task.formatKey ? t(task.formatKey) : task.answerFormat\n  }));\n};\n\n// 🟢 ФУНКЦИЯ ПРОВЕРКИ ПРАВИЛЬНОСТИ ОТВЕТА\nconst isCorrectAnswerCheck = (day, index, correctAnswer, currentAnswers) => {\n  if (!currentAnswers) return false;\n  \n  const userAnswer = currentAnswers[`${day}-${index}`]?.toString().trim().toLowerCase();\n  const correct = correctAnswer?.toString().toLowerCase();\n  \n  if (!userAnswer || !correct) return false;\n  \n  if (correct.includes('%')) {\n    const userNum = userAnswer.replace('%', '');\n    const correctNum = correct.replace('%', '');\n    return userNum === correctNum;\n  }\n\n  if (correct.includes('/')) {\n    const [userA, userB] = userAnswer.split('/');\n    const [correctA, correctB] = correct.split('/');\n    return userA === correctA && userB === correctB;\n  }\n\n  return userAnswer === correct;\n};\n\nfunction App() {\n  const { t, i18n } = useTranslation();\n  const [tests, setTests] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [showResetConfirm, setShowResetConfirm] = useState(false);\n  const [user, setUser] = useState(null);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [currentDay, setCurrentDay] = useState(1);\n  const [showScrollTop, setShowScrollTop] = useState(false);\n  const [authError, setAuthError] = useState('');\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  // 🟢 EFFECT ДЛЯ ОТСЛЕЖИВАНИЯ СКРОЛЛА\n  useEffect(() => {\n    const handleScroll = () => {\n      setShowScrollTop(window.scrollY > 300);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // 🟢 НАДЕЖНАЯ ПРОВЕРКА АУТЕНТИФИКАЦИИ\n  const checkAuth = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      \n      if (!token) {\n        setUser({ name: t('header.guest', \"Гость\"), isLoggedIn: false });\n        setLoading(false);\n        return;\n      }\n\n      // Пробуем получить данные пользователя\n      try {\n        const response = await authAPI.getMe();\n        const userData = {\n          ...response.data,\n          isLoggedIn: true\n        };\n        setUser(userData);\n        localStorage.setItem('userData', JSON.stringify(userData));\n      } catch (error) {\n        console.log('getMe failed, checking localStorage for user data');\n        \n        // Пробуем восстановить из localStorage\n        const savedUser = localStorage.getItem('userData');\n        if (savedUser) {\n          const userData = JSON.parse(savedUser);\n          setUser({ ...userData, isLoggedIn: true });\n        } else {\n          // Создаем временного пользователя\n          const tempUser = {\n            id: Date.now(),\n            name: 'Пользователь',\n            email: 'user@example.com',\n            isLoggedIn: true\n          };\n          setUser(tempUser);\n          localStorage.setItem('userData', JSON.stringify(tempUser));\n        }\n      }\n    } catch (error) {\n      console.error('Auth check error:', error);\n      setUser({ name: t('header.guest', \"Гость\"), isLoggedIn: false });\n    } finally {\n      setLoading(false);\n    }\n  }, [t]);\n\n  // 🟢 ЗАГРУЗКА ПРИ СТАРТЕ\n  useEffect(() => {\n    checkAuth();\n  }, [checkAuth]);\n\n  // 🟢 НАДЕЖНАЯ ЗАГРУЗКА ДАННЫХ\n  const loadUserData = useCallback(async () => {\n    if (dataLoaded) return;\n    \n    try {\n      // 1. Сначала загружаем из localStorage (мгновенно)\n      const savedTests = localStorage.getItem('userMathTests');\n      const savedAnswers = localStorage.getItem('userMathAnswers');\n\n      let finalTests = [];\n      let finalAnswers = {};\n\n      if (savedTests && savedAnswers) {\n        try {\n          const parsedTests = JSON.parse(savedTests);\n          const parsedAnswers = JSON.parse(savedAnswers);\n          \n          finalTests = parsedTests.map(dayData => ({\n            ...dayData,\n            tasks: applyTranslationsToTasks(dayData.tasks, t)\n          }));\n          finalAnswers = parsedAnswers;\n        } catch (parseError) {\n          console.error('Error parsing localStorage data:', parseError);\n          // Если ошибка парсинга - генерируем новые данные\n          throw new Error('Invalid localStorage data');\n        }\n      } else {\n        // 2. Генерируем новые задания\n        finalTests = courseStructure.map(day => ({\n          day: day.day,\n          titleKey: day.titleKey,\n          theoryLink: day.theoryLink,\n          tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n        })).filter(day => day.tasks.length > 0);\n        \n        finalAnswers = {};\n      }\n\n      // 3. Устанавливаем данные\n      setTests(finalTests);\n      setAnswers(finalAnswers);\n      \n      // 4. Сохраняем в localStorage\n      localStorage.setItem('userMathTests', JSON.stringify(finalTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify(finalAnswers));\n      \n      setDataLoaded(true);\n\n      // 5. ФОНовая синхронизация с сервером для авторизованных пользователей\n      if (user && user.isLoggedIn) {\n        setTimeout(async () => {\n          try {\n            console.log('🔄 Starting background sync with server...');\n            \n            // Загружаем ответы из БД\n            const serverAnswers = await userAPI.getAnswers().catch(() => ({ data: {} }));\n            \n            // Если на сервере есть ответы - используем их\n            if (serverAnswers.data && Object.keys(serverAnswers.data).length > 0) {\n              console.log('✅ Answers loaded from DB:', Object.keys(serverAnswers.data).length);\n              setAnswers(serverAnswers.data);\n              localStorage.setItem('userMathAnswers', JSON.stringify(serverAnswers.data));\n            }\n\n            // Сохраняем текущие тесты на сервер\n            console.log('ℹ️ Сохранение задач временно отключено');\n            \n            console.log('✅ Background sync completed');\n          } catch (syncError) {\n            console.log('Background sync failed, continuing with local data');\n          }\n        }, 2000);\n      }\n\n    } catch (error) {\n      console.error('Error loading user data:', error);\n      \n      // АВАРИЙНЫЙ РЕЖИМ: генерируем базовые задания\n      const emergencyTests = courseStructure.map(day => ({\n        day: day.day,\n        titleKey: day.titleKey,\n        theoryLink: day.theoryLink,\n        tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n      })).filter(day => day.tasks.length > 0);\n      \n      setTests(emergencyTests);\n      setAnswers({});\n      localStorage.setItem('userMathTests', JSON.stringify(emergencyTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify({}));\n      \n      setDataLoaded(true);\n    }\n  }, [user, t, dataLoaded]);\n\n  // 🟢 ЗАГРУЗКА ДАННЫХ ПРИ ИЗМЕНЕНИИ ПОЛЬЗОВАТЕЛЯ ИЛИ ЯЗЫКА\n  useEffect(() => {\n    if (!loading && user !== null) {\n      loadUserData();\n    }\n  }, [user, loading, loadUserData]);\n\n  useEffect(() => {\n    if (dataLoaded && tests.length > 0) {\n      // Обновляем переводы при смене языка\n      const updatedTests = tests.map(dayData => ({\n        ...dayData,\n        tasks: applyTranslationsToTasks(dayData.tasks, t)\n      }));\n      setTests(updatedTests);\n    }\n  }, [i18n.language, t]);\n\n  // 🟢 УЛУЧШЕННАЯ ФУНКЦИЯ ВОССТАНОВЛЕНИЯ ИЗ БАЗЫ ДАННЫХ\n  const recoverFromDatabase = async () => {\n    const hasAuthToken = localStorage.getItem('authToken');\n    const hasLocalTests = localStorage.getItem('userMathTests');\n    const hasLocalAnswers = localStorage.getItem('userMathAnswers');\n    \n    console.log('🔍 СТАТУС ВОССТАНОВЛЕНИЯ:', {\n      hasAuthToken: !!hasAuthToken,\n      hasLocalTests: !!hasLocalTests, \n      hasLocalAnswers: !!hasLocalAnswers\n    });\n\n    // 🟢 ИСПРАВЛЕНИЕ: Проверяем, был ли сброс кэша\n    const wasCacheCleared = detectCacheClear();\n    \n    // КРИТИЧЕСКИЙ СЛУЧАЙ: Есть токен, но был сброс кэша ИЛИ нет локальных данных\n    if (hasAuthToken && (wasCacheCleared || !hasLocalTests || !hasLocalAnswers)) {\n      console.log('🚨 ВОССТАНОВЛЕНИЕ ИЗ БД: Токен есть + сброс кэша!');\n      \n      // Сбрасываем флаг сброса кэша\n      if (wasCacheCleared) {\n        sessionStorage.removeItem('cacheWasCleared');\n      }\n      \n      try {\n        // 1. Загружаем ВСЕ сохраненные задания из БД\n        console.log('📚 Загружаем сохраненные задания из БД...');\n        const tasksResponse = await userAPI.getAllTasks();\n        const dbTasks = tasksResponse.data || {};\n        \n        console.log('✅ Задания из БД:', Object.keys(dbTasks).length, 'дней');\n        \n        // 2. Загружаем ВСЕ ответы из БД\n        console.log('📥 Загружаем ответы из БД...');\n        const answersResponse = await userAPI.getAnswers();\n        const dbAnswers = answersResponse.data || {};\n        \n        console.log('✅ Ответы из БД:', Object.keys(dbAnswers).length, 'записей');\n\n        // 3. Если есть сохраненные задания - используем их\n        let restoredTests = [];\n        \n        if (Object.keys(dbTasks).length > 0) {\n          console.log('🎯 ВОССТАНАВЛИВАЕМ сохраненные задания из БД');\n          \n          // Преобразуем задания из БД в структуру приложения\n          restoredTests = Object.keys(dbTasks).map(dayStr => {\n            const day = parseInt(dayStr);\n            const dayTasks = dbTasks[dayStr];\n            \n            // Находим информацию о дне из courseStructure\n            const dayInfo = courseStructure.find(d => d.day === day) || {\n              titleKey: `days.day${day}`,\n              theoryLink: null\n            };\n            \n            return {\n              day: day,\n              titleKey: dayInfo.titleKey,\n              theoryLink: dayInfo.theoryLink,\n              tasks: dayTasks.map(task => ({\n                question: task.question,\n                answer: task.answer,\n                explanation: task.explanation,\n                answerFormat: task.answerFormat,\n                // Восстанавливаем translation данные из task_data\n                ...(task.task_data && typeof task.task_data === 'object' ? task.task_data : {})\n              }))\n            };\n          }).filter(day => day.tasks.length > 0);\n          \n          console.log(`✅ Восстановлено ${restoredTests.length} дней с заданиями из БД`);\n          \n        } else {\n          // 4. Если нет сохраненных заданий - генерируем новые\n          console.log('🆕 СОХРАНЕННЫХ ЗАДАНИЙ НЕТ - генерируем новые');\n          restoredTests = courseStructure.map(day => ({\n            day: day.day,\n            titleKey: day.titleKey,\n            theoryLink: day.theoryLink,\n            tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n          })).filter(day => day.tasks.length > 0);\n          \n          console.log(`✅ Создано ${restoredTests.length} дней с новыми заданиями`);\n        }\n\n        // 5. Очищаем несовместимые ответы (те, для которых нет заданий)\n        const compatibleAnswers = {};\n        Object.keys(dbAnswers).forEach(key => {\n          const [day, index] = key.split('-').map(Number);\n          const dayData = restoredTests.find(d => d.day === day);\n          \n          if (dayData && dayData.tasks && dayData.tasks[index]) {\n            compatibleAnswers[key] = dbAnswers[key];\n          } else {\n            console.log(`🗑️ Удаляем несовместимый ответ: ${key}`);\n          }\n        });\n        \n        console.log(`✅ Совместимых ответов: ${Object.keys(compatibleAnswers).length}`);\n\n        // 6. Устанавливаем восстановленные данные\n        setTests(restoredTests);\n        setAnswers(compatibleAnswers);\n        \n        localStorage.setItem('userMathTests', JSON.stringify(restoredTests));\n        localStorage.setItem('userMathAnswers', JSON.stringify(compatibleAnswers));\n        \n        console.log('🎉 ВОССТАНОВЛЕНИЕ ИЗ БАЗЫ ДАННЫХ ЗАВЕРШЕНО!');\n\n      } catch (error) {\n        console.error('❌ Ошибка восстановления из БД:', error);\n        console.log('🔍 Детали ошибки:', error.response?.data);\n        \n        // АВАРИЙНЫЙ РЕЖИМ: создаем пустые данные\n        console.log('🆘 Создаем аварийные данные...');\n        const emergencyTests = courseStructure.map(day => ({\n          day: day.day,\n          titleKey: day.titleKey,\n          theoryLink: day.theoryLink,\n          tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n        })).filter(day => day.tasks.length > 0);\n        \n        setTests(emergencyTests);\n        setAnswers({});\n        localStorage.setItem('userMathTests', JSON.stringify(emergencyTests));\n        localStorage.setItem('userMathAnswers', JSON.stringify({}));\n      }\n    }\n  };\n\n  // 🟢 ФИНАЛЬНОЕ ВОССТАНОВЛЕНИЕ ИЗ БАЗЫ ДАННЫХ ПОСЛЕ СБРОСА КЭША\n  useEffect(() => {\n    // Запускаем восстановление сразу и каждые 3 секунды\n    recoverFromDatabase();\n    const interval = setInterval(recoverFromDatabase, 3000);\n    return () => clearInterval(interval);\n  }, [t]);\n\n  // 🟢 НАДЕЖНЫЙ ОБРАБОТЧИК ВХОДА\n  const handleLogin = async (formData) => {\n    setAuthError('');\n    \n    try {\n      console.log('🔐 Attempting login...');\n      const response = await authAPI.login({ \n        email: formData.email, \n        password: formData.password \n      });\n      \n      if (!response.data?.access_token) {\n        throw new Error('No access token received');\n      }\n      \n      localStorage.setItem('authToken', response.data.access_token);\n      console.log('✅ Login successful, token saved');\n      \n      // Закрываем форму входа\n      setShowLogin(false);\n      \n      // Обновляем аутентификацию\n      await checkAuth();\n      \n    } catch (error) {\n      console.error('❌ Login error:', error);\n      const errorMessage = error.response?.data?.detail || error.message || 'Ошибка входа';\n      setAuthError(errorMessage);\n      \n      // Очищаем невалидный токен\n      localStorage.removeItem('authToken');\n    }\n  };\n\n  // 🟢 НАДЕЖНЫЙ ОБРАБОТЧИК РЕГИСТРАЦИИ\n  const handleRegister = async (formData) => {\n    setAuthError('');\n    \n    try {\n      console.log('📝 Attempting registration...');\n      \n      await authAPI.register({ \n        email: formData.email,\n        username: formData.username, \n        password: formData.password,\n        grade: formData.grade\n      });\n      \n      console.log('✅ Registration successful, attempting login...');\n      \n      const loginResponse = await authAPI.login({\n        email: formData.email,\n        password: formData.password\n      });\n      \n      if (!loginResponse.data?.access_token) {\n        throw new Error('No access token received after registration');\n      }\n      \n      localStorage.setItem('authToken', loginResponse.data.access_token);\n      console.log('✅ Auto-login successful');\n      \n      // Закрываем форму регистрации\n      setShowRegister(false);\n      \n      // Обновляем аутентификацию\n      await checkAuth();\n      \n    } catch (error) {\n      console.error('❌ Registration error:', error);\n      const errorMessage = error.response?.data?.detail || error.message || 'Ошибка регистрации';\n      setAuthError(errorMessage);\n      \n      // Очищаем невалидный токен\n      localStorage.removeItem('authToken');\n    }\n  };\n\n  // 🟢 ОБРАБОТЧИК ВЫХОДА\n  const handleLogout = () => {\n    console.log('🚪 Logging out...');\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userData');\n    setUser({ name: t('header.guest', \"Гость\"), isLoggedIn: false });\n    setAuthError('');\n    // Прогресс остается в localStorage для возможности восстановления\n  };\n\n  // 🟢 ОПТИМИЗИРОВАННАЯ ОБРАБОТКА ВВОДА ОТВЕТА\n  const handleAnswerChange = async (day, index, value) => {\n    const answerKey = `${day}-${index}`;\n    const newAnswers = {\n      ...answers,\n      [answerKey]: value\n    };\n    \n    // Немедленно обновляем UI\n    setAnswers(newAnswers);\n    localStorage.setItem('userMathAnswers', JSON.stringify(newAnswers));\n    \n    // Фоновая синхронизация с сервером\n    if (user && user.isLoggedIn) {\n      setTimeout(async () => {\n        try {\n          const dayData = tests.find(d => d.day === day);\n          if (dayData && dayData.tasks[index]) {\n            const task = dayData.tasks[index];\n            const isCorrectAnswer = isCorrectAnswerCheck(day, index, task.answer, newAnswers);\n            \n            await userAPI.saveAnswer(day, index, value, isCorrectAnswer);\n            \n            const completedTasks = dayData.tasks.filter((t, i) => \n              isCorrectAnswerCheck(day, i, t.answer, newAnswers)\n            ).length;\n            \n            await courseAPI.updateProgress(day, newAnswers, completedTasks);\n          }\n        } catch (error) {\n          console.log('Background answer sync failed');\n        }\n      }, 500);\n    }\n  };\n\n  // 🟢 ВЫЧИСЛЕНИЕ ПРОГРЕССА\n  const getDayProgress = (day, tasks) => {\n    if (!tasks || !Array.isArray(tasks)) return 0;\n    \n    const correctCount = tasks.filter((task, index) =>\n      isCorrectAnswerCheck(day, index, task.answer, answers)\n    ).length;\n    \n    return tasks.length > 0 ? Math.round((correctCount / tasks.length) * 100) : 0;\n  };\n\n  const getTotalProgress = () => {\n    let totalCorrect = 0;\n    let totalTasks = 0;\n\n    tests.forEach(dayData => {\n      if (dayData.tasks && Array.isArray(dayData.tasks)) {\n        dayData.tasks.forEach((task, index) => {\n          totalTasks++;\n          if (isCorrectAnswerCheck(dayData.day, index, task.answer, answers)) {\n            totalCorrect++;\n          }\n        });\n      }\n    });\n\n    return totalTasks > 0 ? Math.round((totalCorrect / totalTasks) * 100) : 0;\n  };\n\n  // 🟢 СБРОС ПРОГРЕССА\n  const resetProgress = async () => {\n    try {\n      const userTests = courseStructure.map(day => ({\n        day: day.day,\n        titleKey: day.titleKey,\n        theoryLink: day.theoryLink,\n        tasks: taskGenerators[day.generator] ? taskGenerators[day.generator](day.taskCount, t) : []\n      })).filter(day => day.tasks.length > 0);\n      \n      setTests(userTests);\n      setAnswers({});\n      \n      localStorage.setItem('userMathTests', JSON.stringify(userTests));\n      localStorage.setItem('userMathAnswers', JSON.stringify({}));\n      \n      // Фоновая синхронизация с сервером\n      if (user && user.isLoggedIn) {\n        setTimeout(async () => {\n          try {\n            await courseAPI.resetProgress();\n            for (const dayData of userTests) {\n              await userAPI.saveTasks(dayData.day, dayData.tasks);\n            }\n          } catch (error) {\n            console.log('Background reset sync failed');\n          }\n        }, 500);\n      }\n      \n    } catch (error) {\n      console.error('Error resetting progress:', error);\n    }\n  };\n\n  // 🟢 ОБРАБОТЧИКИ UI\n  const handleLoginClick = () => {\n    setShowLogin(true);\n    setAuthError('');\n  };\n\n  const handleRegisterClick = () => {\n    setShowRegister(true);\n    setAuthError('');\n  };\n\n  const handleDayClick = (dayNumber) => {\n    setCurrentDay(dayNumber);\n    const element = document.getElementById(`day-${dayNumber}`);\n    if (element) {\n      const headerOffset = 340;\n      const elementPosition = element.offsetTop;\n      const offsetPosition = elementPosition - headerOffset;\n\n      setTimeout(() => {\n        window.scrollTo({\n          top: Math.max(0, offsetPosition),\n          behavior: 'smooth'\n        });\n      }, 50);\n    }\n  };\n\n  // 🟢 ЗАГРУЗОЧНЫЙ ЭКРАН\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600 dark:text-gray-400\">{t('loading', \"Загрузка...\")}</p>\n        </div>\n      </div>\n    );\n  }\n\n  // 🟢 ОСНОВНОЙ RENDER\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-200\">\n      <Header \n        user={user || { name: t('header.guest', \"Гость\"), isLoggedIn: false }}\n        progress={getTotalProgress()}\n        onResetClick={() => setShowResetConfirm(true)}\n        onSettingsClick={() => console.log(\"Settings clicked\")}\n        onLoginClick={handleLoginClick}\n        onLogoutClick={handleLogout}\n        grade=\"6\"\n      />\n\n      {/* МОДАЛЬНЫЕ ОКНА */}\n      {showLogin && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <Login \n            onLogin={handleLogin} \n            onSwitchToRegister={() => { \n              setShowLogin(false); \n              setShowRegister(true); \n              setAuthError('');\n            }}\n            error={authError}\n          />\n        </div>\n      )}\n\n      {showRegister && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <Register \n            onRegister={handleRegister} \n            onSwitchToLogin={() => { \n              setShowRegister(false); \n              setShowLogin(true); \n              setAuthError('');\n            }}\n            error={authError}\n          />\n        </div>\n      )}\n\n      {/* НАВИГАЦИЯ ПО ДНЯМ */}\n      {user && user.isLoggedIn && tests.length > 0 && (\n        <DayNavigation \n          days={tests.map(day => ({\n            ...day,\n            progress: getDayProgress(day.day, day.tasks)\n          }))}\n          currentDay={currentDay}\n          onDayClick={handleDayClick}\n        />\n      )}\n\n      {/* ОСНОВНОЙ КОНТЕНТ */}\n      {user && user.isLoggedIn ? (\n        <div className=\"container mx-auto p-14 max-w-4xl\">\n          <div className=\"grid gap-16\">\n            {tests.map(dayData => {\n              const dayProgress = getDayProgress(dayData.day, dayData.tasks);\n              \n              return (\n                <div key={dayData.day} id={`day-${dayData.day}`} className=\"bg-white dark:bg-gray-800 rounded-xl shadow-md p-6\">\n                  <div className=\"flex justify-between items-start mb-4\">\n                    <div className=\"flex-1 min-w-0\">\n                      <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-1\">\n                        {t('days.day', \"День\")} {dayData.day}\n                      </h2>\n                      <p className=\"text-lg text-gray-800 dark:text-gray-200 font-medium\">\n                        {t(dayData.titleKey)}\n                      </p>\n                    </div>\n                    \n                    <div className=\"flex flex-col items-end space-y-1 flex-shrink-0\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-sm font-semibold text-gray-600 dark:text-gray-400\">\n                          {dayProgress}%\n                        </span>\n                        <div className=\"w-20 bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                          <div \n                            className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n                            style={{ width: `${dayProgress}%` }}\n                          />\n                        </div>\n                      </div>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {dayData.tasks?.length || 0} {t('days.tasks', \"заданий\")}\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-3\">\n                    {dayData.tasks?.map((task, index) => {\n                      const isAnswerCorrect = isCorrectAnswerCheck(dayData.day, index, task.answer, answers);\n                      const hasAnswer = answers[`${dayData.day}-${index}`];\n                      \n                      return (\n                        <div key={index} className={`p-4 rounded-lg ${\n                          hasAnswer \n                            ? isAnswerCorrect \n                              ? 'bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800'\n                              : 'bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800'\n                            : 'bg-gray-50 dark:bg-gray-700'\n                        }`}>\n                          <div className=\"flex items-center space-x-3\">\n                            <span className=\"flex-1 text-gray-800 dark:text-gray-200\">\n                              <strong>{t('tasks.task', \"Задача\")} {index + 1}:</strong> {task.question}\n                            </span>\n\n                            <div className=\"flex items-center space-x-2\">\n                              <input\n                                type=\"text\"\n                                placeholder={t('answer', \"Ответ\")}\n                                value={answers[`${dayData.day}-${index}`] || \"\"}\n                                onChange={e => handleAnswerChange(dayData.day, index, e.target.value)}\n                                className=\"w-24 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white text-center\"\n                              />\n                              {hasAnswer && (\n                                isAnswerCorrect ? (\n                                  <span className=\"text-green-500 text-xl\" title={t('correct', \"Правильно!\")}>✅</span>\n                                ) : (\n                                  <span className=\"text-red-500 text-xl\" title={t('try_again', \"Попробуйте еще раз\")}>❌</span>\n                                )\n                              )}\n                            </div>\n                          </div>\n                          \n                          {task.answerFormat && (\n                            <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                              💡 {t('answerFormat.hint', \"Формат ответа\")}: {task.answerFormat}\n                            </div>\n                          )}\n                          \n                          {hasAnswer && !isAnswerCorrect && task.explanation && (\n                            <div className=\"mt-2 p-2 bg-blue-50 dark:bg-blue-900/20 rounded-md\">\n                              <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n                                💡 {task.explanation}\n                              </p>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n\n                  {dayData.theoryLink && (\n                    <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-600\">\n                      <a\n                        href={dayData.theoryLink}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-blue-600 dark:text-blue-400 hover:underline text-sm flex items-center\"\n                      >\n                        📖 {t('days.theory', \"Теоретические материалы\")} \"{t(dayData.titleKey)}\"\n                      </a>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n\n          <div className=\"mt-8 text-center text-gray-500 dark:text-gray-400 text-sm\">\n            <p>{t('footer.course_description', \"Курс для закрепления знаний по математике за 6 класс\")}</p>\n            <p>© 2025 Math Academy | {t('footer.generated', \"Задания генерируются случайно\")}</p>\n          </div>\n        </div>\n      ) : (\n        // 🟢 ЭКРАН ПРИВЕТСТВИЯ ДЛЯ НЕАВТОРИЗОВАННЫХ ПОЛЬЗОВАТЕЛЕЙ\n        <div className=\"min-h-screen flex items-center justify-center px-4\">\n          <div className=\"text-center max-w-2xl mx-auto\">\n            <div className=\"mb-8 flex justify-center\">\n              <div className=\"w-32 h-32 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-6xl\">\n                📚\n              </div>\n            </div>\n            \n            <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6\">\n              {t('auth.welcome', \"Добро пожаловать в Math Academy!\")}\n            </h1>\n            \n            <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-8 max-w-md mx-auto leading-relaxed\">\n              {t('auth.prompt', \"Войдите или зарегистрируйтесь чтобы начать обучение\")}\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-12\">\n              <button\n                onClick={handleLoginClick}\n                className=\"bg-blue-500 hover:bg-blue-600 text-white px-8 py-3 rounded-lg font-medium text-lg transition-colors shadow-lg\"\n              >\n                {t('header.login', \"Войти\")}\n              </button>\n              <button\n                onClick={handleRegisterClick}\n                className=\"bg-green-500 hover:bg-green-600 text-white px-8 py-3 rounded-lg font-medium text-lg transition-colors shadow-lg\"\n              >\n                {t('header.register', \"Регистрация\")}\n              </button>\n            </div>\n            \n            <div className=\"border-t border-gray-200 dark:border-gray-700 pt-8\">\n              <p className=\"text-lg text-gray-500 dark:text-gray-400 italic\">\n                {t('slogan', \"От математических основ к образовательной экосистеме! 🚀\")}\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* ПОДТВЕРЖДЕНИЕ СБРОСА ПРОГРЕССА */}\n      {showResetConfirm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 m-4 max-w-md w-full\">\n            <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-2\">\n              🔄 {t('reset.new_tasks', \"Новые задания\")}\n            </h3>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n              {t('reset.confirmation', \"Вы уверены, что хотите сгенерировать новые задания? Весь текущий прогресс будет сброшен.\")}\n            </p>\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowResetConfirm(false)}\n                className=\"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\n              >\n                {t('reset.cancel', \"Отмена\")}\n              </button>\n              <button\n                onClick={() => {\n                  resetProgress();\n                  setShowResetConfirm(false);\n                }}\n                className=\"flex-1 px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors\"\n              >\n                {t('reset.generate', \"Сгенерировать\")}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* КНОПКА НАВЕРХ */}\n      {showScrollTop && (\n        <button \n          onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\n          className=\"fixed bottom-6 right-6 z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-500 rounded-full w-10 h-10 flex items-center justify-center shadow-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-all text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-gray-100\"\n          aria-label=\"Наверх\"\n        >\n          ↑\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}