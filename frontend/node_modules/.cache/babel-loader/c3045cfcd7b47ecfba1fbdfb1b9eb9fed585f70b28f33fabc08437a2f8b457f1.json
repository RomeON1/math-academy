{"ast":null,"code":"// day12-wordProblems.js\nconst getRandomInt=(min,max)=>Math.floor(Math.random()*(max-min+1))+min;export const wordProblemsGenerator=(count,t)=>{const tasks=[];const usedQuestions=new Set();while(tasks.length<count){let question,answer,explanation,answerFormat;let translationKey,translationParams,explanationKey,explanationParams,formatKey;let type=getRandomInt(1,10);switch(type){case 1:// Задача на движение\nconst speed=getRandomInt(40,80);const time=getRandomInt(2,5);const distance=speed*time;question=\"\\u0410\\u0432\\u0442\\u043E\\u043C\\u043E\\u0431\\u0438\\u043B\\u044C \\u0435\\u0434\\u0435\\u0442 \\u0441\\u043E \\u0441\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C\\u044E \".concat(speed,\" \\u043A\\u043C/\\u0447. \\u041A\\u0430\\u043A\\u043E\\u0435 \\u0440\\u0430\\u0441\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435 \\u043E\\u043D \\u043F\\u0440\\u043E\\u0435\\u0434\\u0435\\u0442 \\u0437\\u0430 \").concat(time,\" \\u0447\\u0430\\u0441\\u0430?\");translationKey='tasks.word_problems.motion';translationParams={speed,time};answer=distance.toString();explanation=\"\\u0420\\u0430\\u0441\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435 = \\u0441\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\xD7 \\u0432\\u0440\\u0435\\u043C\\u044F = \".concat(speed,\" \\xD7 \").concat(time,\" = \").concat(distance,\" \\u043A\\u043C\");explanationKey='tasks.word_problems.motion_explanation';explanationParams={speed,time,result:distance};answerFormat=\"число (км)\";formatKey='answerFormats.km';break;case 2:// Задача на стоимость\nconst price=getRandomInt(50,150);const quantity=getRandomInt(3,8);const totalCost=price*quantity;question=\"\\u041E\\u0434\\u043D\\u0430 \\u0442\\u0435\\u0442\\u0440\\u0430\\u0434\\u044C \\u0441\\u0442\\u043E\\u0438\\u0442 \".concat(price,\" \\u0440\\u0443\\u0431. \\u0421\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0441\\u0442\\u043E\\u044F\\u0442 \").concat(quantity,\" \\u0442\\u0435\\u0442\\u0440\\u0430\\u0434\\u0435\\u0439?\");translationKey='tasks.word_problems.cost';translationParams={price,quantity};answer=totalCost.toString();explanation=\"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C = \\u0446\\u0435\\u043D\\u0430 \\xD7 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E = \".concat(price,\" \\xD7 \").concat(quantity,\" = \").concat(totalCost,\" \\u0440\\u0443\\u0431\");explanationKey='tasks.word_problems.cost_explanation';explanationParams={price,quantity,result:totalCost};answerFormat=\"число (руб.)\";formatKey='answerFormats.rub';break;case 3:// Задача на работу\nconst workTime=getRandomInt(4,8);const workRate=getRandomInt(10,20);const totalParts=workRate*workTime;question=\"\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0434\\u0435\\u043B\\u0430\\u0435\\u0442 \".concat(workRate,\" \\u0434\\u0435\\u0442\\u0430\\u043B\\u0435\\u0439 \\u0432 \\u0447\\u0430\\u0441. \\u0421\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0434\\u0435\\u0442\\u0430\\u043B\\u0435\\u0439 \\u043E\\u043D \\u0441\\u0434\\u0435\\u043B\\u0430\\u0435\\u0442 \\u0437\\u0430 \").concat(workTime,\" \\u0447\\u0430\\u0441\\u043E\\u0432?\");translationKey='tasks.word_problems.work';translationParams={rate:workRate,time:workTime};answer=totalParts.toString();explanation=\"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 = \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C \\xD7 \\u0432\\u0440\\u0435\\u043C\\u044F = \".concat(workRate,\" \\xD7 \").concat(workTime,\" = \").concat(totalParts);explanationKey='tasks.word_problems.work_explanation';explanationParams={rate:workRate,time:workTime,result:totalParts};answerFormat=\"число\";formatKey='answerFormats.number';break;case 4:// Задача на пропорции (рабочие)\nconst workers=getRandomInt(2,5);const days=getRandomInt(3,7);const newWorkers=getRandomInt(4,8);const newDays=Math.round(workers*days/newWorkers);question=\"\".concat(workers,\" \\u0440\\u0430\\u0431\\u043E\\u0447\\u0438\\u0445 \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u044F\\u044E\\u0442 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0443 \\u0437\\u0430 \").concat(days,\" \\u0434\\u043D\\u0435\\u0439. \\u0417\\u0430 \\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0434\\u043D\\u0435\\u0439 \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u044F\\u0442 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0443 \").concat(newWorkers,\" \\u0440\\u0430\\u0431\\u043E\\u0447\\u0438\\u0445?\");translationKey='tasks.word_problems.ratio';translationParams={workers,days,newWorkers};answer=newDays.toString();explanation=\"\\u0412\\u0440\\u0435\\u043C\\u044F \\u043E\\u0431\\u0440\\u0430\\u0442\\u043D\\u043E \\u043F\\u0440\\u043E\\u043F\\u043E\\u0440\\u0446\\u0438\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u043E \\u0440\\u0430\\u0431\\u043E\\u0447\\u0438\\u043C: (\".concat(workers,\" \\xD7 \").concat(days,\") / \").concat(newWorkers,\" = \").concat(newDays,\" \\u0434\\u043D\\u0435\\u0439\");explanationKey='tasks.word_problems.ratio_explanation';explanationParams={workers,days,newWorkers,result:newDays};answerFormat=\"число (дней)\";formatKey='answerFormats.number';break;case 5:// Задача на смеси\nconst solution1=getRandomInt(100,200);const concentration1=getRandomInt(10,20);const solution2=getRandomInt(50,100);const concentration2=getRandomInt(30,40);const totalSalt=solution1*concentration1/100+solution2*concentration2/100;const totalSolution=solution1+solution2;const finalConc=Math.round(totalSalt/totalSolution*100);question=\"\\u0421\\u043C\\u0435\\u0448\\u0430\\u043B\\u0438 \".concat(solution1,\" \\u0433 \").concat(concentration1,\"% \\u0440\\u0430\\u0441\\u0442\\u0432\\u043E\\u0440\\u0430 \\u0438 \").concat(solution2,\" \\u0433 \").concat(concentration2,\"% \\u0440\\u0430\\u0441\\u0442\\u0432\\u043E\\u0440\\u0430. \\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043D\\u0446\\u0435\\u043D\\u0442\\u0440\\u0430\\u0446\\u0438\\u044E \\u0441\\u043C\\u0435\\u0441\\u0438\");translationKey='tasks.word_problems.mixture';translationParams={solution:solution1,concentration:concentration1,solution2,concentration2};answer=finalConc.toString();explanation=\"\\u041E\\u0431\\u0449\\u0430\\u044F \\u043A\\u043E\\u043D\\u0446\\u0435\\u043D\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F = (\\u043E\\u0431\\u0449\\u0430\\u044F \\u0441\\u043E\\u043B\\u044C / \\u043E\\u0431\\u0449\\u0438\\u0439 \\u0440\\u0430\\u0441\\u0442\\u0432\\u043E\\u0440) \\xD7 100 = (\".concat(totalSalt.toFixed(1),\" / \").concat(totalSolution,\") \\xD7 100 \\u2248 \").concat(finalConc,\"%\");explanationKey='tasks.word_problems.mixture_explanation';explanationParams={solution:solution2,concentration:concentration1,solution2,concentration2,result:finalConc};answerFormat=\"процент\";formatKey='answerFormats.percentage';break;case 6:// Задача на возраст\nconst ageNow=getRandomInt(8,12);const yearsLater=getRandomInt(5,8);const fatherAgeNow=ageNow+25;const fatherAgeLater=fatherAgeNow+yearsLater;question=\"\\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u0441\\u044B\\u043D\\u0443 \".concat(ageNow,\" \\u043B\\u0435\\u0442, \\u043E\\u0442\\u0446\\u0443 \").concat(fatherAgeNow,\" \\u043B\\u0435\\u0442. \\u0421\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u043B\\u0435\\u0442 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043E\\u0442\\u0446\\u0443, \\u043A\\u043E\\u0433\\u0434\\u0430 \\u0441\\u044B\\u043D\\u0443 \\u0431\\u0443\\u0434\\u0435\\u0442 \").concat(ageNow+yearsLater,\" \\u043B\\u0435\\u0442?\");translationKey='tasks.word_problems.age';translationParams={age:ageNow,years:yearsLater};answer=fatherAgeLater.toString();explanation=\"\\u0420\\u0430\\u0437\\u043D\\u0438\\u0446\\u0430 \\u0432 \\u0432\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\\u0435 25 \\u043B\\u0435\\u0442. \\u041A\\u043E\\u0433\\u0434\\u0430 \\u0441\\u044B\\u043D\\u0443 \\u0431\\u0443\\u0434\\u0435\\u0442 \".concat(ageNow+yearsLater,\", \\u043E\\u0442\\u0446\\u0443 \\u0431\\u0443\\u0434\\u0435\\u0442 \").concat(fatherAgeLater,\" \\u043B\\u0435\\u0442\");explanationKey='tasks.word_problems.age_explanation';explanationParams={age:ageNow,years:yearsLater,result:fatherAgeLater};answerFormat=\"число\";formatKey='answerFormats.number';break;case 7:// Задача на скорость работы\nconst workAmount=getRandomInt(100,200);const workTime2=getRandomInt(4,8);const workSpeed=Math.round(workAmount/workTime2);question=\"\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0438\\u043B \".concat(workAmount,\" \\u0435\\u0434\\u0438\\u043D\\u0438\\u0446 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B \\u0437\\u0430 \").concat(workTime2,\" \\u0447\\u0430\\u0441\\u043E\\u0432. \\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0435\\u0433\\u043E \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C\");translationKey='tasks.word_problems.work_speed';translationParams={work:workAmount,time:workTime2};answer=workSpeed.toString();explanation=\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C = \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430 / \\u0432\\u0440\\u0435\\u043C\\u044F = \".concat(workAmount,\" / \").concat(workTime2,\" = \").concat(workSpeed,\" \\u0435\\u0434\\u0438\\u043D\\u0438\\u0446/\\u0447\\u0430\\u0441\");explanationKey='tasks.word_problems.work_speed_explanation';explanationParams={work:workAmount,time:workTime2,result:workSpeed};answerFormat=\"число (ед./час)\";formatKey='answerFormats.units_per_hour';break;case 8:// Задача на площадь\nconst length8=getRandomInt(5,10);const width8=getRandomInt(4,8);const area8=length8*width8;question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u044B \\u0434\\u043B\\u0438\\u043D\\u043E\\u0439 \".concat(length8,\" \\u043C \\u0438 \\u0448\\u0438\\u0440\\u0438\\u043D\\u043E\\u0439 \").concat(width8,\" \\u043C\");translationKey='tasks.word_problems.area';translationParams={length:length8,width:width8};answer=area8.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C = \\u0434\\u043B\\u0438\\u043D\\u0430 \\xD7 \\u0448\\u0438\\u0440\\u0438\\u043D\\u0430 = \".concat(length8,\" \\xD7 \").concat(width8,\" = \").concat(area8,\" \\u043C\\xB2\");explanationKey='tasks.word_problems.area_explanation';explanationParams={length:length8,width:width8,result:area8};answerFormat=\"число (м²)\";formatKey='answerFormats.m2';break;case 9:// Задача на объем\nconst length9=getRandomInt(4,8);const width9=getRandomInt(3,6);const height9=getRandomInt(2,5);const volume9=length9*width9*height9;question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043C \\u0430\\u043A\\u0432\\u0430\\u0440\\u0438\\u0443\\u043C\\u0430 \\u0434\\u043B\\u0438\\u043D\\u043E\\u0439 \".concat(length9,\" \\u0441\\u043C, \\u0448\\u0438\\u0440\\u0438\\u043D\\u043E\\u0439 \").concat(width9,\" \\u0441\\u043C \\u0438 \\u0432\\u044B\\u0441\\u043E\\u0442\\u043E\\u0439 \").concat(height9,\" \\u0441\\u043C\");translationKey='tasks.word_problems.volume';translationParams={length:length9,width:width9,height:height9};answer=volume9.toString();explanation=\"\\u041E\\u0431\\u044A\\u0435\\u043C = \\u0434\\u043B\\u0438\\u043D\\u0430 \\xD7 \\u0448\\u0438\\u0440\\u0438\\u043D\\u0430 \\xD7 \\u0432\\u044B\\u0441\\u043E\\u0442\\u0430 = \".concat(length9,\" \\xD7 \").concat(width9,\" \\xD7 \").concat(height9,\" = \").concat(volume9,\" \\u0441\\u043C\\xB3\");explanationKey='tasks.word_problems.volume_explanation';explanationParams={length:length9,width:width9,height:height9,result:volume9};answerFormat=\"число (в см³)\";formatKey='answerFormats.cm3';break;case 10:// Задача на проценты (скидка)\nconst original10=getRandomInt(200,600);const discount10=17;const newPrice10=original10*(1-discount10/100);question=\"\\u0422\\u043E\\u0432\\u0430\\u0440 \\u0441\\u0442\\u043E\\u0438\\u043B \".concat(original10,\" \\u0440\\u0443\\u0431. \\u0421\\u043A\\u0438\\u0434\\u043A\\u0430 \").concat(discount10,\"%. \\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u0432\\u0443\\u044E \\u0446\\u0435\\u043D\\u0443.\");answer=Math.round(newPrice10).toString();break;default:type=getRandomInt(1,10);continue;}if(!usedQuestions.has(question)){usedQuestions.add(question);tasks.push({question,answer,explanation,answerFormat,translationKey,translationParams,explanationKey,explanationParams,formatKey});}}return tasks;};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","wordProblemsGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","speed","time","distance","concat","toString","result","price","quantity","totalCost","workTime","workRate","totalParts","rate","workers","days","newWorkers","newDays","round","solution1","concentration1","solution2","concentration2","totalSalt","totalSolution","finalConc","solution","concentration","toFixed","ageNow","yearsLater","fatherAgeNow","fatherAgeLater","age","years","workAmount","workTime2","workSpeed","work","length8","width8","area8","width","length9","width9","height9","volume9","height","original10","discount10","newPrice10","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day12-wordProblems.js"],"sourcesContent":["// day12-wordProblems.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const wordProblemsGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Задача на движение\n        const speed = getRandomInt(40, 80);\n        const time = getRandomInt(2, 5);\n        const distance = speed * time;\n        question = `Автомобиль едет со скоростью ${speed} км/ч. Какое расстояние он проедет за ${time} часа?`;\n        translationKey = 'tasks.word_problems.motion';\n        translationParams = { speed, time };\n        answer = distance.toString();\n        explanation = `Расстояние = скорость × время = ${speed} × ${time} = ${distance} км`;\n        explanationKey = 'tasks.word_problems.motion_explanation';\n        explanationParams = { speed, time, result: distance };\n        answerFormat = \"число (км)\";\n        formatKey = 'answerFormats.km';\n        break;\n\n      case 2: // Задача на стоимость\n        const price = getRandomInt(50, 150);\n        const quantity = getRandomInt(3, 8);\n        const totalCost = price * quantity;\n        question = `Одна тетрадь стоит ${price} руб. Сколько стоят ${quantity} тетрадей?`;\n        translationKey = 'tasks.word_problems.cost';\n        translationParams = { price, quantity };\n        answer = totalCost.toString();\n        explanation = `Стоимость = цена × количество = ${price} × ${quantity} = ${totalCost} руб`;\n        explanationKey = 'tasks.word_problems.cost_explanation';\n        explanationParams = { price, quantity, result: totalCost };\n        answerFormat = \"число (руб.)\";\n        formatKey = 'answerFormats.rub';\n        break;\n\n      case 3: // Задача на работу\n        const workTime = getRandomInt(4, 8);\n        const workRate = getRandomInt(10, 20);\n        const totalParts = workRate * workTime;\n        question = `Рабочий делает ${workRate} деталей в час. Сколько деталей он сделает за ${workTime} часов?`;\n        translationKey = 'tasks.word_problems.work';\n        translationParams = { rate: workRate, time: workTime };\n        answer = totalParts.toString();\n        explanation = `Детали = производительность × время = ${workRate} × ${workTime} = ${totalParts}`;\n        explanationKey = 'tasks.word_problems.work_explanation';\n        explanationParams = { rate: workRate, time: workTime, result: totalParts };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 4: // Задача на пропорции (рабочие)\n        const workers = getRandomInt(2, 5);\n        const days = getRandomInt(3, 7);\n        const newWorkers = getRandomInt(4, 8);\n        const newDays = Math.round((workers * days) / newWorkers);\n        question = `${workers} рабочих выполняют работу за ${days} дней. За сколько дней выполнят работу ${newWorkers} рабочих?`;\n        translationKey = 'tasks.word_problems.ratio';\n        translationParams = { workers, days, newWorkers };\n        answer = newDays.toString();\n        explanation = `Время обратно пропорционально рабочим: (${workers} × ${days}) / ${newWorkers} = ${newDays} дней`;\n        explanationKey = 'tasks.word_problems.ratio_explanation';\n        explanationParams = { workers, days, newWorkers, result: newDays };\n        answerFormat = \"число (дней)\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 5: // Задача на смеси\n        const solution1 = getRandomInt(100, 200);\n        const concentration1 = getRandomInt(10, 20);\n        const solution2 = getRandomInt(50, 100);\n        const concentration2 = getRandomInt(30, 40);\n        const totalSalt = solution1 * concentration1/100 + solution2 * concentration2/100;\n        const totalSolution = solution1 + solution2;\n        const finalConc = Math.round((totalSalt / totalSolution) * 100);\n        question = `Смешали ${solution1} г ${concentration1}% раствора и ${solution2} г ${concentration2}% раствора. Найдите концентрацию смеси`;\n        translationKey = 'tasks.word_problems.mixture';\n        translationParams = { solution: solution1, concentration: concentration1, solution2, concentration2 };\n        answer = finalConc.toString();\n        explanation = `Общая концентрация = (общая соль / общий раствор) × 100 = (${totalSalt.toFixed(1)} / ${totalSolution}) × 100 ≈ ${finalConc}%`;\n        explanationKey = 'tasks.word_problems.mixture_explanation';\n        explanationParams = { solution: solution2, concentration: concentration1, solution2, concentration2, result: finalConc };\n        answerFormat = \"процент\";\n        formatKey = 'answerFormats.percentage';\n        break;\n\n      case 6: // Задача на возраст\n        const ageNow = getRandomInt(8, 12);\n        const yearsLater = getRandomInt(5, 8);\n        const fatherAgeNow = ageNow + 25;\n        const fatherAgeLater = fatherAgeNow + yearsLater;\n        question = `Сейчас сыну ${ageNow} лет, отцу ${fatherAgeNow} лет. Сколько лет будет отцу, когда сыну будет ${ageNow + yearsLater} лет?`;\n        translationKey = 'tasks.word_problems.age';\n        translationParams = { age: ageNow, years: yearsLater };\n        answer = fatherAgeLater.toString();\n        explanation = `Разница в возрасте 25 лет. Когда сыну будет ${ageNow + yearsLater}, отцу будет ${fatherAgeLater} лет`;\n        explanationKey = 'tasks.word_problems.age_explanation';\n        explanationParams = { age: ageNow, years: yearsLater, result: fatherAgeLater };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 7: // Задача на скорость работы\n        const workAmount = getRandomInt(100, 200);\n        const workTime2 = getRandomInt(4, 8);\n        const workSpeed = Math.round(workAmount / workTime2);\n        question = `Рабочий выполнил ${workAmount} единиц работы за ${workTime2} часов. Найдите его производительность`;\n        translationKey = 'tasks.word_problems.work_speed';\n        translationParams = { work: workAmount, time: workTime2 };\n        answer = workSpeed.toString();\n        explanation = `Производительность = работа / время = ${workAmount} / ${workTime2} = ${workSpeed} единиц/час`;\n        explanationKey = 'tasks.word_problems.work_speed_explanation';\n        explanationParams = { work: workAmount, time: workTime2, result: workSpeed };\n        answerFormat = \"число (ед./час)\";\n        formatKey = 'answerFormats.units_per_hour';\n        break;\n\n      case 8: // Задача на площадь\n        const length8 = getRandomInt(5, 10);\n        const width8 = getRandomInt(4, 8);\n        const area8 = length8 * width8;\n        question = `Найдите площадь комнаты длиной ${length8} м и шириной ${width8} м`;\n        translationKey = 'tasks.word_problems.area';\n        translationParams = { length: length8, width: width8 };\n        answer = area8.toString();\n        explanation = `Площадь = длина × ширина = ${length8} × ${width8} = ${area8} м²`;\n        explanationKey = 'tasks.word_problems.area_explanation';\n        explanationParams = { length: length8, width: width8, result: area8 };\n        answerFormat = \"число (м²)\";\n        formatKey = 'answerFormats.m2';\n        break;\n\n      case 9: // Задача на объем\n        const length9 = getRandomInt(4, 8);\n        const width9 = getRandomInt(3, 6);\n        const height9 = getRandomInt(2, 5);\n        const volume9 = length9 * width9 * height9;\n        question = `Найдите объем аквариума длиной ${length9} см, шириной ${width9} см и высотой ${height9} см`;\n        translationKey = 'tasks.word_problems.volume';\n        translationParams = { length: length9, width: width9, height: height9 };\n        answer = volume9.toString();\n        explanation = `Объем = длина × ширина × высота = ${length9} × ${width9} × ${height9} = ${volume9} см³`;\n        explanationKey = 'tasks.word_problems.volume_explanation';\n        explanationParams = { length: length9, width: width9, height: height9, result: volume9 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 10: // Задача на проценты (скидка)\n        const original10 = getRandomInt(200, 600);\n        const discount10 = 17;\n        const newPrice10 = original10 * (1 - discount10/100);\n        question = `Товар стоил ${original10} руб. Скидка ${discount10}%. Найдите новую цену.`;\n        answer = Math.round(newPrice10).toString();\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}