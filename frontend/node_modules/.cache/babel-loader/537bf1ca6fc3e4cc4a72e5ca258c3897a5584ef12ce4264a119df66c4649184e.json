{"ast":null,"code":"// day4-decimals.js\nconst getRandomInt=(min,max)=>Math.floor(Math.random()*(max-min+1))+min;export const decimalsGenerator=(count,t)=>{const tasks=[];const usedQuestions=new Set();while(tasks.length<count){let question,answer,explanation,answerFormat;let translationKey,translationParams,explanationKey,explanationParams,formatKey;let type=getRandomInt(1,10);switch(type){case 1:// Сложение десятичных\nconst a1=(getRandomInt(10,50)/10).toFixed(1);const b1=(getRandomInt(10,50)/10).toFixed(1);const sum1=(parseFloat(a1)+parseFloat(b1)).toFixed(1);question=\"\\u0421\\u043B\\u043E\\u0436\\u0438\\u0442\\u0435: \".concat(a1,\" + \").concat(b1);translationKey='tasks.decimals.addition';translationParams={a:a1,b:b1};answer=sum1;explanation=\"\".concat(a1,\" + \").concat(b1,\" = \").concat(sum1);explanationKey='tasks.decimals.addition_explanation';explanationParams={a:a1,b:b1,result:sum1};answerFormat=\"десятичная дробь\";formatKey='answerFormats.decimal';break;case 2:// Вычитание десятичных\nconst a2=(getRandomInt(30,80)/10).toFixed(1);const b2=(getRandomInt(10,40)/10).toFixed(1);const diff2=(parseFloat(a2)-parseFloat(b2)).toFixed(1);question=\"\\u0412\\u044B\\u0447\\u0442\\u0438\\u0442\\u0435: \".concat(a2,\" - \").concat(b2);translationKey='tasks.decimals.subtraction';translationParams={a:a2,b:b2};answer=diff2;explanation=\"\".concat(a2,\" - \").concat(b2,\" = \").concat(diff2);explanationKey='tasks.decimals.subtraction_explanation';explanationParams={a:a2,b:b2,result:diff2};answerFormat=\"десятичная дробь\";formatKey='answerFormats.decimal';break;case 3:// Умножение десятичных\nconst a3=(getRandomInt(2,9)/10).toFixed(1);const b3=getRandomInt(2,8);const product3=(parseFloat(a3)*b3).toFixed(1);question=\"\\u0423\\u043C\\u043D\\u043E\\u0436\\u044C\\u0442\\u0435: \".concat(a3,\" \\xD7 \").concat(b3);translationKey='tasks.decimals.multiplication';translationParams={a:a3,b:b3};answer=product3;explanation=\"\".concat(a3,\" \\xD7 \").concat(b3,\" = \").concat(product3);explanationKey='tasks.decimals.multiplication_explanation';explanationParams={a:a3,b:b3,result:product3};answerFormat=\"десятичная дробь\";formatKey='answerFormats.decimal';break;case 4:// Деление десятичных\nconst a4=getRandomInt(15,45);const b4=getRandomInt(2,6);const quotient4=(a4/b4).toFixed(1);question=\"\\u0420\\u0430\\u0437\\u0434\\u0435\\u043B\\u0438\\u0442\\u0435: \".concat(a4,\" \\xF7 \").concat(b4);translationKey='tasks.decimals.division';translationParams={a:a4,b:b4};answer=quotient4;explanation=\"\".concat(a4,\" \\xF7 \").concat(b4,\" = \").concat(quotient4);explanationKey='tasks.decimals.division_explanation';explanationParams={a:a4,b:b4,result:quotient4};answerFormat=\"десятичная дробь\";formatKey='answerFormats.decimal';break;case 5:// Округление до целых\nconst decimal5=(getRandomInt(10,95)/10).toFixed(1);const rounded5=Math.round(parseFloat(decimal5));question=\"\\u041E\\u043A\\u0440\\u0443\\u0433\\u043B\\u0438\\u0442\\u0435 \\u0434\\u043E \\u0446\\u0435\\u043B\\u044B\\u0445: \".concat(decimal5);translationKey='tasks.decimals.rounding';translationParams={number:decimal5};answer=rounded5.toString();explanation=\"\".concat(decimal5,\" \\u2248 \").concat(rounded5);explanationKey='tasks.decimals.rounding_explanation';explanationParams={number:decimal5,result:rounded5};answerFormat=\"целое число\";formatKey='answerFormats.number';break;case 6:// Сравнение десятичных\nconst a6=(getRandomInt(10,40)/10).toFixed(1);const b6=(getRandomInt(10,40)/10).toFixed(1);const comparisonResult=parseFloat(a6)>parseFloat(b6)?\"больше\":parseFloat(a6)<parseFloat(b6)?\"меньше\":\"равны\";question=\"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0438\\u0442\\u0435: \".concat(a6,\" \\u0438 \").concat(b6);translationKey='tasks.decimals.comparison';translationParams={a:a6,b:b6};answer=comparisonResult;explanation=\"\".concat(a6,\" \").concat(comparisonResult,\" \").concat(b6);explanationKey='tasks.decimals.comparison_explanation';explanationParams={a:a6,b:b6,result:comparisonResult};answerFormat=\"больше/меньше/равно\";formatKey='answerFormats.comparison';break;case 7:// Перевод в проценты\nconst decimal7=(getRandomInt(1,9)/10).toFixed(1);const percent7=parseFloat(decimal7)*100;question=\"\\u041F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \".concat(decimal7,\" \\u0432 \\u043F\\u0440\\u043E\\u0446\\u0435\\u043D\\u0442\\u0430\\u0445\");translationKey='tasks.decimals.to_percentage';translationParams={number:decimal7};answer=percent7.toString();explanation=\"\".concat(decimal7,\" = \").concat(percent7,\"%\");explanationKey='tasks.decimals.to_percentage_explanation';explanationParams={number:decimal7,result:percent7};answerFormat=\"процент\";formatKey='answerFormats.percentage';break;case 8:// Перевод из процентов\nconst percent8=getRandomInt(10,90);const decimal8=(percent8/100).toFixed(2);question=\"\\u041F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \".concat(percent8,\"% \\u0432 \\u0432\\u0438\\u0434\\u0435 \\u0434\\u0435\\u0441\\u044F\\u0442\\u0438\\u0447\\u043D\\u043E\\u0439 \\u0434\\u0440\\u043E\\u0431\\u0438\");translationKey='tasks.decimals.from_percentage';translationParams={percent:percent8};answer=decimal8;explanation=\"\".concat(percent8,\"% = \").concat(decimal8);explanationKey='tasks.decimals.from_percentage_explanation';explanationParams={percent:percent8,result:decimal8};answerFormat=\"десятичная дробь\";formatKey='answerFormats.decimal';break;case 9:// Сложение с сотыми\nconst a9=(getRandomInt(100,500)/100).toFixed(2);const b9=(getRandomInt(100,500)/100).toFixed(2);const sum9=(parseFloat(a9)+parseFloat(b9)).toFixed(2);question=\"\\u0421\\u043B\\u043E\\u0436\\u0438\\u0442\\u0435: \".concat(a9,\" + \").concat(b9);translationKey='tasks.decimals.addition_hundredths';translationParams={a:a9,b:b9};answer=sum9;explanation=\"\".concat(a9,\" + \").concat(b9,\" = \").concat(sum9);explanationKey='tasks.decimals.addition_hundredths_explanation';explanationParams={a:a9,b:b9,result:sum9};answerFormat=\"десятичная дробь\";formatKey='answerFormats.decimal';break;case 10:// Умножение на 10, 100, 1000\nconst decimal10=(getRandomInt(1,50)/10).toFixed(1);const multiplier10=[10,100,1000][getRandomInt(0,2)];const product10=(parseFloat(decimal10)*multiplier10).toFixed(0);question=\"\\u0423\\u043C\\u043D\\u043E\\u0436\\u044C\\u0442\\u0435: \".concat(decimal10,\" \\xD7 \").concat(multiplier10);translationKey='tasks.decimals.multiply_by_power';translationParams={number:decimal10,multiplier:multiplier10};answer=product10;explanation=\"\".concat(decimal10,\" \\xD7 \").concat(multiplier10,\" = \").concat(product10);explanationKey='tasks.decimals.multiply_by_power_explanation';explanationParams={number:decimal10,multiplier:multiplier10,result:product10};answerFormat=\"целое число\";formatKey='answerFormats.number';break;default:type=getRandomInt(1,10);continue;}if(!usedQuestions.has(question)){usedQuestions.add(question);tasks.push({question,answer,explanation,answerFormat,translationKey,translationParams,explanationKey,explanationParams,formatKey});}}return tasks;};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","decimalsGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","a1","toFixed","b1","sum1","parseFloat","concat","a","b","result","a2","b2","diff2","a3","b3","product3","a4","b4","quotient4","decimal5","rounded5","round","number","toString","a6","b6","comparisonResult","decimal7","percent7","percent8","decimal8","percent","a9","b9","sum9","decimal10","multiplier10","product10","multiplier","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day4-decimals.js"],"sourcesContent":["// day4-decimals.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const decimalsGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Сложение десятичных\n        const a1 = (getRandomInt(10, 50) / 10).toFixed(1);\n        const b1 = (getRandomInt(10, 50) / 10).toFixed(1);\n        const sum1 = (parseFloat(a1) + parseFloat(b1)).toFixed(1);\n        question = `Сложите: ${a1} + ${b1}`;\n        translationKey = 'tasks.decimals.addition';\n        translationParams = { a: a1, b: b1 };\n        answer = sum1;\n        explanation = `${a1} + ${b1} = ${sum1}`;\n        explanationKey = 'tasks.decimals.addition_explanation';\n        explanationParams = { a: a1, b: b1, result: sum1 };\n        answerFormat = \"десятичная дробь\";\n        formatKey = 'answerFormats.decimal';\n        break;\n\n      case 2: // Вычитание десятичных\n        const a2 = (getRandomInt(30, 80) / 10).toFixed(1);\n        const b2 = (getRandomInt(10, 40) / 10).toFixed(1);\n        const diff2 = (parseFloat(a2) - parseFloat(b2)).toFixed(1);\n        question = `Вычтите: ${a2} - ${b2}`;\n        translationKey = 'tasks.decimals.subtraction';\n        translationParams = { a: a2, b: b2 };\n        answer = diff2;\n        explanation = `${a2} - ${b2} = ${diff2}`;\n        explanationKey = 'tasks.decimals.subtraction_explanation';\n        explanationParams = { a: a2, b: b2, result: diff2 };\n        answerFormat = \"десятичная дробь\";\n        formatKey = 'answerFormats.decimal';\n        break;\n\n      case 3: // Умножение десятичных\n        const a3 = (getRandomInt(2, 9) / 10).toFixed(1);\n        const b3 = getRandomInt(2, 8);\n        const product3 = (parseFloat(a3) * b3).toFixed(1);\n        question = `Умножьте: ${a3} × ${b3}`;\n        translationKey = 'tasks.decimals.multiplication';\n        translationParams = { a: a3, b: b3 };\n        answer = product3;\n        explanation = `${a3} × ${b3} = ${product3}`;\n        explanationKey = 'tasks.decimals.multiplication_explanation';\n        explanationParams = { a: a3, b: b3, result: product3 };\n        answerFormat = \"десятичная дробь\";\n        formatKey = 'answerFormats.decimal';\n        break;\n\n      case 4: // Деление десятичных\n        const a4 = getRandomInt(15, 45);\n        const b4 = getRandomInt(2, 6);\n        const quotient4 = (a4 / b4).toFixed(1);\n        question = `Разделите: ${a4} ÷ ${b4}`;\n        translationKey = 'tasks.decimals.division';\n        translationParams = { a: a4, b: b4 };\n        answer = quotient4;\n        explanation = `${a4} ÷ ${b4} = ${quotient4}`;\n        explanationKey = 'tasks.decimals.division_explanation';\n        explanationParams = { a: a4, b: b4, result: quotient4 };\n        answerFormat = \"десятичная дробь\";\n        formatKey = 'answerFormats.decimal';\n        break;\n\n      case 5: // Округление до целых\n        const decimal5 = (getRandomInt(10, 95) / 10).toFixed(1);\n        const rounded5 = Math.round(parseFloat(decimal5));\n        question = `Округлите до целых: ${decimal5}`;\n        translationKey = 'tasks.decimals.rounding';\n        translationParams = { number: decimal5 };\n        answer = rounded5.toString();\n        explanation = `${decimal5} ≈ ${rounded5}`;\n        explanationKey = 'tasks.decimals.rounding_explanation';\n        explanationParams = { number: decimal5, result: rounded5 };\n        answerFormat = \"целое число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 6: // Сравнение десятичных\n        const a6 = (getRandomInt(10, 40) / 10).toFixed(1);\n        const b6 = (getRandomInt(10, 40) / 10).toFixed(1);\n        const comparisonResult = parseFloat(a6) > parseFloat(b6) ? \"больше\" : parseFloat(a6) < parseFloat(b6) ? \"меньше\" : \"равны\";\n        question = `Сравните: ${a6} и ${b6}`;\n        translationKey = 'tasks.decimals.comparison';\n        translationParams = { a: a6, b: b6 };\n        answer = comparisonResult;\n        explanation = `${a6} ${comparisonResult} ${b6}`;\n        explanationKey = 'tasks.decimals.comparison_explanation';\n        explanationParams = { a: a6, b: b6, result: comparisonResult };\n        answerFormat = \"больше/меньше/равно\";\n        formatKey = 'answerFormats.comparison';\n        break;\n\n      case 7: // Перевод в проценты\n        const decimal7 = (getRandomInt(1, 9) / 10).toFixed(1);\n        const percent7 = parseFloat(decimal7) * 100;\n        question = `Представьте ${decimal7} в процентах`;\n        translationKey = 'tasks.decimals.to_percentage';\n        translationParams = { number: decimal7 };\n        answer = percent7.toString();\n        explanation = `${decimal7} = ${percent7}%`;\n        explanationKey = 'tasks.decimals.to_percentage_explanation';\n        explanationParams = { number: decimal7, result: percent7 };\n        answerFormat = \"процент\";\n        formatKey = 'answerFormats.percentage';\n        break;\n\n      case 8: // Перевод из процентов\n        const percent8 = getRandomInt(10, 90);\n        const decimal8 = (percent8 / 100).toFixed(2);\n        question = `Представьте ${percent8}% в виде десятичной дроби`;\n        translationKey = 'tasks.decimals.from_percentage';\n        translationParams = { percent: percent8 };\n        answer = decimal8;\n        explanation = `${percent8}% = ${decimal8}`;\n        explanationKey = 'tasks.decimals.from_percentage_explanation';\n        explanationParams = { percent: percent8, result: decimal8 };\n        answerFormat = \"десятичная дробь\";\n        formatKey = 'answerFormats.decimal';\n        break;\n\n      case 9: // Сложение с сотыми\n        const a9 = (getRandomInt(100, 500) / 100).toFixed(2);\n        const b9 = (getRandomInt(100, 500) / 100).toFixed(2);\n        const sum9 = (parseFloat(a9) + parseFloat(b9)).toFixed(2);\n        question = `Сложите: ${a9} + ${b9}`;\n        translationKey = 'tasks.decimals.addition_hundredths';\n        translationParams = { a: a9, b: b9 };\n        answer = sum9;\n        explanation = `${a9} + ${b9} = ${sum9}`;\n        explanationKey = 'tasks.decimals.addition_hundredths_explanation';\n        explanationParams = { a: a9, b: b9, result: sum9 };\n        answerFormat = \"десятичная дробь\";\n        formatKey = 'answerFormats.decimal';\n        break;\n\n      case 10: // Умножение на 10, 100, 1000\n        const decimal10 = (getRandomInt(1, 50) / 10).toFixed(1);\n        const multiplier10 = [10, 100, 1000][getRandomInt(0, 2)];\n        const product10 = (parseFloat(decimal10) * multiplier10).toFixed(0);\n        question = `Умножьте: ${decimal10} × ${multiplier10}`;\n        translationKey = 'tasks.decimals.multiply_by_power';\n        translationParams = { number: decimal10, multiplier: multiplier10 };\n        answer = product10;\n        explanation = `${decimal10} × ${multiplier10} = ${product10}`;\n        explanationKey = 'tasks.decimals.multiply_by_power_explanation';\n        explanationParams = { number: decimal10, multiplier: multiplier10, result: product10 };\n        answerFormat = \"целое число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}