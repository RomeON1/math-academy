{"ast":null,"code":"import axios from 'axios';\nconst getAPIBaseURL = () => {\n  return '/api';\n};\nconst API_BASE_URL = getAPIBaseURL();\nconst getToken = () => {\n  return localStorage.getItem('authToken');\n};\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 15000,\n  withCredentials: false\n});\n\n// 🟢 ИСПРАВЛЕННЫЙ INTERCEPTOR - точно добавляет токен\napi.interceptors.request.use(config => {\n  var _config$method;\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log(`🔐 Добавлен токен в запрос: ${config.url}`);\n  } else {\n    console.log(`⚠️ Токен не найден для: ${config.url}`);\n  }\n  config.headers['Content-Type'] = 'application/json';\n  config.headers['Accept'] = 'application/json';\n  console.log(`🚀 API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('❌ Request Interceptor Error:', error);\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => {\n  console.log(`✅ API Success: ${response.status} ${response.config.url}`);\n  return response;\n}, error => {\n  console.error('❌ API Error Details:', error);\n  return Promise.reject(error);\n});\n\n// 🟢 ИСПРАВЛЕННЫЕ AUTH ФУНКЦИИ - правильные пути\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData).then(response => {\n    console.log('✅ Регистрация успешна, сохраняем данные');\n    // Сохраняем данные пользователя\n    const userDataToSave = {\n      id: response.data.id,\n      name: response.data.username,\n      email: response.data.email,\n      isLoggedIn: true\n    };\n    localStorage.setItem('userData', JSON.stringify(userDataToSave));\n    return response;\n  }),\n  login: credentials => api.post('/auth/login', credentials).then(response => {\n    console.log('✅ Логин успешен, сохраняем токен и данные');\n\n    // 🟢 КРИТИЧЕСКИ ВАЖНО: Сохраняем токен\n    if (response.data.access_token) {\n      localStorage.setItem('authToken', response.data.access_token);\n      console.log('🔐 Токен сохранен в localStorage');\n    }\n\n    // Сохраняем данные пользователя\n    const userDataToSave = {\n      id: response.data.user_id,\n      name: response.data.username,\n      email: response.data.email,\n      isLoggedIn: true\n    };\n    localStorage.setItem('userData', JSON.stringify(userDataToSave));\n    return response;\n  }),\n  // 🟢 ИСПРАВЛЕННЫЙ ПУТЬ - добавляем /api/\n  getMe: () => api.get('/auth/me')\n};\nexport const courseAPI = {\n  getStructure: () => api.get('/course/structure'),\n  generateTasks: dayNumber => api.get(`/course/day/${dayNumber}/tasks`),\n  getProgress: () => api.get('/course/progress'),\n  updateProgress: (day, answers, completed) => api.post(`/course/progress/${day}`, {\n    completed_tasks: completed\n  }),\n  resetProgress: () => api.post('/course/reset-progress')\n};\nexport const userAPI = {\n  getAllTasks: () => api.get('/users/tasks'),\n  getTasks: day => api.get(`/users/tasks/${day}`),\n  saveTasks: (day, tasks) => api.post(`/users/tasks/${day}`, tasks),\n  getAnswers: () => api.get('/users/answers'),\n  saveAnswer: (day, taskIndex, answer, isCorrect = false) => api.post(`/users/answers/${day}/${taskIndex}`, {\n    answer,\n    is_correct: isCorrect\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","getAPIBaseURL","API_BASE_URL","getToken","localStorage","getItem","api","create","baseURL","timeout","withCredentials","interceptors","request","use","config","_config$method","token","headers","Authorization","console","log","url","method","toUpperCase","error","Promise","reject","response","status","authAPI","register","userData","post","then","userDataToSave","id","data","name","username","email","isLoggedIn","setItem","JSON","stringify","login","credentials","access_token","user_id","getMe","get","courseAPI","getStructure","generateTasks","dayNumber","getProgress","updateProgress","day","answers","completed","completed_tasks","resetProgress","userAPI","getAllTasks","getTasks","saveTasks","tasks","getAnswers","saveAnswer","taskIndex","answer","isCorrect","is_correct"],"sources":["/opt/math-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst getAPIBaseURL = () => {\n  return '/api';\n};\n\nconst API_BASE_URL = getAPIBaseURL();\n\nconst getToken = () => {\n  return localStorage.getItem('authToken');\n};\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 15000,\n  withCredentials: false,\n});\n\n// 🟢 ИСПРАВЛЕННЫЙ INTERCEPTOR - точно добавляет токен\napi.interceptors.request.use(\n  (config) => {\n    const token = getToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n      console.log(`🔐 Добавлен токен в запрос: ${config.url}`);\n    } else {\n      console.log(`⚠️ Токен не найден для: ${config.url}`);\n    }\n    config.headers['Content-Type'] = 'application/json';\n    config.headers['Accept'] = 'application/json';\n    console.log(`🚀 API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('❌ Request Interceptor Error:', error);\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => {\n    console.log(`✅ API Success: ${response.status} ${response.config.url}`);\n    return response;\n  },\n  (error) => {\n    console.error('❌ API Error Details:', error);\n    return Promise.reject(error);\n  }\n);\n\n// 🟢 ИСПРАВЛЕННЫЕ AUTH ФУНКЦИИ - правильные пути\nexport const authAPI = {\n  register: (userData) => \n    api.post('/auth/register', userData).then(response => {\n      console.log('✅ Регистрация успешна, сохраняем данные');\n      // Сохраняем данные пользователя\n      const userDataToSave = {\n        id: response.data.id,\n        name: response.data.username,\n        email: response.data.email,\n        isLoggedIn: true\n      };\n      localStorage.setItem('userData', JSON.stringify(userDataToSave));\n      return response;\n    }),\n  \n  login: (credentials) => \n    api.post('/auth/login', credentials).then(response => {\n      console.log('✅ Логин успешен, сохраняем токен и данные');\n      \n      // 🟢 КРИТИЧЕСКИ ВАЖНО: Сохраняем токен\n      if (response.data.access_token) {\n        localStorage.setItem('authToken', response.data.access_token);\n        console.log('🔐 Токен сохранен в localStorage');\n      }\n      \n      // Сохраняем данные пользователя\n      const userDataToSave = {\n        id: response.data.user_id,\n        name: response.data.username,\n        email: response.data.email,\n        isLoggedIn: true\n      };\n      localStorage.setItem('userData', JSON.stringify(userDataToSave));\n      \n      return response;\n    }),\n  \n  // 🟢 ИСПРАВЛЕННЫЙ ПУТЬ - добавляем /api/\n  getMe: () => api.get('/auth/me'),\n};\n\nexport const courseAPI = {\n  getStructure: () => api.get('/course/structure'),\n  generateTasks: (dayNumber) => api.get(`/course/day/${dayNumber}/tasks`),\n  getProgress: () => api.get('/course/progress'),\n  updateProgress: (day, answers, completed) => \n    api.post(`/course/progress/${day}`, { completed_tasks: completed }),\n  resetProgress: () => api.post('/course/reset-progress'),\n};\n\nexport const userAPI = {\n  getAllTasks: () => api.get('/users/tasks'),\n  getTasks: (day) => api.get(`/users/tasks/${day}`),\n  saveTasks: (day, tasks) => api.post(`/users/tasks/${day}`, tasks),\n  getAnswers: () => api.get('/users/answers'),\n  saveAnswer: (day, taskIndex, answer, isCorrect = false) => \n    api.post(`/users/answers/${day}/${taskIndex}`, { \n      answer, \n      is_correct: isCorrect \n    }),\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,OAAO,MAAM;AACf,CAAC;AAED,MAAMC,YAAY,GAAGD,aAAa,CAAC,CAAC;AAEpC,MAAME,QAAQ,GAAGA,CAAA,KAAM;EACrB,OAAOC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;AAC1C,CAAC;AAED,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE,KAAK;EACdC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACV,MAAMC,KAAK,GAAGb,QAAQ,CAAC,CAAC;EACxB,IAAIa,KAAK,EAAE;IACTF,MAAM,CAACG,OAAO,CAACC,aAAa,GAAG,UAAUF,KAAK,EAAE;IAChDG,OAAO,CAACC,GAAG,CAAC,+BAA+BN,MAAM,CAACO,GAAG,EAAE,CAAC;EAC1D,CAAC,MAAM;IACLF,OAAO,CAACC,GAAG,CAAC,2BAA2BN,MAAM,CAACO,GAAG,EAAE,CAAC;EACtD;EACAP,MAAM,CAACG,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;EACnDH,MAAM,CAACG,OAAO,CAAC,QAAQ,CAAC,GAAG,kBAAkB;EAC7CE,OAAO,CAACC,GAAG,CAAC,oBAAAL,cAAA,GAAmBD,MAAM,CAACQ,MAAM,cAAAP,cAAA,uBAAbA,cAAA,CAAeQ,WAAW,CAAC,CAAC,IAAIT,MAAM,CAACO,GAAG,EAAE,CAAC;EAC5E,OAAOP,MAAM;AACf,CAAC,EACAU,KAAK,IAAK;EACTL,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACpD,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDlB,GAAG,CAACK,YAAY,CAACgB,QAAQ,CAACd,GAAG,CAC1Bc,QAAQ,IAAK;EACZR,OAAO,CAACC,GAAG,CAAC,kBAAkBO,QAAQ,CAACC,MAAM,IAAID,QAAQ,CAACb,MAAM,CAACO,GAAG,EAAE,CAAC;EACvE,OAAOM,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACTL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC5C,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMK,OAAO,GAAG;EACrBC,QAAQ,EAAGC,QAAQ,IACjBzB,GAAG,CAAC0B,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC,CAACE,IAAI,CAACN,QAAQ,IAAI;IACpDR,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;IACtD;IACA,MAAMc,cAAc,GAAG;MACrBC,EAAE,EAAER,QAAQ,CAACS,IAAI,CAACD,EAAE;MACpBE,IAAI,EAAEV,QAAQ,CAACS,IAAI,CAACE,QAAQ;MAC5BC,KAAK,EAAEZ,QAAQ,CAACS,IAAI,CAACG,KAAK;MAC1BC,UAAU,EAAE;IACd,CAAC;IACDpC,YAAY,CAACqC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACT,cAAc,CAAC,CAAC;IAChE,OAAOP,QAAQ;EACjB,CAAC,CAAC;EAEJiB,KAAK,EAAGC,WAAW,IACjBvC,GAAG,CAAC0B,IAAI,CAAC,aAAa,EAAEa,WAAW,CAAC,CAACZ,IAAI,CAACN,QAAQ,IAAI;IACpDR,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;;IAExD;IACA,IAAIO,QAAQ,CAACS,IAAI,CAACU,YAAY,EAAE;MAC9B1C,YAAY,CAACqC,OAAO,CAAC,WAAW,EAAEd,QAAQ,CAACS,IAAI,CAACU,YAAY,CAAC;MAC7D3B,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD;;IAEA;IACA,MAAMc,cAAc,GAAG;MACrBC,EAAE,EAAER,QAAQ,CAACS,IAAI,CAACW,OAAO;MACzBV,IAAI,EAAEV,QAAQ,CAACS,IAAI,CAACE,QAAQ;MAC5BC,KAAK,EAAEZ,QAAQ,CAACS,IAAI,CAACG,KAAK;MAC1BC,UAAU,EAAE;IACd,CAAC;IACDpC,YAAY,CAACqC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACT,cAAc,CAAC,CAAC;IAEhE,OAAOP,QAAQ;EACjB,CAAC,CAAC;EAEJ;EACAqB,KAAK,EAAEA,CAAA,KAAM1C,GAAG,CAAC2C,GAAG,CAAC,UAAU;AACjC,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG;EACvBC,YAAY,EAAEA,CAAA,KAAM7C,GAAG,CAAC2C,GAAG,CAAC,mBAAmB,CAAC;EAChDG,aAAa,EAAGC,SAAS,IAAK/C,GAAG,CAAC2C,GAAG,CAAC,eAAeI,SAAS,QAAQ,CAAC;EACvEC,WAAW,EAAEA,CAAA,KAAMhD,GAAG,CAAC2C,GAAG,CAAC,kBAAkB,CAAC;EAC9CM,cAAc,EAAEA,CAACC,GAAG,EAAEC,OAAO,EAAEC,SAAS,KACtCpD,GAAG,CAAC0B,IAAI,CAAC,oBAAoBwB,GAAG,EAAE,EAAE;IAAEG,eAAe,EAAED;EAAU,CAAC,CAAC;EACrEE,aAAa,EAAEA,CAAA,KAAMtD,GAAG,CAAC0B,IAAI,CAAC,wBAAwB;AACxD,CAAC;AAED,OAAO,MAAM6B,OAAO,GAAG;EACrBC,WAAW,EAAEA,CAAA,KAAMxD,GAAG,CAAC2C,GAAG,CAAC,cAAc,CAAC;EAC1Cc,QAAQ,EAAGP,GAAG,IAAKlD,GAAG,CAAC2C,GAAG,CAAC,gBAAgBO,GAAG,EAAE,CAAC;EACjDQ,SAAS,EAAEA,CAACR,GAAG,EAAES,KAAK,KAAK3D,GAAG,CAAC0B,IAAI,CAAC,gBAAgBwB,GAAG,EAAE,EAAES,KAAK,CAAC;EACjEC,UAAU,EAAEA,CAAA,KAAM5D,GAAG,CAAC2C,GAAG,CAAC,gBAAgB,CAAC;EAC3CkB,UAAU,EAAEA,CAACX,GAAG,EAAEY,SAAS,EAAEC,MAAM,EAAEC,SAAS,GAAG,KAAK,KACpDhE,GAAG,CAAC0B,IAAI,CAAC,kBAAkBwB,GAAG,IAAIY,SAAS,EAAE,EAAE;IAC7CC,MAAM;IACNE,UAAU,EAAED;EACd,CAAC;AACL,CAAC;AAED,eAAehE,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}