{"ast":null,"code":"// day8-percentages.js\nconst getRandomInt=(min,max)=>Math.floor(Math.random()*(max-min+1))+min;export const percentagesGenerator=(count,t)=>{const tasks=[];const usedQuestions=new Set();while(tasks.length<count){let question,answer,explanation,answerFormat;let translationKey,translationParams,explanationKey,explanationParams,formatKey;let type=getRandomInt(1,10);switch(type){case 1:// Нахождение процента от числа\nconst percent1=getRandomInt(5,25)*5;const number1=getRandomInt(100,500);const result1=Math.round(percent1/100*number1);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \".concat(percent1,\"% \\u043E\\u0442 \\u0447\\u0438\\u0441\\u043B\\u0430 \").concat(number1);translationKey='tasks.percentages.percentage_of';translationParams={percent:percent1,number:number1};answer=result1.toString();explanation=\"\".concat(percent1,\"% \\u043E\\u0442 \").concat(number1,\" = (\").concat(percent1,\" \\xD7 \").concat(number1,\") / 100 = \").concat(result1);explanationKey='tasks.percentages.percentage_of_explanation';explanationParams={percent:percent1,number:number1,result:result1};answerFormat=\"число\";formatKey='answerFormats.number';break;case 2:// Нахождение числа по проценту\nconst percent2=getRandomInt(10,40);const value2=getRandomInt(20,80);const total2=Math.round(value2*100/percent2);question=\"\\u0415\\u0441\\u043B\\u0438 \".concat(percent2,\"% \\u0447\\u0438\\u0441\\u043B\\u0430 \\u0440\\u0430\\u0432\\u043D\\u044B \").concat(value2,\", \\u043D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0441\\u0451 \\u0447\\u0438\\u0441\\u043B\\u043E\");translationKey='tasks.percentages.number_from_percentage';translationParams={percent:percent2,value:value2};answer=total2.toString();explanation=\"\\u0412\\u0441\\u0451 \\u0447\\u0438\\u0441\\u043B\\u043E = (\".concat(value2,\" \\xD7 100) / \").concat(percent2,\" = \").concat(total2);explanationKey='tasks.percentages.number_from_percentage_explanation';explanationParams={percent:percent2,value:value2,result:total2};answerFormat=\"число\";formatKey='answerFormats.number';break;case 3:// Нахождение процентного отношения\nconst part3=getRandomInt(15,45);const whole3=getRandomInt(60,150);const percentage3=Math.round(part3/whole3*100);question=\"\\u041A\\u0430\\u043A\\u043E\\u0439 \\u043F\\u0440\\u043E\\u0446\\u0435\\u043D\\u0442 \\u0441\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \".concat(part3,\" \\u043E\\u0442 \").concat(whole3,\"?\");translationKey='tasks.percentages.percentage_ratio';translationParams={part:part3,whole:whole3};answer=percentage3.toString();explanation=\"(\".concat(part3,\" / \").concat(whole3,\") \\xD7 100 = \").concat(percentage3,\"%\");explanationKey='tasks.percentages.percentage_ratio_explanation';explanationParams={part:part3,whole:whole3,result:percentage3};answerFormat=\"процент\";formatKey='answerFormats.percentage';break;case 4:// Увеличение на процент\nconst number4=getRandomInt(200,800);const increase4=getRandomInt(5,20);const result4=Math.round(number4*(1+increase4/100));question=\"\\u0423\\u0432\\u0435\\u043B\\u0438\\u0447\\u044C\\u0442\\u0435 \\u0447\\u0438\\u0441\\u043B\\u043E \".concat(number4,\" \\u043D\\u0430 \").concat(increase4,\"%\");translationKey='tasks.percentages.increase_by';translationParams={number:number4,percent:increase4};answer=result4.toString();explanation=\"\".concat(number4,\" + \").concat(increase4,\"% = \").concat(number4,\" \\xD7 1.\").concat(increase4,\" = \").concat(result4);explanationKey='tasks.percentages.increase_by_explanation';explanationParams={number:number4,percent:increase4,result:result4};answerFormat=\"число\";formatKey='answerFormats.number';break;case 5:// Уменьшение на процент\nconst number5=getRandomInt(200,800);const decrease5=getRandomInt(5,20);const result5=Math.round(number5*(1-decrease5/100));question=\"\\u0423\\u043C\\u0435\\u043D\\u044C\\u0448\\u0438\\u0442\\u0435 \\u0447\\u0438\\u0441\\u043B\\u043E \".concat(number5,\" \\u043D\\u0430 \").concat(decrease5,\"%\");translationKey='tasks.percentages.decrease_by';translationParams={number:number5,percent:decrease5};answer=result5.toString();explanation=\"\".concat(number5,\" - \").concat(decrease5,\"% = \").concat(number5,\" \\xD7 0.\").concat(100-decrease5,\" = \").concat(result5);explanationKey='tasks.percentages.decrease_by_explanation';explanationParams={number:number5,percent:decrease5,result:result5};answerFormat=\"число\";formatKey='answerFormats.number';break;case 6:// Скидка в магазине\nconst price6=getRandomInt(500,2000);const discount6=getRandomInt(10,30);const finalPrice6=Math.round(price6*(1-discount6/100));question=\"\\u0422\\u043E\\u0432\\u0430\\u0440 \\u0441\\u0442\\u043E\\u0438\\u0442 \".concat(price6,\" \\u0440\\u0443\\u0431. \\u0421\\u043A\\u0438\\u0434\\u043A\\u0430 \").concat(discount6,\"%. \\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043D\\u0435\\u0447\\u043D\\u0443\\u044E \\u0446\\u0435\\u043D\\u0443\");translationKey='tasks.percentages.discount';translationParams={price:price6,discount:discount6};answer=finalPrice6.toString();explanation=\"\\u041A\\u043E\\u043D\\u0435\\u0447\\u043D\\u0430\\u044F \\u0446\\u0435\\u043D\\u0430 = \".concat(price6,\" - \").concat(discount6,\"% = \").concat(finalPrice6,\" \\u0440\\u0443\\u0431.\");explanationKey='tasks.percentages.discount_explanation';explanationParams={price:price6,discount:discount6,result:finalPrice6};answerFormat=\"число (руб.)\";formatKey='answerFormats.rub';break;case 7:// Налог на добавленную стоимость\nconst price7=getRandomInt(1000,5000);const tax7=20;const priceWithTax7=Math.round(price7*(1+tax7/100));question=\"\\u0426\\u0435\\u043D\\u0430 \\u0431\\u0435\\u0437 \\u041D\\u0414\\u0421: \".concat(price7,\" \\u0440\\u0443\\u0431. \\u041D\\u0414\\u0421 \").concat(tax7,\"%. \\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0446\\u0435\\u043D\\u0443 \\u0441 \\u041D\\u0414\\u0421\");translationKey='tasks.percentages.tax';translationParams={price:price7,tax:tax7};answer=priceWithTax7.toString();explanation=\"\\u0426\\u0435\\u043D\\u0430 \\u0441 \\u041D\\u0414\\u0421 = \".concat(price7,\" + \").concat(tax7,\"% = \").concat(priceWithTax7,\" \\u0440\\u0443\\u0431.\");explanationKey='tasks.percentages.tax_explanation';explanationParams={price:price7,tax:tax7,result:priceWithTax7};answerFormat=\"число (руб.)\";formatKey='answerFormats.rub';break;case 8:// Процент успеваемости\nconst total8=getRandomInt(20,30);const correct8=getRandomInt(15,total8-2);const success8=Math.round(correct8/total8*100);question=\"\\u0418\\u0437 \".concat(total8,\" \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0439 \\u0432\\u0435\\u0440\\u043D\\u043E \\u0440\\u0435\\u0448\\u0435\\u043D\\u043E \").concat(correct8,\". \\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0446\\u0435\\u043D\\u0442 \\u0443\\u0441\\u043F\\u0435\\u0432\\u0430\\u0435\\u043C\\u043E\\u0441\\u0442\\u0438\");translationKey='tasks.percentages.success_rate';translationParams={correct:correct8,total:total8};answer=success8.toString();explanation=\"\\u041F\\u0440\\u043E\\u0446\\u0435\\u043D\\u0442 \\u0443\\u0441\\u043F\\u0435\\u0432\\u0430\\u0435\\u043C\\u043E\\u0441\\u0442\\u0438 = (\".concat(correct8,\" / \").concat(total8,\") \\xD7 100 = \").concat(success8,\"%\");explanationKey='tasks.percentages.success_rate_explanation';explanationParams={correct:correct8,total:total8,result:success8};answerFormat=\"процент\";formatKey='answerFormats.percentage';break;case 9:// Распределение бюджета\nconst budget9=getRandomInt(10000,50000);const percent9=getRandomInt(10,30);const part9=Math.round(percent9/100*budget9);question=\"\\u0411\\u044E\\u0434\\u0436\\u0435\\u0442 \".concat(budget9,\" \\u0440\\u0443\\u0431. \").concat(percent9,\"% \\u0432\\u044B\\u0434\\u0435\\u043B\\u0435\\u043D\\u043E \\u043D\\u0430 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442. \\u0421\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u044D\\u0442\\u043E?\");translationKey='tasks.percentages.budget_allocation';translationParams={budget:budget9,percent:percent9};answer=part9.toString();explanation=\"\".concat(percent9,\"% \\u043E\\u0442 \").concat(budget9,\" = (\").concat(percent9,\" \\xD7 \").concat(budget9,\") / 100 = \").concat(part9,\" \\u0440\\u0443\\u0431.\");explanationKey='tasks.percentages.budget_allocation_explanation';explanationParams={budget:budget9,percent:percent9,result:part9};answerFormat=\"число (руб.)\";formatKey='answerFormats.rub';break;case 10:// Концентрация раствора\nconst total10=getRandomInt(200,500);const substance10=getRandomInt(30,100);const concentration10=Math.round(substance10/total10*100);question=\"\\u0412 \".concat(total10,\"\\u0433 \\u0440\\u0430\\u0441\\u0442\\u0432\\u043E\\u0440\\u0430 \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0438\\u0442\\u0441\\u044F \").concat(substance10,\"\\u0433 \\u0432\\u0435\\u0449\\u0435\\u0441\\u0442\\u0432\\u0430. \\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043D\\u0446\\u0435\\u043D\\u0442\\u0440\\u0430\\u0446\\u0438\\u044E\");translationKey='tasks.percentages.concentration';translationParams={total:total10,substance:substance10};answer=concentration10.toString();explanation=\"\\u041A\\u043E\\u043D\\u0446\\u0435\\u043D\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F = (\".concat(substance10,\" / \").concat(total10,\") \\xD7 100 = \").concat(concentration10,\"%\");explanationKey='tasks.percentages.concentration_explanation';explanationParams={total:total10,substance:substance10,result:concentration10};answerFormat=\"процент\";formatKey='answerFormats.percentage';break;default:type=getRandomInt(1,10);continue;}if(!usedQuestions.has(question)){usedQuestions.add(question);tasks.push({question,answer,explanation,answerFormat,translationKey,translationParams,explanationKey,explanationParams,formatKey});}}return tasks;};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","percentagesGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","percent1","number1","result1","round","concat","percent","number","toString","result","percent2","value2","total2","value","part3","whole3","percentage3","part","whole","number4","increase4","result4","number5","decrease5","result5","price6","discount6","finalPrice6","price","discount","price7","tax7","priceWithTax7","tax","total8","correct8","success8","correct","total","budget9","percent9","part9","budget","total10","substance10","concentration10","substance","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day8-percentages.js"],"sourcesContent":["// day8-percentages.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const percentagesGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Нахождение процента от числа\n        const percent1 = getRandomInt(5, 25) * 5;\n        const number1 = getRandomInt(100, 500);\n        const result1 = Math.round((percent1 / 100) * number1);\n        question = `Найдите ${percent1}% от числа ${number1}`;\n        translationKey = 'tasks.percentages.percentage_of';\n        translationParams = { percent: percent1, number: number1 };\n        answer = result1.toString();\n        explanation = `${percent1}% от ${number1} = (${percent1} × ${number1}) / 100 = ${result1}`;\n        explanationKey = 'tasks.percentages.percentage_of_explanation';\n        explanationParams = { percent: percent1, number: number1, result: result1 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 2: // Нахождение числа по проценту\n        const percent2 = getRandomInt(10, 40);\n        const value2 = getRandomInt(20, 80);\n        const total2 = Math.round((value2 * 100) / percent2);\n        question = `Если ${percent2}% числа равны ${value2}, найдите всё число`;\n        translationKey = 'tasks.percentages.number_from_percentage';\n        translationParams = { percent: percent2, value: value2 };\n        answer = total2.toString();\n        explanation = `Всё число = (${value2} × 100) / ${percent2} = ${total2}`;\n        explanationKey = 'tasks.percentages.number_from_percentage_explanation';\n        explanationParams = { percent: percent2, value: value2, result: total2 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 3: // Нахождение процентного отношения\n        const part3 = getRandomInt(15, 45);\n        const whole3 = getRandomInt(60, 150);\n        const percentage3 = Math.round((part3 / whole3) * 100);\n        question = `Какой процент составляет ${part3} от ${whole3}?`;\n        translationKey = 'tasks.percentages.percentage_ratio';\n        translationParams = { part: part3, whole: whole3 };\n        answer = percentage3.toString();\n        explanation = `(${part3} / ${whole3}) × 100 = ${percentage3}%`;\n        explanationKey = 'tasks.percentages.percentage_ratio_explanation';\n        explanationParams = { part: part3, whole: whole3, result: percentage3 };\n        answerFormat = \"процент\";\n        formatKey = 'answerFormats.percentage';\n        break;\n\n      case 4: // Увеличение на процент\n        const number4 = getRandomInt(200, 800);\n        const increase4 = getRandomInt(5, 20);\n        const result4 = Math.round(number4 * (1 + increase4 / 100));\n        question = `Увеличьте число ${number4} на ${increase4}%`;\n        translationKey = 'tasks.percentages.increase_by';\n        translationParams = { number: number4, percent: increase4 };\n        answer = result4.toString();\n        explanation = `${number4} + ${increase4}% = ${number4} × 1.${increase4} = ${result4}`;\n        explanationKey = 'tasks.percentages.increase_by_explanation';\n        explanationParams = { number: number4, percent: increase4, result: result4 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 5: // Уменьшение на процент\n        const number5 = getRandomInt(200, 800);\n        const decrease5 = getRandomInt(5, 20);\n        const result5 = Math.round(number5 * (1 - decrease5 / 100));\n        question = `Уменьшите число ${number5} на ${decrease5}%`;\n        translationKey = 'tasks.percentages.decrease_by';\n        translationParams = { number: number5, percent: decrease5 };\n        answer = result5.toString();\n        explanation = `${number5} - ${decrease5}% = ${number5} × 0.${100 - decrease5} = ${result5}`;\n        explanationKey = 'tasks.percentages.decrease_by_explanation';\n        explanationParams = { number: number5, percent: decrease5, result: result5 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 6: // Скидка в магазине\n        const price6 = getRandomInt(500, 2000);\n        const discount6 = getRandomInt(10, 30);\n        const finalPrice6 = Math.round(price6 * (1 - discount6 / 100));\n        question = `Товар стоит ${price6} руб. Скидка ${discount6}%. Найдите конечную цену`;\n        translationKey = 'tasks.percentages.discount';\n        translationParams = { price: price6, discount: discount6 };\n        answer = finalPrice6.toString();\n        explanation = `Конечная цена = ${price6} - ${discount6}% = ${finalPrice6} руб.`;\n        explanationKey = 'tasks.percentages.discount_explanation';\n        explanationParams = { price: price6, discount: discount6, result: finalPrice6 };\n        answerFormat = \"число (руб.)\";\n        formatKey = 'answerFormats.rub';\n        break;\n\n      case 7: // Налог на добавленную стоимость\n        const price7 = getRandomInt(1000, 5000);\n        const tax7 = 20;\n        const priceWithTax7 = Math.round(price7 * (1 + tax7 / 100));\n        question = `Цена без НДС: ${price7} руб. НДС ${tax7}%. Найдите цену с НДС`;\n        translationKey = 'tasks.percentages.tax';\n        translationParams = { price: price7, tax: tax7 };\n        answer = priceWithTax7.toString();\n        explanation = `Цена с НДС = ${price7} + ${tax7}% = ${priceWithTax7} руб.`;\n        explanationKey = 'tasks.percentages.tax_explanation';\n        explanationParams = { price: price7, tax: tax7, result: priceWithTax7 };\n        answerFormat = \"число (руб.)\";\n        formatKey = 'answerFormats.rub';\n        break;\n\n      case 8: // Процент успеваемости\n        const total8 = getRandomInt(20, 30);\n        const correct8 = getRandomInt(15, total8 - 2);\n        const success8 = Math.round((correct8 / total8) * 100);\n        question = `Из ${total8} заданий верно решено ${correct8}. Найдите процент успеваемости`;\n        translationKey = 'tasks.percentages.success_rate';\n        translationParams = { correct: correct8, total: total8 };\n        answer = success8.toString();\n        explanation = `Процент успеваемости = (${correct8} / ${total8}) × 100 = ${success8}%`;\n        explanationKey = 'tasks.percentages.success_rate_explanation';\n        explanationParams = { correct: correct8, total: total8, result: success8 };\n        answerFormat = \"процент\";\n        formatKey = 'answerFormats.percentage';\n        break;\n\n      case 9: // Распределение бюджета\n        const budget9 = getRandomInt(10000, 50000);\n        const percent9 = getRandomInt(10, 30);\n        const part9 = Math.round((percent9 / 100) * budget9);\n        question = `Бюджет ${budget9} руб. ${percent9}% выделено на проект. Сколько это?`;\n        translationKey = 'tasks.percentages.budget_allocation';\n        translationParams = { budget: budget9, percent: percent9 };\n        answer = part9.toString();\n        explanation = `${percent9}% от ${budget9} = (${percent9} × ${budget9}) / 100 = ${part9} руб.`;\n        explanationKey = 'tasks.percentages.budget_allocation_explanation';\n        explanationParams = { budget: budget9, percent: percent9, result: part9 };\n        answerFormat = \"число (руб.)\";\n        formatKey = 'answerFormats.rub';\n        break;\n\n      case 10: // Концентрация раствора\n        const total10 = getRandomInt(200, 500);\n        const substance10 = getRandomInt(30, 100);\n        const concentration10 = Math.round((substance10 / total10) * 100);\n        question = `В ${total10}г раствора содержится ${substance10}г вещества. Найдите концентрацию`;\n        translationKey = 'tasks.percentages.concentration';\n        translationParams = { total: total10, substance: substance10 };\n        answer = concentration10.toString();\n        explanation = `Концентрация = (${substance10} / ${total10}) × 100 = ${concentration10}%`;\n        explanationKey = 'tasks.percentages.concentration_explanation';\n        explanationParams = { total: total10, substance: substance10, result: concentration10 };\n        answerFormat = \"процент\";\n        formatKey = 'answerFormats.percentage';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}