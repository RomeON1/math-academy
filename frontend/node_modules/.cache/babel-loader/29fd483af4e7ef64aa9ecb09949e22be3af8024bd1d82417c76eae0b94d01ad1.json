{"ast":null,"code":"// day3-equations.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nexport const equationsGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n    switch (type) {\n      case 1:\n        // Простое сложение: x + a = b\n        const a1 = getRandomInt(2, 15);\n        const b1 = getRandomInt(16, 30);\n        const result1 = b1 - a1;\n        question = `Решите: x + ${a1} = ${b1}`;\n        translationKey = 'tasks.equations.simple_addition';\n        translationParams = {\n          a: a1,\n          b: b1\n        };\n        answer = result1.toString();\n        explanation = `x = ${b1} - ${a1} = ${result1}`;\n        explanationKey = 'tasks.equations.simple_addition_explanation';\n        explanationParams = {\n          a: a1,\n          b: b1,\n          result: result1\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 2:\n        // Простое умножение: ay = b\n        const a2 = getRandomInt(2, 8);\n        const b2 = a2 * getRandomInt(3, 12);\n        const result2 = b2 / a2;\n        question = `Найдите y: ${a2}y = ${b2}`;\n        translationKey = 'tasks.equations.simple_multiplication';\n        translationParams = {\n          a: a2,\n          b: b2\n        };\n        answer = result2.toString();\n        explanation = `y = ${b2} ÷ ${a2} = ${result2}`;\n        explanationKey = 'tasks.equations.simple_multiplication_explanation';\n        explanationParams = {\n          a: a2,\n          b: b2,\n          result: result2\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 3:\n        // Со скобками: a(x + b) = c\n        const a3 = getRandomInt(2, 5);\n        const b3 = getRandomInt(1, 6);\n        const c3 = getRandomInt(15, 40);\n        const result3 = c3 / a3 - b3;\n        question = `Решите: ${a3}(x + ${b3}) = ${c3}`;\n        translationKey = 'tasks.equations.with_brackets';\n        translationParams = {\n          a: a3,\n          b: b3,\n          c: c3\n        };\n        answer = Math.round(result3).toString();\n        explanation = `${a3}x + ${a3 * b3} = ${c3}, ${a3}x = ${c3 - a3 * b3}, x = ${Math.round(result3)}`;\n        explanationKey = 'tasks.equations.with_brackets_explanation';\n        explanationParams = {\n          a: a3,\n          b: b3,\n          c: c3,\n          ab: a3 * b3,\n          step1: c3 - a3 * b3,\n          result: Math.round(result3)\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 4:\n        // Вычитание: x - a = b\n        const a4 = getRandomInt(5, 20);\n        const b4 = getRandomInt(1, 10);\n        const result4 = a4 + b4;\n        question = `Решите: x - ${a4} = ${b4}`;\n        translationKey = 'tasks.equations.simple_subtraction';\n        translationParams = {\n          a: a4,\n          b: b4\n        };\n        answer = result4.toString();\n        explanation = `x = ${b4} + ${a4} = ${result4}`;\n        explanationKey = 'tasks.equations.simple_subtraction_explanation';\n        explanationParams = {\n          a: a4,\n          b: b4,\n          result: result4\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 5:\n        // Деление: x/a = b\n        const a5 = getRandomInt(2, 8);\n        const b5 = getRandomInt(3, 12);\n        const result5 = a5 * b5;\n        question = `Решите: x/${a5} = ${b5}`;\n        translationKey = 'tasks.equations.simple_division';\n        translationParams = {\n          a: a5,\n          b: b5\n        };\n        answer = result5.toString();\n        explanation = `x = ${b5} × ${a5} = ${result5}`;\n        explanationKey = 'tasks.equations.simple_division_explanation';\n        explanationParams = {\n          a: a5,\n          b: b5,\n          result: result5\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 6:\n        // Двойное уравнение: ax + b = c\n        const a6 = getRandomInt(2, 6);\n        const b6 = getRandomInt(5, 20);\n        const c6 = getRandomInt(25, 50);\n        const result6 = (c6 - b6) / a6;\n        question = `Решите: ${a6}x + ${b6} = ${c6}`;\n        translationKey = 'tasks.equations.two_step';\n        translationParams = {\n          a: a6,\n          b: b6,\n          c: c6\n        };\n        answer = Math.round(result6).toString();\n        explanation = `${a6}x = ${c6} - ${b6} = ${c6 - b6}, x = ${Math.round(result6)}`;\n        explanationKey = 'tasks.equations.two_step_explanation';\n        explanationParams = {\n          a: a6,\n          b: b6,\n          c: c6,\n          step: c6 - b6,\n          result: Math.round(result6)\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 7:\n        // С переменными с обеих сторон: ax + b = cx + d\n        const a7 = getRandomInt(2, 5);\n        const b7 = getRandomInt(5, 15);\n        const c7 = getRandomInt(1, 4);\n        const d7 = getRandomInt(10, 25);\n        const result7 = (d7 - b7) / (a7 - c7);\n        question = `Решите: ${a7}x + ${b7} = ${c7}x + ${d7}`;\n        translationKey = 'tasks.equations.both_sides';\n        translationParams = {\n          a: a7,\n          b: b7,\n          c: c7,\n          d: d7\n        };\n        answer = Math.round(result7).toString();\n        explanation = `${a7}x - ${c7}x = ${d7} - ${b7}, ${a7 - c7}x = ${d7 - b7}, x = ${Math.round(result7)}`;\n        explanationKey = 'tasks.equations.both_sides_explanation';\n        explanationParams = {\n          a: a7,\n          b: b7,\n          c: c7,\n          d: d7,\n          step1: a7 - c7,\n          step2: d7 - b7,\n          result: Math.round(result7)\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 8:\n        // Уравнение с дробями: (x + a)/b = c\n        const a8 = getRandomInt(1, 5);\n        const b8 = getRandomInt(2, 6);\n        const c8 = getRandomInt(3, 10);\n        const result8 = c8 * b8 - a8;\n        question = `Решите: (x + ${a8})/${b8} = ${c8}`;\n        translationKey = 'tasks.equations.fractional';\n        translationParams = {\n          a: a8,\n          b: b8,\n          c: c8\n        };\n        answer = result8.toString();\n        explanation = `x + ${a8} = ${c8} × ${b8} = ${c8 * b8}, x = ${result8}`;\n        explanationKey = 'tasks.equations.fractional_explanation';\n        explanationParams = {\n          a: a8,\n          b: b8,\n          c: c8,\n          step: c8 * b8,\n          result: result8\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 9:\n        // Уравнение с вычитанием: a - x = b\n        const a9 = getRandomInt(20, 40);\n        const b9 = getRandomInt(5, 15);\n        const result9 = a9 - b9;\n        question = `Решите: ${a9} - x = ${b9}`;\n        translationKey = 'tasks.equations.simple_subtraction_reverse';\n        translationParams = {\n          a: a9,\n          b: b9\n        };\n        answer = result9.toString();\n        explanation = `x = ${a9} - ${b9} = ${result9}`;\n        explanationKey = 'tasks.equations.simple_subtraction_reverse_explanation';\n        explanationParams = {\n          a: a9,\n          b: b9,\n          result: result9\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 10:\n        // Уравнение с умножением на отрицательное: -ax = b\n        const a10 = getRandomInt(2, 6);\n        const b10 = getRandomInt(10, 30);\n        const result10 = -b10 / a10;\n        question = `Решите: -${a10}x = ${b10}`;\n        translationKey = 'tasks.equations.negative_multiplication';\n        translationParams = {\n          a: a10,\n          b: b10\n        };\n        answer = Math.round(result10).toString();\n        explanation = `x = ${b10} / -${a10} = ${Math.round(result10)}`;\n        explanationKey = 'tasks.equations.negative_multiplication_explanation';\n        explanationParams = {\n          a: a10,\n          b: b10,\n          result: Math.round(result10)\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({\n        question,\n        answer,\n        explanation,\n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey,\n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","equationsGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","a1","b1","result1","a","b","toString","result","a2","b2","result2","a3","b3","c3","result3","c","round","ab","step1","a4","b4","result4","a5","b5","result5","a6","b6","c6","result6","step","a7","b7","c7","d7","result7","d","step2","a8","b8","c8","result8","a9","b9","result9","a10","b10","result10","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day3-equations.js"],"sourcesContent":["// day3-equations.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const equationsGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Простое сложение: x + a = b\n        const a1 = getRandomInt(2, 15);\n        const b1 = getRandomInt(16, 30);\n        const result1 = b1 - a1;\n        question = `Решите: x + ${a1} = ${b1}`;\n        translationKey = 'tasks.equations.simple_addition';\n        translationParams = { a: a1, b: b1 };\n        answer = result1.toString();\n        explanation = `x = ${b1} - ${a1} = ${result1}`;\n        explanationKey = 'tasks.equations.simple_addition_explanation';\n        explanationParams = { a: a1, b: b1, result: result1 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 2: // Простое умножение: ay = b\n        const a2 = getRandomInt(2, 8);\n        const b2 = a2 * getRandomInt(3, 12);\n        const result2 = b2 / a2;\n        question = `Найдите y: ${a2}y = ${b2}`;\n        translationKey = 'tasks.equations.simple_multiplication';\n        translationParams = { a: a2, b: b2 };\n        answer = result2.toString();\n        explanation = `y = ${b2} ÷ ${a2} = ${result2}`;\n        explanationKey = 'tasks.equations.simple_multiplication_explanation';\n        explanationParams = { a: a2, b: b2, result: result2 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 3: // Со скобками: a(x + b) = c\n        const a3 = getRandomInt(2, 5);\n        const b3 = getRandomInt(1, 6);\n        const c3 = getRandomInt(15, 40);\n        const result3 = (c3 / a3) - b3;\n        question = `Решите: ${a3}(x + ${b3}) = ${c3}`;\n        translationKey = 'tasks.equations.with_brackets';\n        translationParams = { a: a3, b: b3, c: c3 };\n        answer = Math.round(result3).toString();\n        explanation = `${a3}x + ${a3 * b3} = ${c3}, ${a3}x = ${c3 - a3 * b3}, x = ${Math.round(result3)}`;\n        explanationKey = 'tasks.equations.with_brackets_explanation';\n        explanationParams = { \n          a: a3, \n          b: b3, \n          c: c3, \n          ab: a3 * b3,\n          step1: c3 - a3 * b3,\n          result: Math.round(result3)\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 4: // Вычитание: x - a = b\n        const a4 = getRandomInt(5, 20);\n        const b4 = getRandomInt(1, 10);\n        const result4 = a4 + b4;\n        question = `Решите: x - ${a4} = ${b4}`;\n        translationKey = 'tasks.equations.simple_subtraction';\n        translationParams = { a: a4, b: b4 };\n        answer = result4.toString();\n        explanation = `x = ${b4} + ${a4} = ${result4}`;\n        explanationKey = 'tasks.equations.simple_subtraction_explanation';\n        explanationParams = { a: a4, b: b4, result: result4 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 5: // Деление: x/a = b\n        const a5 = getRandomInt(2, 8);\n        const b5 = getRandomInt(3, 12);\n        const result5 = a5 * b5;\n        question = `Решите: x/${a5} = ${b5}`;\n        translationKey = 'tasks.equations.simple_division';\n        translationParams = { a: a5, b: b5 };\n        answer = result5.toString();\n        explanation = `x = ${b5} × ${a5} = ${result5}`;\n        explanationKey = 'tasks.equations.simple_division_explanation';\n        explanationParams = { a: a5, b: b5, result: result5 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 6: // Двойное уравнение: ax + b = c\n        const a6 = getRandomInt(2, 6);\n        const b6 = getRandomInt(5, 20);\n        const c6 = getRandomInt(25, 50);\n        const result6 = (c6 - b6) / a6;\n        question = `Решите: ${a6}x + ${b6} = ${c6}`;\n        translationKey = 'tasks.equations.two_step';\n        translationParams = { a: a6, b: b6, c: c6 };\n        answer = Math.round(result6).toString();\n        explanation = `${a6}x = ${c6} - ${b6} = ${c6 - b6}, x = ${Math.round(result6)}`;\n        explanationKey = 'tasks.equations.two_step_explanation';\n        explanationParams = { a: a6, b: b6, c: c6, step: c6 - b6, result: Math.round(result6) };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 7: // С переменными с обеих сторон: ax + b = cx + d\n        const a7 = getRandomInt(2, 5);\n        const b7 = getRandomInt(5, 15);\n        const c7 = getRandomInt(1, 4);\n        const d7 = getRandomInt(10, 25);\n        const result7 = (d7 - b7) / (a7 - c7);\n        question = `Решите: ${a7}x + ${b7} = ${c7}x + ${d7}`;\n        translationKey = 'tasks.equations.both_sides';\n        translationParams = { a: a7, b: b7, c: c7, d: d7 };\n        answer = Math.round(result7).toString();\n        explanation = `${a7}x - ${c7}x = ${d7} - ${b7}, ${a7 - c7}x = ${d7 - b7}, x = ${Math.round(result7)}`;\n        explanationKey = 'tasks.equations.both_sides_explanation';\n        explanationParams = { \n          a: a7, b: b7, c: c7, d: d7, \n          step1: a7 - c7, \n          step2: d7 - b7,\n          result: Math.round(result7)\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 8: // Уравнение с дробями: (x + a)/b = c\n        const a8 = getRandomInt(1, 5);\n        const b8 = getRandomInt(2, 6);\n        const c8 = getRandomInt(3, 10);\n        const result8 = (c8 * b8) - a8;\n        question = `Решите: (x + ${a8})/${b8} = ${c8}`;\n        translationKey = 'tasks.equations.fractional';\n        translationParams = { a: a8, b: b8, c: c8 };\n        answer = result8.toString();\n        explanation = `x + ${a8} = ${c8} × ${b8} = ${c8 * b8}, x = ${result8}`;\n        explanationKey = 'tasks.equations.fractional_explanation';\n        explanationParams = { a: a8, b: b8, c: c8, step: c8 * b8, result: result8 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 9: // Уравнение с вычитанием: a - x = b\n        const a9 = getRandomInt(20, 40);\n        const b9 = getRandomInt(5, 15);\n        const result9 = a9 - b9;\n        question = `Решите: ${a9} - x = ${b9}`;\n        translationKey = 'tasks.equations.simple_subtraction_reverse';\n        translationParams = { a: a9, b: b9 };\n        answer = result9.toString();\n        explanation = `x = ${a9} - ${b9} = ${result9}`;\n        explanationKey = 'tasks.equations.simple_subtraction_reverse_explanation';\n        explanationParams = { a: a9, b: b9, result: result9 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 10: // Уравнение с умножением на отрицательное: -ax = b\n        const a10 = getRandomInt(2, 6);\n        const b10 = getRandomInt(10, 30);\n        const result10 = -b10 / a10;\n        question = `Решите: -${a10}x = ${b10}`;\n        translationKey = 'tasks.equations.negative_multiplication';\n        translationParams = { a: a10, b: b10 };\n        answer = Math.round(result10).toString();\n        explanation = `x = ${b10} / -${a10} = ${Math.round(result10)}`;\n        explanationKey = 'tasks.equations.negative_multiplication_explanation';\n        explanationParams = { a: a10, b: b10, result: Math.round(result10) };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}