{"ast":null,"code":"// day11-statistics.js\nconst getRandomInt=(min,max)=>Math.floor(Math.random()*(max-min+1))+min;export const statisticsGenerator=(count,t)=>{const tasks=[];const usedQuestions=new Set();while(tasks.length<count){let question,answer,explanation,answerFormat;let translationKey,translationParams,explanationKey,explanationParams,formatKey;let type=getRandomInt(1,10);switch(type){case 1:// Среднее арифметическое\nconst numbers1=Array.from({length:5},()=>getRandomInt(10,20));const sum1=numbers1.reduce((a,b)=>a+b,0);const average1=Math.round(sum1/numbers1.length);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0440\\u0435\\u0434\\u043D\\u0435\\u0435 \\u0430\\u0440\\u0438\\u0444\\u043C\\u0435\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u043E\\u0435 \\u0447\\u0438\\u0441\\u0435\\u043B: \".concat(numbers1.join(', '));translationKey='tasks.statistics.average';translationParams={numbers:numbers1.join(', ')};answer=average1.toString();explanation=\"\\u0421\\u0443\\u043C\\u043C\\u0430 = \".concat(numbers1.join(' + '),\" = \").concat(sum1,\", \\u0441\\u0440\\u0435\\u0434\\u043D\\u0435\\u0435 = \").concat(sum1,\" / \").concat(numbers1.length,\" = \").concat(average1);explanationKey='tasks.statistics.average_explanation';explanationParams={numbers:numbers1.join(' + '),sum:sum1,count:numbers1.length,result:average1};answerFormat=\"число\";formatKey='answerFormats.number';break;// Вместо задачи с диаграммой:\ncase 11:// Конкретная диаграмма\nconst subjects=['Математика','Русский язык','История','Биология','Физкультура'];const percentages=[25,20,15,18,22];const maxIndex=percentages.indexOf(Math.max(...percentages));question=\"\\u041F\\u043E \\u0434\\u0438\\u0430\\u0433\\u0440\\u0430\\u043C\\u043C\\u0435: \\u041C\\u0430\\u0442\\u0435\\u043C\\u0430\\u0442\\u0438\\u043A\\u0430 25%, \\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439 \\u044F\\u0437\\u044B\\u043A 20%, \\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F 15%, \\u0411\\u0438\\u043E\\u043B\\u043E\\u0433\\u0438\\u044F 18%, \\u0424\\u0438\\u0437\\u043A\\u0443\\u043B\\u044C\\u0442\\u0443\\u0440\\u0430 22%. \\u041A\\u0430\\u043A\\u043E\\u0439 \\u043F\\u0440\\u0435\\u0434\\u043C\\u0435\\u0442 \\u0441\\u0430\\u043C\\u044B\\u0439 \\u043F\\u043E\\u043F\\u0443\\u043B\\u044F\\u0440\\u043D\\u044B\\u0439?\";translationKey='tasks.statistics.read_chart_fixed';answer=subjects[maxIndex];explanation=\"\\u0421\\u0430\\u043C\\u044B\\u0439 \\u0432\\u044B\\u0441\\u043E\\u043A\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0446\\u0435\\u043D\\u0442 (25%) \\u0443 \\u041C\\u0430\\u0442\\u0435\\u043C\\u0430\\u0442\\u0438\\u043A\\u0438\";answerFormat=\"название предмета\";break;case 2:// Медиана\nconst numbers2=Array.from({length:5},()=>getRandomInt(10,30)).sort((a,b)=>a-b);const median2=numbers2[2];question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043C\\u0435\\u0434\\u0438\\u0430\\u043D\\u0443 \\u0447\\u0438\\u0441\\u0435\\u043B: \".concat(numbers2.join(', '));translationKey='tasks.statistics.median';translationParams={numbers:numbers2.join(', ')};answer=median2.toString();explanation=\"\\u0423\\u043F\\u043E\\u0440\\u044F\\u0434\\u043E\\u0447\\u0435\\u043D\\u043D\\u044B\\u0439 \\u0440\\u044F\\u0434: \".concat(numbers2.join(', '),\", \\u043C\\u0435\\u0434\\u0438\\u0430\\u043D\\u0430 (3\\u0435 \\u0447\\u0438\\u0441\\u043B\\u043E) = \").concat(median2);explanationKey='tasks.statistics.median_explanation';explanationParams={numbers:numbers2.join(', '),result:median2};answerFormat=\"число\";formatKey='answerFormats.number';break;case 3:// Мода\nconst numbers3=[12,15,12,18,15,12,20];const mode3=12;question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043C\\u043E\\u0434\\u0443 \\u0447\\u0438\\u0441\\u0435\\u043B: \".concat(numbers3.join(', '));translationKey='tasks.statistics.mode';translationParams={numbers:numbers3.join(', ')};answer=mode3.toString();explanation=\"\\u0427\\u0438\\u0441\\u043B\\u043E 12 \\u0432\\u0441\\u0442\\u0440\\u0435\\u0447\\u0430\\u0435\\u0442\\u0441\\u044F 3 \\u0440\\u0430\\u0437\\u0430 (\\u0447\\u0430\\u0449\\u0435 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0445) \\u2192 \\u043C\\u043E\\u0434\\u0430 = \".concat(mode3);explanationKey='tasks.statistics.mode_explanation';explanationParams={numbers:numbers3.join(', '),result:mode3};answerFormat=\"число\";formatKey='answerFormats.number';break;case 4:// Размах ряда\nconst numbers4=Array.from({length:6},()=>getRandomInt(15,40)).sort((a,b)=>a-b);const min4=numbers4[0];const max4=numbers4[numbers4.length-1];const range4=max4-min4;question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0437\\u043C\\u0430\\u0445 \\u0447\\u0438\\u0441\\u0435\\u043B: \".concat(numbers4.join(', '));translationKey='tasks.statistics.range';translationParams={numbers:numbers4.join(', ')};answer=range4.toString();explanation=\"\\u041C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C = \".concat(min4,\", \\u043C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0443\\u043C = \").concat(max4,\", \\u0440\\u0430\\u0437\\u043C\\u0430\\u0445 = \").concat(max4,\" - \").concat(min4,\" = \").concat(range4);explanationKey='tasks.statistics.range_explanation';explanationParams={min:min4,max:max4,result:range4};answerFormat=\"число\";formatKey='answerFormats.number';break;case 5:// Вероятность\nconst favorable5=getRandomInt(2,5);const total5=getRandomInt(8,12);const probability5=\"\".concat(favorable5,\"/\").concat(total5);question=\"\\u0412 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0435 \".concat(total5,\" \\u0448\\u0430\\u0440\\u043E\\u0432, \").concat(favorable5,\" \\u043A\\u0440\\u0430\\u0441\\u043D\\u044B\\u0445. \\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0435\\u0440\\u043E\\u044F\\u0442\\u043D\\u043E\\u0441\\u0442\\u044C \\u0432\\u044B\\u0442\\u0430\\u0449\\u0438\\u0442\\u044C \\u043A\\u0440\\u0430\\u0441\\u043D\\u044B\\u0439 \\u0448\\u0430\\u0440\");translationKey='tasks.statistics.probability';translationParams={favorable:favorable5,total:total5};answer=probability5;explanation=\"\\u0412\\u0435\\u0440\\u043E\\u044F\\u0442\\u043D\\u043E\\u0441\\u0442\\u044C = \\u0431\\u043B\\u0430\\u0433\\u043E\\u043F\\u0440\\u0438\\u044F\\u0442\\u043D\\u044B\\u0435 / \\u0432\\u0441\\u0435 = \".concat(favorable5,\" / \").concat(total5,\" = \").concat(probability5);explanationKey='tasks.statistics.probability_explanation';explanationParams={favorable:favorable5,total:total5,result:probability5};answerFormat=\"дробь\";formatKey='answerFormats.fraction';break;case 6:// Процент от общего\nconst part6=getRandomInt(3,8);const whole6=getRandomInt(20,30);const percentage6=Math.round(part6/whole6*100);question=\"\\u0412 \\u043A\\u043B\\u0430\\u0441\\u0441\\u0435 \".concat(whole6,\" \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u043E\\u0432, \").concat(part6,\" \\u043E\\u0442\\u043B\\u0438\\u0447\\u043D\\u0438\\u043A\\u043E\\u0432. \\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0446\\u0435\\u043D\\u0442 \\u043E\\u0442\\u043B\\u0438\\u0447\\u043D\\u0438\\u043A\\u043E\\u0432\");translationKey='tasks.statistics.percentage';translationParams={part:part6,whole:whole6};answer=percentage6.toString();explanation=\"\\u041F\\u0440\\u043E\\u0446\\u0435\\u043D\\u0442 = (\".concat(part6,\" / \").concat(whole6,\") \\xD7 100 = \").concat(percentage6,\"%\");explanationKey='tasks.statistics.percentage_explanation';explanationParams={part:part6,whole:whole6,result:percentage6};answerFormat=\"процент\";formatKey='answerFormats.percentage';break;case 7:// Частота\nconst value7=getRandomInt(5,10);const total7=getRandomInt(25,40);const frequency7=Math.round(value7/total7*100);question=\"\\u0421\\u043E\\u0431\\u044B\\u0442\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u043E \".concat(value7,\" \\u0440\\u0430\\u0437 \\u0438\\u0437 \").concat(total7,\". \\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0447\\u0430\\u0441\\u0442\\u043E\\u0442\\u0443\");translationKey='tasks.statistics.frequency';translationParams={value:value7,total:total7};answer=frequency7.toString();explanation=\"\\u0427\\u0430\\u0441\\u0442\\u043E\\u0442\\u0430 = (\".concat(value7,\" / \").concat(total7,\") \\xD7 100 = \").concat(frequency7,\"%\");explanationKey='tasks.statistics.frequency_explanation';explanationParams={value:value7,total:total7,result:frequency7};answerFormat=\"процент\";formatKey='answerFormats.percentage';break;case 8:// Диаграмма (чтение)\nconst values8=[30,25,20,15,10];const subjects8=[\"Математика\",\"Русский\",\"История\",\"Биология\",\"Физкультура\"];const maxIndex8=values8.indexOf(Math.max(...values8));const maxSubject=subjects8[maxIndex8];const maxValue=values8[maxIndex8];question=\"\\u041F\\u043E \\u0434\\u0438\\u0430\\u0433\\u0440\\u0430\\u043C\\u043C\\u0435: \\u041C\\u0430\\u0442\\u0435\\u043C\\u0430\\u0442\\u0438\\u043A\\u0430 \".concat(values8[0],\"%, \\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439 \").concat(values8[1],\"%, \\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \").concat(values8[2],\"%, \\u0411\\u0438\\u043E\\u043B\\u043E\\u0433\\u0438\\u044F \").concat(values8[3],\"%, \\u0424\\u0438\\u0437\\u043A\\u0443\\u043B\\u044C\\u0442\\u0443\\u0440\\u0430 \").concat(values8[4],\"%\");translationKey='tasks.statistics.read_chart';translationParams={values:values8.map((v,i)=>\"\".concat(subjects8[i],\" \").concat(v,\"%\")).join(', ')};answer=maxSubject;explanation=\"\\u0421\\u0430\\u043C\\u044B\\u0439 \\u0432\\u044B\\u0441\\u043E\\u043A\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0446\\u0435\\u043D\\u0442 \\u0443 \".concat(maxSubject,\" - \").concat(maxValue,\"%\");explanationKey='tasks.statistics.read_chart_explanation';explanationParams={subject:maxSubject,value:maxValue};answerFormat=\"название предмета\";formatKey='answerFormats.subject';break;case 9:// Прогноз\nconst current9=getRandomInt(100,200);const growth9=getRandomInt(10,30);const forecast9=Math.round(current9*(1+growth9/100));question=\"\\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \".concat(current9,\" \\u0435\\u0434\\u0438\\u043D\\u0438\\u0446, \\u0440\\u043E\\u0441\\u0442 \").concat(growth9,\"% \\u0432 \\u0433\\u043E\\u0434. \\u041A\\u0430\\u043A\\u0438\\u043C \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0433\\u043E\\u0434?\");translationKey='tasks.statistics.forecast';translationParams={current:current9,growth:growth9};answer=forecast9.toString();explanation=\"\\u0427\\u0435\\u0440\\u0435\\u0437 \\u0433\\u043E\\u0434 = \".concat(current9,\" + \").concat(growth9,\"% = \").concat(current9,\" \\xD7 1.\").concat(growth9,\" = \").concat(forecast9);explanationKey='tasks.statistics.forecast_explanation';explanationParams={current:current9,growth:growth9,result:forecast9};answerFormat=\"число\";formatKey='answerFormats.number';break;case 10:// Сравнение средних\nconst groupA10=Array.from({length:4},()=>getRandomInt(15,25));const groupB10=Array.from({length:4},()=>getRandomInt(18,28));const avgA10=Math.round(groupA10.reduce((a,b)=>a+b,0)/groupA10.length);const avgB10=Math.round(groupB10.reduce((a,b)=>a+b,0)/groupB10.length);const comparisonResult=avgA10>avgB10?\"A > B\":avgA10<avgB10?\"A < B\":\"A = B\";question=\"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0438\\u0442\\u0435 \\u0441\\u0440\\u0435\\u0434\\u043D\\u0438\\u0435: \\u0413\\u0440\\u0443\\u043F\\u043F\\u0430 A: \".concat(groupA10.join(', '),\", \\u0413\\u0440\\u0443\\u043F\\u043F\\u0430 B: \").concat(groupB10.join(', '));translationKey='tasks.statistics.compare_averages';translationParams={groupA:groupA10.join(', '),groupB:groupB10.join(', ')};answer=comparisonResult;explanation=\"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0435\\u0435 A = \".concat(avgA10,\", \\u0441\\u0440\\u0435\\u0434\\u043D\\u0435\\u0435 B = \").concat(avgB10,\" \\u2192 \").concat(comparisonResult);explanationKey='tasks.statistics.compare_averages_explanation';explanationParams={avgA:avgA10,avgB:avgB10,result:comparisonResult};answerFormat=\"больше/меньше/равно\";formatKey='answerFormats.comparison';break;default:type=getRandomInt(1,10);continue;}if(!usedQuestions.has(question)){usedQuestions.add(question);tasks.push({question,answer,explanation,answerFormat,translationKey,translationParams,explanationKey,explanationParams,formatKey});}}return tasks;};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","statisticsGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","numbers1","Array","from","sum1","reduce","a","b","average1","round","concat","join","numbers","toString","sum","result","subjects","percentages","maxIndex","indexOf","numbers2","sort","median2","numbers3","mode3","numbers4","min4","max4","range4","favorable5","total5","probability5","favorable","total","part6","whole6","percentage6","part","whole","value7","total7","frequency7","value","values8","subjects8","maxIndex8","maxSubject","maxValue","values","map","v","i","subject","current9","growth9","forecast9","current","growth","groupA10","groupB10","avgA10","avgB10","comparisonResult","groupA","groupB","avgA","avgB","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day11-statistics.js"],"sourcesContent":["// day11-statistics.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const statisticsGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Среднее арифметическое\n        const numbers1 = Array.from({length: 5}, () => getRandomInt(10, 20));\n        const sum1 = numbers1.reduce((a, b) => a + b, 0);\n        const average1 = Math.round(sum1 / numbers1.length);\n        question = `Найдите среднее арифметическое чисел: ${numbers1.join(', ')}`;\n        translationKey = 'tasks.statistics.average';\n        translationParams = { numbers: numbers1.join(', ') };\n        answer = average1.toString();\n        explanation = `Сумма = ${numbers1.join(' + ')} = ${sum1}, среднее = ${sum1} / ${numbers1.length} = ${average1}`;\n        explanationKey = 'tasks.statistics.average_explanation';\n        explanationParams = { numbers: numbers1.join(' + '), sum: sum1, count: numbers1.length, result: average1 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      // Вместо задачи с диаграммой:\n      case 11: // Конкретная диаграмма\n        const subjects = ['Математика', 'Русский язык', 'История', 'Биология', 'Физкультура'];\n        const percentages = [25, 20, 15, 18, 22];\n        const maxIndex = percentages.indexOf(Math.max(...percentages));\n        question = `По диаграмме: Математика 25%, Русский язык 20%, История 15%, Биология 18%, Физкультура 22%. Какой предмет самый популярный?`;\n        translationKey = 'tasks.statistics.read_chart_fixed';\n        answer = subjects[maxIndex];\n        explanation = `Самый высокий процент (25%) у Математики`;\n        answerFormat = \"название предмета\";\n        break;\n\n      case 2: // Медиана\n        const numbers2 = Array.from({length: 5}, () => getRandomInt(10, 30)).sort((a, b) => a - b);\n        const median2 = numbers2[2];\n        question = `Найдите медиану чисел: ${numbers2.join(', ')}`;\n        translationKey = 'tasks.statistics.median';\n        translationParams = { numbers: numbers2.join(', ') };\n        answer = median2.toString();\n        explanation = `Упорядоченный ряд: ${numbers2.join(', ')}, медиана (3е число) = ${median2}`;\n        explanationKey = 'tasks.statistics.median_explanation';\n        explanationParams = { numbers: numbers2.join(', '), result: median2 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 3: // Мода\n        const numbers3 = [12, 15, 12, 18, 15, 12, 20];\n        const mode3 = 12;\n        question = `Найдите моду чисел: ${numbers3.join(', ')}`;\n        translationKey = 'tasks.statistics.mode';\n        translationParams = { numbers: numbers3.join(', ') };\n        answer = mode3.toString();\n        explanation = `Число 12 встречается 3 раза (чаще других) → мода = ${mode3}`;\n        explanationKey = 'tasks.statistics.mode_explanation';\n        explanationParams = { numbers: numbers3.join(', '), result: mode3 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 4: // Размах ряда\n        const numbers4 = Array.from({length: 6}, () => getRandomInt(15, 40)).sort((a, b) => a - b);\n        const min4 = numbers4[0];\n        const max4 = numbers4[numbers4.length - 1];\n        const range4 = max4 - min4;\n        question = `Найдите размах чисел: ${numbers4.join(', ')}`;\n        translationKey = 'tasks.statistics.range';\n        translationParams = { numbers: numbers4.join(', ') };\n        answer = range4.toString();\n        explanation = `Минимум = ${min4}, максимум = ${max4}, размах = ${max4} - ${min4} = ${range4}`;\n        explanationKey = 'tasks.statistics.range_explanation';\n        explanationParams = { min: min4, max: max4, result: range4 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 5: // Вероятность\n        const favorable5 = getRandomInt(2, 5);\n        const total5 = getRandomInt(8, 12);\n        const probability5 = `${favorable5}/${total5}`;\n        question = `В корзине ${total5} шаров, ${favorable5} красных. Найдите вероятность вытащить красный шар`;\n        translationKey = 'tasks.statistics.probability';\n        translationParams = { favorable: favorable5, total: total5 };\n        answer = probability5;\n        explanation = `Вероятность = благоприятные / все = ${favorable5} / ${total5} = ${probability5}`;\n        explanationKey = 'tasks.statistics.probability_explanation';\n        explanationParams = { favorable: favorable5, total: total5, result: probability5 };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 6: // Процент от общего\n        const part6 = getRandomInt(3, 8);\n        const whole6 = getRandomInt(20, 30);\n        const percentage6 = Math.round((part6 / whole6) * 100);\n        question = `В классе ${whole6} учеников, ${part6} отличников. Найдите процент отличников`;\n        translationKey = 'tasks.statistics.percentage';\n        translationParams = { part: part6, whole: whole6 };\n        answer = percentage6.toString();\n        explanation = `Процент = (${part6} / ${whole6}) × 100 = ${percentage6}%`;\n        explanationKey = 'tasks.statistics.percentage_explanation';\n        explanationParams = { part: part6, whole: whole6, result: percentage6 };\n        answerFormat = \"процент\";\n        formatKey = 'answerFormats.percentage';\n        break;\n\n      case 7: // Частота\n        const value7 = getRandomInt(5, 10);\n        const total7 = getRandomInt(25, 40);\n        const frequency7 = Math.round((value7 / total7) * 100);\n        question = `Событие произошло ${value7} раз из ${total7}. Найдите частоту`;\n        translationKey = 'tasks.statistics.frequency';\n        translationParams = { value: value7, total: total7 };\n        answer = frequency7.toString();\n        explanation = `Частота = (${value7} / ${total7}) × 100 = ${frequency7}%`;\n        explanationKey = 'tasks.statistics.frequency_explanation';\n        explanationParams = { value: value7, total: total7, result: frequency7 };\n        answerFormat = \"процент\";\n        formatKey = 'answerFormats.percentage';\n        break;\n\n      case 8: // Диаграмма (чтение)\n        const values8 = [30, 25, 20, 15, 10];\n        const subjects8 = [\"Математика\", \"Русский\", \"История\", \"Биология\", \"Физкультура\"];\n        const maxIndex8 = values8.indexOf(Math.max(...values8));\n        const maxSubject = subjects8[maxIndex8];\n        const maxValue = values8[maxIndex8];\n        question = `По диаграмме: Математика ${values8[0]}%, Русский ${values8[1]}%, История ${values8[2]}%, Биология ${values8[3]}%, Физкультура ${values8[4]}%`;\n        translationKey = 'tasks.statistics.read_chart';\n        translationParams = { \n          values: values8.map((v, i) => `${subjects8[i]} ${v}%`).join(', ')\n        };\n        answer = maxSubject;\n        explanation = `Самый высокий процент у ${maxSubject} - ${maxValue}%`;\n        explanationKey = 'tasks.statistics.read_chart_explanation';\n        explanationParams = { subject: maxSubject, value: maxValue };\n        answerFormat = \"название предмета\";\n        formatKey = 'answerFormats.subject';\n        break;\n\n      case 9: // Прогноз\n        const current9 = getRandomInt(100, 200);\n        const growth9 = getRandomInt(10, 30);\n        const forecast9 = Math.round(current9 * (1 + growth9 / 100));\n        question = `Сейчас ${current9} единиц, рост ${growth9}% в год. Каким будет значение через год?`;\n        translationKey = 'tasks.statistics.forecast';\n        translationParams = { current: current9, growth: growth9 };\n        answer = forecast9.toString();\n        explanation = `Через год = ${current9} + ${growth9}% = ${current9} × 1.${growth9} = ${forecast9}`;\n        explanationKey = 'tasks.statistics.forecast_explanation';\n        explanationParams = { current: current9, growth: growth9, result: forecast9 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 10: // Сравнение средних\n        const groupA10 = Array.from({length: 4}, () => getRandomInt(15, 25));\n        const groupB10 = Array.from({length: 4}, () => getRandomInt(18, 28));\n        const avgA10 = Math.round(groupA10.reduce((a, b) => a + b, 0) / groupA10.length);\n        const avgB10 = Math.round(groupB10.reduce((a, b) => a + b, 0) / groupB10.length);\n        const comparisonResult = avgA10 > avgB10 ? \"A > B\" : avgA10 < avgB10 ? \"A < B\" : \"A = B\";\n        question = `Сравните средние: Группа A: ${groupA10.join(', ')}, Группа B: ${groupB10.join(', ')}`;\n        translationKey = 'tasks.statistics.compare_averages';\n        translationParams = { groupA: groupA10.join(', '), groupB: groupB10.join(', ') };\n        answer = comparisonResult;\n        explanation = `Среднее A = ${avgA10}, среднее B = ${avgB10} → ${comparisonResult}`;\n        explanationKey = 'tasks.statistics.compare_averages_explanation';\n        explanationParams = { avgA: avgA10, avgB: avgB10, result: comparisonResult };\n        answerFormat = \"больше/меньше/равно\";\n        formatKey = 'answerFormats.comparison';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}