{"ast":null,"code":"import axios from 'axios';\n\n// 🟢 ИСПРАВЛЕНО: Используем proxy для разработки\nconst API_BASE_URL = process.env.NODE_ENV === 'development' ? '/api' // Будет проксироваться через React dev server\n: 'http://217.160.126.178:8001/api';\n\n// Функция для получения токена\nconst getToken = () => {\n  return localStorage.getItem('authToken');\n};\n\n// Базовые настройки axios\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\n\n// Добавляем interceptor для автоматической подстановки токена\napi.interceptors.request.use(config => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // 🟢 ДОБАВЛЕНО: CORS headers\n  config.headers['Content-Type'] = 'application/json';\n  config.headers['Accept'] = 'application/json';\n  return config;\n});\n\n// 🟢 ДОБАВЛЕНО: Обработчик ошибок\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// API для аутентификации\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getMe: () => api.get('/users/me')\n};\n\n// API для курса\nexport const courseAPI = {\n  getStructure: () => api.get('/course/structure'),\n  generateTasks: dayNumber => api.get(`/course/day/${dayNumber}/tasks`),\n  getProgress: () => api.get('/course/progress'),\n  updateProgress: (day, answers, completed) => api.post(`/course/day/${day}/progress`, {\n    answers,\n    completed_tasks: completed\n  }),\n  resetProgress: () => api.delete('/course/progress')\n};\n\n// API для заданий и ответов пользователя\nexport const userAPI = {\n  // Задания\n  getTasks: day => api.get(`/user/tasks/${day}`),\n  saveTasks: (day, tasks) => api.post(`/user/tasks/${day}`, tasks),\n  // Ответы\n  getAnswers: day => day === 'all' ? api.get('/user/all-answers') : api.get(`/user/answers/${day}`),\n  saveAnswer: (day, taskIndex, answer, isCorrect = false) => api.post(`/user/answer/${day}/${taskIndex}`, {\n    answer,\n    is_correct: isCorrect\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","getToken","localStorage","getItem","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","console","data","message","Promise","reject","authAPI","register","userData","post","login","credentials","getMe","get","courseAPI","getStructure","generateTasks","dayNumber","getProgress","updateProgress","day","answers","completed","completed_tasks","resetProgress","delete","userAPI","getTasks","saveTasks","tasks","getAnswers","saveAnswer","taskIndex","answer","isCorrect","is_correct"],"sources":["/opt/math-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// 🟢 ИСПРАВЛЕНО: Используем proxy для разработки\nconst API_BASE_URL = process.env.NODE_ENV === 'development' \n  ? '/api'  // Будет проксироваться через React dev server\n  : 'http://217.160.126.178:8001/api';\n\n// Функция для получения токена\nconst getToken = () => {\n  return localStorage.getItem('authToken');\n};\n\n// Базовые настройки axios\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\n// Добавляем interceptor для автоматической подстановки токена\napi.interceptors.request.use((config) => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  \n  // 🟢 ДОБАВЛЕНО: CORS headers\n  config.headers['Content-Type'] = 'application/json';\n  config.headers['Accept'] = 'application/json';\n  \n  return config;\n});\n\n// 🟢 ДОБАВЛЕНО: Обработчик ошибок\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\n// API для аутентификации\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  getMe: () => api.get('/users/me'),\n};\n\n// API для курса\nexport const courseAPI = {\n  getStructure: () => api.get('/course/structure'),\n  generateTasks: (dayNumber) => api.get(`/course/day/${dayNumber}/tasks`),\n  getProgress: () => api.get('/course/progress'),\n  updateProgress: (day, answers, completed) => \n    api.post(`/course/day/${day}/progress`, { answers, completed_tasks: completed }),\n  resetProgress: () => api.delete('/course/progress'),\n};\n\n// API для заданий и ответов пользователя\nexport const userAPI = {\n  // Задания\n  getTasks: (day) => api.get(`/user/tasks/${day}`),\n  saveTasks: (day, tasks) => api.post(`/user/tasks/${day}`, tasks),\n  \n  // Ответы\n  getAnswers: (day) => \n    day === 'all' \n      ? api.get('/user/all-answers')\n      : api.get(`/user/answers/${day}`),\n  \n  saveAnswer: (day, taskIndex, answer, isCorrect = false) => \n    api.post(`/user/answer/${day}/${taskIndex}`, { answer, is_correct: isCorrect }),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}