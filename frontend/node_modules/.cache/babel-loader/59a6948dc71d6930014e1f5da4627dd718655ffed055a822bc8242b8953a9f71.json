{"ast":null,"code":"// day2-geometry.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nexport const geometryGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n    switch (type) {\n      case 1:\n        // Периметр квадрата\n        const side1 = getRandomInt(3, 12);\n        const perimeter1 = side1 * 4;\n        question = `Периметр квадрата со стороной ${side1} см?`;\n        translationKey = 'tasks.geometry.perimeter_square';\n        translationParams = {\n          side: side1\n        };\n        answer = perimeter1.toString();\n        explanation = `Периметр = 4 × ${side1} = ${perimeter1} см`;\n        explanationKey = 'tasks.geometry.perimeter_square_explanation';\n        explanationParams = {\n          side: side1,\n          result: perimeter1\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 2:\n        // Площадь прямоугольника\n        const width2 = getRandomInt(4, 10);\n        const height2 = getRandomInt(5, 15);\n        const area2 = width2 * height2;\n        question = `Площадь прямоугольника ${width2}×${height2} см?`;\n        translationKey = 'tasks.geometry.area_rectangle';\n        translationParams = {\n          width: width2,\n          height: height2\n        };\n        answer = area2.toString();\n        explanation = `Площадь = ${width2} × ${height2} = ${area2} см²`;\n        explanationKey = 'tasks.geometry.area_rectangle_explanation';\n        explanationParams = {\n          width: width2,\n          height: height2,\n          result: area2\n        };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n      case 3:\n        // Площадь треугольника\n        const base3 = getRandomInt(6, 15);\n        const height3 = getRandomInt(4, 12);\n        const area3 = Math.round(base3 * height3 / 2);\n        question = `Найдите площадь треугольника с основанием ${base3} см и высотой ${height3} см`;\n        translationKey = 'tasks.geometry.area_triangle';\n        translationParams = {\n          base: base3,\n          height: height3\n        };\n        answer = area3.toString();\n        explanation = `Площадь = (${base3} × ${height3}) / 2 = ${area3} см²`;\n        explanationKey = 'tasks.geometry.area_triangle_explanation';\n        explanationParams = {\n          base: base3,\n          height: height3,\n          result: area3\n        };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n      case 4:\n        // Длина окружности\n        const radius4 = getRandomInt(2, 10);\n        const circumference4 = Math.round(2 * 3.14 * radius4);\n        question = `Длина окружности радиусом ${radius4} см (π≈3.14)?`;\n        translationKey = 'tasks.geometry.circumference';\n        translationParams = {\n          radius: radius4\n        };\n        answer = circumference4.toString();\n        explanation = `Длина = 2 × 3.14 × ${radius4} = ${circumference4} см`;\n        explanationKey = 'tasks.geometry.circumference_explanation';\n        explanationParams = {\n          radius: radius4,\n          result: circumference4\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 5:\n        // Площадь круга\n        const radius5 = getRandomInt(3, 8);\n        const area5 = Math.round(3.14 * radius5 * radius5);\n        question = `Площадь круга радиусом ${radius5} см (π≈3.14)?`;\n        translationKey = 'tasks.geometry.area_circle';\n        translationParams = {\n          radius: radius5\n        };\n        answer = area5.toString();\n        explanation = `Площадь = 3.14 × ${radius5}² = ${area5} см²`;\n        explanationKey = 'tasks.geometry.area_circle_explanation';\n        explanationParams = {\n          radius: radius5,\n          result: area5\n        };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n      case 6:\n        // Объем куба\n        const edge6 = getRandomInt(2, 7);\n        const volume6 = edge6 * edge6 * edge6;\n        question = `Объем куба с ребром ${edge6} см?`;\n        translationKey = 'tasks.geometry.volume_cube';\n        translationParams = {\n          edge: edge6\n        };\n        answer = volume6.toString();\n        explanation = `Объем = ${edge6} × ${edge6} × ${edge6} = ${volume6} см³`;\n        explanationKey = 'tasks.geometry.volume_cube_explanation';\n        explanationParams = {\n          edge: edge6,\n          result: volume6\n        };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n      case 7:\n        // Углы треугольника\n        const angle17 = getRandomInt(30, 70);\n        const angle27 = getRandomInt(30, 70);\n        const angle37 = 180 - angle17 - angle27;\n        question = `Два угла треугольника равны ${angle17}° и ${angle27}°. Найдите третий угол.`;\n        translationKey = 'tasks.geometry.triangle_angles';\n        translationParams = {\n          angle1: angle17,\n          angle2: angle27\n        };\n        answer = angle37.toString();\n        explanation = `Сумма углов = 180°, третий угол = 180 - ${angle17} - ${angle27} = ${angle37}°`;\n        explanationKey = 'tasks.geometry.triangle_angles_explanation';\n        explanationParams = {\n          angle1: angle17,\n          angle2: angle27,\n          result: angle37\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 8:\n        // Периметр треугольника\n        const side18 = getRandomInt(5, 12);\n        const side28 = getRandomInt(6, 14);\n        const side38 = getRandomInt(7, 16);\n        const perimeter8 = side18 + side28 + side38;\n        question = `Периметр треугольника со сторонами ${side18} см, ${side28} см и ${side38} см?`;\n        translationKey = 'tasks.geometry.perimeter_triangle';\n        translationParams = {\n          side1: side18,\n          side2: side28,\n          side3: side38\n        };\n        answer = perimeter8.toString();\n        explanation = `Периметр = ${side18} + ${side28} + ${side38} = ${perimeter8} см`;\n        explanationKey = 'tasks.geometry.perimeter_triangle_explanation';\n        explanationParams = {\n          side1: side18,\n          side2: side28,\n          side3: side38,\n          result: perimeter8\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 9:\n        // Объем прямоугольного параллелепипеда\n        const length9 = getRandomInt(4, 10);\n        const width9 = getRandomInt(3, 8);\n        const height9 = getRandomInt(5, 12);\n        const volume9 = length9 * width9 * height9;\n        question = `Объем прямоугольного параллелепипеда ${length9}×${width9}×${height9} см?`;\n        translationKey = 'tasks.geometry.volume_rectangular';\n        translationParams = {\n          length: length9,\n          width: width9,\n          height: height9\n        };\n        answer = volume9.toString();\n        explanation = `Объем = ${length9} × ${width9} × ${height9} = ${volume9} см³`;\n        explanationKey = 'tasks.geometry.volume_rectangular_explanation';\n        explanationParams = {\n          length: length9,\n          width: width9,\n          height: height9,\n          result: volume9\n        };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n      case 10:\n        // Диаметр окружности\n        const radius10 = getRandomInt(3, 12);\n        const diameter10 = radius10 * 2;\n        question = `Диаметр окружности радиусом ${radius10} см?`;\n        translationKey = 'tasks.geometry.diameter';\n        translationParams = {\n          radius: radius10\n        };\n        answer = diameter10.toString();\n        explanation = `Диаметр = 2 × ${radius10} = ${diameter10} см`;\n        explanationKey = 'tasks.geometry.diameter_explanation';\n        explanationParams = {\n          radius: radius10,\n          result: diameter10\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({\n        question,\n        answer,\n        explanation,\n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey,\n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","geometryGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","side1","perimeter1","side","toString","result","width2","height2","area2","width","height","base3","height3","area3","round","base","radius4","circumference4","radius","radius5","area5","edge6","volume6","edge","angle17","angle27","angle37","angle1","angle2","side18","side28","side38","perimeter8","side2","side3","length9","width9","height9","volume9","radius10","diameter10","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day2-geometry.js"],"sourcesContent":["// day2-geometry.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const geometryGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Периметр квадрата\n        const side1 = getRandomInt(3, 12);\n        const perimeter1 = side1 * 4;\n        question = `Периметр квадрата со стороной ${side1} см?`;\n        translationKey = 'tasks.geometry.perimeter_square';\n        translationParams = { side: side1 };\n        answer = perimeter1.toString();\n        explanation = `Периметр = 4 × ${side1} = ${perimeter1} см`;\n        explanationKey = 'tasks.geometry.perimeter_square_explanation';\n        explanationParams = { side: side1, result: perimeter1 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 2: // Площадь прямоугольника\n        const width2 = getRandomInt(4, 10);\n        const height2 = getRandomInt(5, 15);\n        const area2 = width2 * height2;\n        question = `Площадь прямоугольника ${width2}×${height2} см?`;\n        translationKey = 'tasks.geometry.area_rectangle';\n        translationParams = { width: width2, height: height2 };\n        answer = area2.toString();\n        explanation = `Площадь = ${width2} × ${height2} = ${area2} см²`;\n        explanationKey = 'tasks.geometry.area_rectangle_explanation';\n        explanationParams = { width: width2, height: height2, result: area2 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 3: // Площадь треугольника\n        const base3 = getRandomInt(6, 15);\n        const height3 = getRandomInt(4, 12);\n        const area3 = Math.round((base3 * height3) / 2);\n        question = `Найдите площадь треугольника с основанием ${base3} см и высотой ${height3} см`;\n        translationKey = 'tasks.geometry.area_triangle';\n        translationParams = { base: base3, height: height3 };\n        answer = area3.toString();\n        explanation = `Площадь = (${base3} × ${height3}) / 2 = ${area3} см²`;\n        explanationKey = 'tasks.geometry.area_triangle_explanation';\n        explanationParams = { base: base3, height: height3, result: area3 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 4: // Длина окружности\n        const radius4 = getRandomInt(2, 10);\n        const circumference4 = Math.round(2 * 3.14 * radius4);\n        question = `Длина окружности радиусом ${radius4} см (π≈3.14)?`;\n        translationKey = 'tasks.geometry.circumference';\n        translationParams = { radius: radius4 };\n        answer = circumference4.toString();\n        explanation = `Длина = 2 × 3.14 × ${radius4} = ${circumference4} см`;\n        explanationKey = 'tasks.geometry.circumference_explanation';\n        explanationParams = { radius: radius4, result: circumference4 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 5: // Площадь круга\n        const radius5 = getRandomInt(3, 8);\n        const area5 = Math.round(3.14 * radius5 * radius5);\n        question = `Площадь круга радиусом ${radius5} см (π≈3.14)?`;\n        translationKey = 'tasks.geometry.area_circle';\n        translationParams = { radius: radius5 };\n        answer = area5.toString();\n        explanation = `Площадь = 3.14 × ${radius5}² = ${area5} см²`;\n        explanationKey = 'tasks.geometry.area_circle_explanation';\n        explanationParams = { radius: radius5, result: area5 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 6: // Объем куба\n        const edge6 = getRandomInt(2, 7);\n        const volume6 = edge6 * edge6 * edge6;\n        question = `Объем куба с ребром ${edge6} см?`;\n        translationKey = 'tasks.geometry.volume_cube';\n        translationParams = { edge: edge6 };\n        answer = volume6.toString();\n        explanation = `Объем = ${edge6} × ${edge6} × ${edge6} = ${volume6} см³`;\n        explanationKey = 'tasks.geometry.volume_cube_explanation';\n        explanationParams = { edge: edge6, result: volume6 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 7: // Углы треугольника\n        const angle17 = getRandomInt(30, 70);\n        const angle27 = getRandomInt(30, 70);\n        const angle37 = 180 - angle17 - angle27;\n        question = `Два угла треугольника равны ${angle17}° и ${angle27}°. Найдите третий угол.`;\n        translationKey = 'tasks.geometry.triangle_angles';\n        translationParams = { angle1: angle17, angle2: angle27 };\n        answer = angle37.toString();\n        explanation = `Сумма углов = 180°, третий угол = 180 - ${angle17} - ${angle27} = ${angle37}°`;\n        explanationKey = 'tasks.geometry.triangle_angles_explanation';\n        explanationParams = { angle1: angle17, angle2: angle27, result: angle37 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 8: // Периметр треугольника\n        const side18 = getRandomInt(5, 12);\n        const side28 = getRandomInt(6, 14);\n        const side38 = getRandomInt(7, 16);\n        const perimeter8 = side18 + side28 + side38;\n        question = `Периметр треугольника со сторонами ${side18} см, ${side28} см и ${side38} см?`;\n        translationKey = 'tasks.geometry.perimeter_triangle';\n        translationParams = { side1: side18, side2: side28, side3: side38 };\n        answer = perimeter8.toString();\n        explanation = `Периметр = ${side18} + ${side28} + ${side38} = ${perimeter8} см`;\n        explanationKey = 'tasks.geometry.perimeter_triangle_explanation';\n        explanationParams = { side1: side18, side2: side28, side3: side38, result: perimeter8 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 9: // Объем прямоугольного параллелепипеда\n        const length9 = getRandomInt(4, 10);\n        const width9 = getRandomInt(3, 8);\n        const height9 = getRandomInt(5, 12);\n        const volume9 = length9 * width9 * height9;\n        question = `Объем прямоугольного параллелепипеда ${length9}×${width9}×${height9} см?`;\n        translationKey = 'tasks.geometry.volume_rectangular';\n        translationParams = { length: length9, width: width9, height: height9 };\n        answer = volume9.toString();\n        explanation = `Объем = ${length9} × ${width9} × ${height9} = ${volume9} см³`;\n        explanationKey = 'tasks.geometry.volume_rectangular_explanation';\n        explanationParams = { length: length9, width: width9, height: height9, result: volume9 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 10: // Диаметр окружности\n        const radius10 = getRandomInt(3, 12);\n        const diameter10 = radius10 * 2;\n        question = `Диаметр окружности радиусом ${radius10} см?`;\n        translationKey = 'tasks.geometry.diameter';\n        translationParams = { radius: radius10 };\n        answer = diameter10.toString();\n        explanation = `Диаметр = 2 × ${radius10} = ${diameter10} см`;\n        explanationKey = 'tasks.geometry.diameter_explanation';\n        explanationParams = { radius: radius10, result: diameter10 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAKC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;AAEpF,OAAO,MAAMK,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,CAAC,KAAK;EAC7C,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC;EAE/B,OAAOF,KAAK,CAACG,MAAM,GAAGL,KAAK,EAAE;IAC3B,IAAIM,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,YAAY;IAC/C,IAAIC,cAAc,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,SAAS;IACnF,IAAIC,IAAI,GAAGtB,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;IAE9B,QAAQsB,IAAI;MACV,KAAK,CAAC;QAAE;QACN,MAAMC,KAAK,GAAGvB,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QACjC,MAAMwB,UAAU,GAAGD,KAAK,GAAG,CAAC;QAC5BV,QAAQ,GAAG,iCAAiCU,KAAK,MAAM;QACvDN,cAAc,GAAG,iCAAiC;QAClDC,iBAAiB,GAAG;UAAEO,IAAI,EAAEF;QAAM,CAAC;QACnCT,MAAM,GAAGU,UAAU,CAACE,QAAQ,CAAC,CAAC;QAC9BX,WAAW,GAAG,kBAAkBQ,KAAK,MAAMC,UAAU,KAAK;QAC1DL,cAAc,GAAG,6CAA6C;QAC9DC,iBAAiB,GAAG;UAAEK,IAAI,EAAEF,KAAK;UAAEI,MAAM,EAAEH;QAAW,CAAC;QACvDR,YAAY,GAAG,OAAO;QACtBK,SAAS,GAAG,sBAAsB;QAClC;MAEF,KAAK,CAAC;QAAE;QACN,MAAMO,MAAM,GAAG5B,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QAClC,MAAM6B,OAAO,GAAG7B,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QACnC,MAAM8B,KAAK,GAAGF,MAAM,GAAGC,OAAO;QAC9BhB,QAAQ,GAAG,0BAA0Be,MAAM,IAAIC,OAAO,MAAM;QAC5DZ,cAAc,GAAG,+BAA+B;QAChDC,iBAAiB,GAAG;UAAEa,KAAK,EAAEH,MAAM;UAAEI,MAAM,EAAEH;QAAQ,CAAC;QACtDf,MAAM,GAAGgB,KAAK,CAACJ,QAAQ,CAAC,CAAC;QACzBX,WAAW,GAAG,aAAaa,MAAM,MAAMC,OAAO,MAAMC,KAAK,MAAM;QAC/DX,cAAc,GAAG,2CAA2C;QAC5DC,iBAAiB,GAAG;UAAEW,KAAK,EAAEH,MAAM;UAAEI,MAAM,EAAEH,OAAO;UAAEF,MAAM,EAAEG;QAAM,CAAC;QACrEd,YAAY,GAAG,eAAe;QAC9BK,SAAS,GAAG,mBAAmB;QAC/B;MAEF,KAAK,CAAC;QAAE;QACN,MAAMY,KAAK,GAAGjC,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QACjC,MAAMkC,OAAO,GAAGlC,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QACnC,MAAMmC,KAAK,GAAGhC,IAAI,CAACiC,KAAK,CAAEH,KAAK,GAAGC,OAAO,GAAI,CAAC,CAAC;QAC/CrB,QAAQ,GAAG,6CAA6CoB,KAAK,iBAAiBC,OAAO,KAAK;QAC1FjB,cAAc,GAAG,8BAA8B;QAC/CC,iBAAiB,GAAG;UAAEmB,IAAI,EAAEJ,KAAK;UAAED,MAAM,EAAEE;QAAQ,CAAC;QACpDpB,MAAM,GAAGqB,KAAK,CAACT,QAAQ,CAAC,CAAC;QACzBX,WAAW,GAAG,cAAckB,KAAK,MAAMC,OAAO,WAAWC,KAAK,MAAM;QACpEhB,cAAc,GAAG,0CAA0C;QAC3DC,iBAAiB,GAAG;UAAEiB,IAAI,EAAEJ,KAAK;UAAED,MAAM,EAAEE,OAAO;UAAEP,MAAM,EAAEQ;QAAM,CAAC;QACnEnB,YAAY,GAAG,eAAe;QAC9BK,SAAS,GAAG,mBAAmB;QAC/B;MAEF,KAAK,CAAC;QAAE;QACN,MAAMiB,OAAO,GAAGtC,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QACnC,MAAMuC,cAAc,GAAGpC,IAAI,CAACiC,KAAK,CAAC,CAAC,GAAG,IAAI,GAAGE,OAAO,CAAC;QACrDzB,QAAQ,GAAG,6BAA6ByB,OAAO,eAAe;QAC9DrB,cAAc,GAAG,8BAA8B;QAC/CC,iBAAiB,GAAG;UAAEsB,MAAM,EAAEF;QAAQ,CAAC;QACvCxB,MAAM,GAAGyB,cAAc,CAACb,QAAQ,CAAC,CAAC;QAClCX,WAAW,GAAG,sBAAsBuB,OAAO,MAAMC,cAAc,KAAK;QACpEpB,cAAc,GAAG,0CAA0C;QAC3DC,iBAAiB,GAAG;UAAEoB,MAAM,EAAEF,OAAO;UAAEX,MAAM,EAAEY;QAAe,CAAC;QAC/DvB,YAAY,GAAG,OAAO;QACtBK,SAAS,GAAG,sBAAsB;QAClC;MAEF,KAAK,CAAC;QAAE;QACN,MAAMoB,OAAO,GAAGzC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAClC,MAAM0C,KAAK,GAAGvC,IAAI,CAACiC,KAAK,CAAC,IAAI,GAAGK,OAAO,GAAGA,OAAO,CAAC;QAClD5B,QAAQ,GAAG,0BAA0B4B,OAAO,eAAe;QAC3DxB,cAAc,GAAG,4BAA4B;QAC7CC,iBAAiB,GAAG;UAAEsB,MAAM,EAAEC;QAAQ,CAAC;QACvC3B,MAAM,GAAG4B,KAAK,CAAChB,QAAQ,CAAC,CAAC;QACzBX,WAAW,GAAG,oBAAoB0B,OAAO,OAAOC,KAAK,MAAM;QAC3DvB,cAAc,GAAG,wCAAwC;QACzDC,iBAAiB,GAAG;UAAEoB,MAAM,EAAEC,OAAO;UAAEd,MAAM,EAAEe;QAAM,CAAC;QACtD1B,YAAY,GAAG,eAAe;QAC9BK,SAAS,GAAG,mBAAmB;QAC/B;MAEF,KAAK,CAAC;QAAE;QACN,MAAMsB,KAAK,GAAG3C,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM4C,OAAO,GAAGD,KAAK,GAAGA,KAAK,GAAGA,KAAK;QACrC9B,QAAQ,GAAG,uBAAuB8B,KAAK,MAAM;QAC7C1B,cAAc,GAAG,4BAA4B;QAC7CC,iBAAiB,GAAG;UAAE2B,IAAI,EAAEF;QAAM,CAAC;QACnC7B,MAAM,GAAG8B,OAAO,CAAClB,QAAQ,CAAC,CAAC;QAC3BX,WAAW,GAAG,WAAW4B,KAAK,MAAMA,KAAK,MAAMA,KAAK,MAAMC,OAAO,MAAM;QACvEzB,cAAc,GAAG,wCAAwC;QACzDC,iBAAiB,GAAG;UAAEyB,IAAI,EAAEF,KAAK;UAAEhB,MAAM,EAAEiB;QAAQ,CAAC;QACpD5B,YAAY,GAAG,eAAe;QAC9BK,SAAS,GAAG,mBAAmB;QAC/B;MAEF,KAAK,CAAC;QAAE;QACN,MAAMyB,OAAO,GAAG9C,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC;QACpC,MAAM+C,OAAO,GAAG/C,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC;QACpC,MAAMgD,OAAO,GAAG,GAAG,GAAGF,OAAO,GAAGC,OAAO;QACvClC,QAAQ,GAAG,+BAA+BiC,OAAO,OAAOC,OAAO,yBAAyB;QACxF9B,cAAc,GAAG,gCAAgC;QACjDC,iBAAiB,GAAG;UAAE+B,MAAM,EAAEH,OAAO;UAAEI,MAAM,EAAEH;QAAQ,CAAC;QACxDjC,MAAM,GAAGkC,OAAO,CAACtB,QAAQ,CAAC,CAAC;QAC3BX,WAAW,GAAG,2CAA2C+B,OAAO,MAAMC,OAAO,MAAMC,OAAO,GAAG;QAC7F7B,cAAc,GAAG,4CAA4C;QAC7DC,iBAAiB,GAAG;UAAE6B,MAAM,EAAEH,OAAO;UAAEI,MAAM,EAAEH,OAAO;UAAEpB,MAAM,EAAEqB;QAAQ,CAAC;QACzEhC,YAAY,GAAG,OAAO;QACtBK,SAAS,GAAG,sBAAsB;QAClC;MAEF,KAAK,CAAC;QAAE;QACN,MAAM8B,MAAM,GAAGnD,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QAClC,MAAMoD,MAAM,GAAGpD,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QAClC,MAAMqD,MAAM,GAAGrD,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QAClC,MAAMsD,UAAU,GAAGH,MAAM,GAAGC,MAAM,GAAGC,MAAM;QAC3CxC,QAAQ,GAAG,sCAAsCsC,MAAM,QAAQC,MAAM,SAASC,MAAM,MAAM;QAC1FpC,cAAc,GAAG,mCAAmC;QACpDC,iBAAiB,GAAG;UAAEK,KAAK,EAAE4B,MAAM;UAAEI,KAAK,EAAEH,MAAM;UAAEI,KAAK,EAAEH;QAAO,CAAC;QACnEvC,MAAM,GAAGwC,UAAU,CAAC5B,QAAQ,CAAC,CAAC;QAC9BX,WAAW,GAAG,cAAcoC,MAAM,MAAMC,MAAM,MAAMC,MAAM,MAAMC,UAAU,KAAK;QAC/EnC,cAAc,GAAG,+CAA+C;QAChEC,iBAAiB,GAAG;UAAEG,KAAK,EAAE4B,MAAM;UAAEI,KAAK,EAAEH,MAAM;UAAEI,KAAK,EAAEH,MAAM;UAAE1B,MAAM,EAAE2B;QAAW,CAAC;QACvFtC,YAAY,GAAG,OAAO;QACtBK,SAAS,GAAG,sBAAsB;QAClC;MAEF,KAAK,CAAC;QAAE;QACN,MAAMoC,OAAO,GAAGzD,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QACnC,MAAM0D,MAAM,GAAG1D,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM2D,OAAO,GAAG3D,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QACnC,MAAM4D,OAAO,GAAGH,OAAO,GAAGC,MAAM,GAAGC,OAAO;QAC1C9C,QAAQ,GAAG,wCAAwC4C,OAAO,IAAIC,MAAM,IAAIC,OAAO,MAAM;QACrF1C,cAAc,GAAG,mCAAmC;QACpDC,iBAAiB,GAAG;UAAEN,MAAM,EAAE6C,OAAO;UAAE1B,KAAK,EAAE2B,MAAM;UAAE1B,MAAM,EAAE2B;QAAQ,CAAC;QACvE7C,MAAM,GAAG8C,OAAO,CAAClC,QAAQ,CAAC,CAAC;QAC3BX,WAAW,GAAG,WAAW0C,OAAO,MAAMC,MAAM,MAAMC,OAAO,MAAMC,OAAO,MAAM;QAC5EzC,cAAc,GAAG,+CAA+C;QAChEC,iBAAiB,GAAG;UAAER,MAAM,EAAE6C,OAAO;UAAE1B,KAAK,EAAE2B,MAAM;UAAE1B,MAAM,EAAE2B,OAAO;UAAEhC,MAAM,EAAEiC;QAAQ,CAAC;QACxF5C,YAAY,GAAG,eAAe;QAC9BK,SAAS,GAAG,mBAAmB;QAC/B;MAEF,KAAK,EAAE;QAAE;QACP,MAAMwC,QAAQ,GAAG7D,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QACpC,MAAM8D,UAAU,GAAGD,QAAQ,GAAG,CAAC;QAC/BhD,QAAQ,GAAG,+BAA+BgD,QAAQ,MAAM;QACxD5C,cAAc,GAAG,yBAAyB;QAC1CC,iBAAiB,GAAG;UAAEsB,MAAM,EAAEqB;QAAS,CAAC;QACxC/C,MAAM,GAAGgD,UAAU,CAACpC,QAAQ,CAAC,CAAC;QAC9BX,WAAW,GAAG,iBAAiB8C,QAAQ,MAAMC,UAAU,KAAK;QAC5D3C,cAAc,GAAG,qCAAqC;QACtDC,iBAAiB,GAAG;UAAEoB,MAAM,EAAEqB,QAAQ;UAAElC,MAAM,EAAEmC;QAAW,CAAC;QAC5D9C,YAAY,GAAG,OAAO;QACtBK,SAAS,GAAG,sBAAsB;QAClC;MAEF;QACEC,IAAI,GAAGtB,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QAC1B;IACJ;IAEA,IAAI,CAACU,aAAa,CAACqD,GAAG,CAAClD,QAAQ,CAAC,EAAE;MAChCH,aAAa,CAACsD,GAAG,CAACnD,QAAQ,CAAC;MAC3BJ,KAAK,CAACwD,IAAI,CAAC;QACTpD,QAAQ;QACRC,MAAM;QACNC,WAAW;QACXC,YAAY;QACZC,cAAc;QACdC,iBAAiB;QACjBC,cAAc;QACdC,iBAAiB;QACjBC;MACF,CAAC,CAAC;IACJ;EACF;EACA,OAAOZ,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}