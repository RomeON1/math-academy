{"ast":null,"code":"// day9-areas.js\nconst getRandomInt=(min,max)=>Math.floor(Math.random()*(max-min+1))+min;export const areasGenerator=(count,t)=>{const tasks=[];const usedQuestions=new Set();while(tasks.length<count){let question,answer,explanation,answerFormat;let translationKey,translationParams,explanationKey,explanationParams,formatKey;let type=getRandomInt(1,10);switch(type){case 1:// Площадь квадрата\nconst side1=getRandomInt(3,12);const area1=side1*side1;question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043A\\u0432\\u0430\\u0434\\u0440\\u0430\\u0442\\u0430 \\u0441\\u043E \\u0441\\u0442\\u043E\\u0440\\u043E\\u043D\\u043E\\u0439 \".concat(side1,\" \\u0441\\u043C\");translationKey='tasks.areas.square';translationParams={side:side1};answer=area1.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043A\\u0432\\u0430\\u0434\\u0440\\u0430\\u0442\\u0430 = \\u0441\\u0442\\u043E\\u0440\\u043E\\u043D\\u0430\\xB2 = \".concat(side1,\" \\xD7 \").concat(side1,\" = \").concat(area1,\" \\u0441\\u043C\\xB2\");explanationKey='tasks.areas.square_explanation';explanationParams={side:side1,result:area1};answerFormat=\"число (в см²)\";formatKey='answerFormats.cm2';break;case 2:// Площадь прямоугольника\nconst length2=getRandomInt(5,15);const width2=getRandomInt(3,10);const area2=length2*width2;question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043F\\u0440\\u044F\\u043C\\u043E\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430 \".concat(length2,\"\\xD7\").concat(width2,\" \\u0441\\u043C\");translationKey='tasks.areas.rectangle';translationParams={length:length2,width:width2};answer=area2.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043F\\u0440\\u044F\\u043C\\u043E\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430 = \\u0434\\u043B\\u0438\\u043D\\u0430 \\xD7 \\u0448\\u0438\\u0440\\u0438\\u043D\\u0430 = \".concat(length2,\" \\xD7 \").concat(width2,\" = \").concat(area2,\" \\u0441\\u043C\\xB2\");explanationKey='tasks.areas.rectangle_explanation';explanationParams={length:length2,width:width2,result:area2};answerFormat=\"число (в см²)\";formatKey='answerFormats.cm2';break;case 3:// Площадь треугольника\nconst base3=getRandomInt(6,15);const height3=getRandomInt(4,12);const area3=Math.round(base3*height3/2);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u0442\\u0440\\u0435\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430 \\u0441 \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\u043C \".concat(base3,\" \\u0441\\u043C \\u0438 \\u0432\\u044B\\u0441\\u043E\\u0442\\u043E\\u0439 \").concat(height3,\" \\u0441\\u043C\");translationKey='tasks.areas.triangle';translationParams={base:base3,height:height3};answer=area3.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u0442\\u0440\\u0435\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430 = (\\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\xD7 \\u0432\\u044B\\u0441\\u043E\\u0442\\u0430) / 2 = (\".concat(base3,\" \\xD7 \").concat(height3,\") / 2 = \").concat(area3,\" \\u0441\\u043C\\xB2\");explanationKey='tasks.areas.triangle_explanation';explanationParams={base:base3,height:height3,result:area3};answerFormat=\"число (в см²)\";formatKey='answerFormats.cm2';break;case 4:// Площадь круга\nconst radius4=getRandomInt(2,8);const area4=Math.round(3.14*radius4*radius4);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043A\\u0440\\u0443\\u0433\\u0430 \\u0440\\u0430\\u0434\\u0438\\u0443\\u0441\\u043E\\u043C \".concat(radius4,\" \\u0441\\u043C (\\u03C0\\u22483.14)\");translationKey='tasks.areas.circle';translationParams={radius:radius4};answer=area4.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043A\\u0440\\u0443\\u0433\\u0430 = \\u03C0 \\xD7 \\u0440\\u0430\\u0434\\u0438\\u0443\\u0441\\xB2 = 3.14 \\xD7 \".concat(radius4,\"\\xB2 = \").concat(area4,\" \\u0441\\u043C\\xB2\");explanationKey='tasks.areas.circle_explanation';explanationParams={radius:radius4,result:area4};answerFormat=\"число (в см²)\";formatKey='answerFormats.cm2';break;case 5:// Площадь параллелограмма\nconst base5=getRandomInt(5,12);const height5=getRandomInt(4,10);const area5=base5*height5;question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043F\\u0430\\u0440\\u0430\\u043B\\u043B\\u0435\\u043B\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0430 \\u0441 \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\u043C \".concat(base5,\" \\u0441\\u043C \\u0438 \\u0432\\u044B\\u0441\\u043E\\u0442\\u043E\\u0439 \").concat(height5,\" \\u0441\\u043C\");translationKey='tasks.areas.parallelogram';translationParams={base:base5,height:height5};answer=area5.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043F\\u0430\\u0440\\u0430\\u043B\\u043B\\u0435\\u043B\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0430 = \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\xD7 \\u0432\\u044B\\u0441\\u043E\\u0442\\u0430 = \".concat(base5,\" \\xD7 \").concat(height5,\" = \").concat(area5,\" \\u0441\\u043C\\xB2\");explanationKey='tasks.areas.parallelogram_explanation';explanationParams={base:base5,height:height5,result:area5};answerFormat=\"число (в см²)\";formatKey='answerFormats.cm2';break;case 6:// Площадь ромба\nconst diagonal1_6=getRandomInt(4,10);const diagonal2_6=getRandomInt(6,12);const area6=Math.round(diagonal1_6*diagonal2_6/2);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u0440\\u043E\\u043C\\u0431\\u0430 \\u0441 \\u0434\\u0438\\u0430\\u0433\\u043E\\u043D\\u0430\\u043B\\u044F\\u043C\\u0438 \".concat(diagonal1_6,\" \\u0441\\u043C \\u0438 \").concat(diagonal2_6,\" \\u0441\\u043C\");translationKey='tasks.areas.rhombus';translationParams={diagonal1:diagonal1_6,diagonal2:diagonal2_6};answer=area6.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u0440\\u043E\\u043C\\u0431\\u0430 = (\\u0434\\u0438\\u0430\\u0433\\u043E\\u043D\\u0430\\u043B\\u044C\\u2081 \\xD7 \\u0434\\u0438\\u0430\\u0433\\u043E\\u043D\\u0430\\u043B\\u044C\\u2082) / 2 = (\".concat(diagonal1_6,\" \\xD7 \").concat(diagonal2_6,\") / 2 = \").concat(area6,\" \\u0441\\u043C\\xB2\");explanationKey='tasks.areas.rhombus_explanation';explanationParams={diagonal1:diagonal1_6,diagonal2:diagonal2_6,result:area6};answerFormat=\"число (в см²)\";formatKey='answerFormats.cm2';break;case 7:// Площадь трапеции\nconst base1_7=getRandomInt(5,10);const base2_7=getRandomInt(8,15);const height7=getRandomInt(4,8);const area7=Math.round((base1_7+base2_7)/2*height7);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u0442\\u0440\\u0430\\u043F\\u0435\\u0446\\u0438\\u0438 \\u0441 \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\\u043C\\u0438 \".concat(base1_7,\" \\u0441\\u043C \\u0438 \").concat(base2_7,\" \\u0441\\u043C \\u0438 \\u0432\\u044B\\u0441\\u043E\\u0442\\u043E\\u0439 \").concat(height7,\" \\u0441\\u043C\");translationKey='tasks.areas.trapezoid';translationParams={base1:base1_7,base2:base2_7,height:height7};answer=area7.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u0442\\u0440\\u0430\\u043F\\u0435\\u0446\\u0438\\u0438 = (\\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\u2081 + \\u043E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\u2082) / 2 \\xD7 \\u0432\\u044B\\u0441\\u043E\\u0442\\u0430 = (\".concat(base1_7,\" + \").concat(base2_7,\") / 2 \\xD7 \").concat(height7,\" = \").concat(area7,\" \\u0441\\u043C\\xB2\");explanationKey='tasks.areas.trapezoid_explanation';explanationParams={base1:base1_7,base2:base2_7,height:height7,result:area7};answerFormat=\"число (в см²)\";formatKey='answerFormats.cm2';break;case 8:// Площадь составной фигуры (прямоугольник + треугольник)\nconst rectWidth8=getRandomInt(6,10);const rectHeight8=getRandomInt(4,8);const triangleHeight8=getRandomInt(3,6);const areaRect8=rectWidth8*rectHeight8;const areaTriangle8=Math.round(rectWidth8*triangleHeight8/2);const totalArea8=areaRect8+areaTriangle8;question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u0444\\u0438\\u0433\\u0443\\u0440\\u044B: \\u043F\\u0440\\u044F\\u043C\\u043E\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A \".concat(rectWidth8,\"\\xD7\").concat(rectHeight8,\" \\u0441\\u043C \\u0441 \\u0442\\u0440\\u0435\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u043E\\u043C \\u0432\\u044B\\u0441\\u043E\\u0442\\u043E\\u0439 \").concat(triangleHeight8,\" \\u0441\\u043C \\u043D\\u0430\\u0432\\u0435\\u0440\\u0445\\u0443\");translationKey='tasks.areas.composite_shape';translationParams={width:rectWidth8,height:rectHeight8,triHeight:triangleHeight8};answer=totalArea8.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043F\\u0440\\u044F\\u043C\\u043E\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430 = \".concat(rectWidth8,\" \\xD7 \").concat(rectHeight8,\" = \").concat(areaRect8,\" \\u0441\\u043C\\xB2, \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u0442\\u0440\\u0435\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430 = (\").concat(rectWidth8,\" \\xD7 \").concat(triangleHeight8,\") / 2 = \").concat(areaTriangle8,\" \\u0441\\u043C\\xB2, \\u043E\\u0431\\u0449\\u0430\\u044F \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C = \").concat(areaRect8,\" + \").concat(areaTriangle8,\" = \").concat(totalArea8,\" \\u0441\\u043C\\xB2\");explanationKey='tasks.areas.composite_shape_explanation';explanationParams={width:rectWidth8,height:rectHeight8,triHeight:triangleHeight8,rectArea:areaRect8,triArea:areaTriangle8,result:totalArea8};answerFormat=\"число (в см²)\";formatKey='answerFormats.cm2';break;case 9:// Площадь через периметр (квадрат)\nconst perimeter9=getRandomInt(20,40);const side9=perimeter9/4;const area9=side9*side9;question=\"\\u041F\\u0435\\u0440\\u0438\\u043C\\u0435\\u0442\\u0440 \\u043A\\u0432\\u0430\\u0434\\u0440\\u0430\\u0442\\u0430 \\u0440\\u0430\\u0432\\u0435\\u043D \".concat(perimeter9,\" \\u0441\\u043C. \\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0435\\u0433\\u043E \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C\");translationKey='tasks.areas.square_from_perimeter';translationParams={perimeter:perimeter9};answer=area9.toString();explanation=\"\\u0421\\u0442\\u043E\\u0440\\u043E\\u043D\\u0430 = \\u043F\\u0435\\u0440\\u0438\\u043C\\u0435\\u0442\\u0440 / 4 = \".concat(perimeter9,\" / 4 = \").concat(side9,\" \\u0441\\u043C, \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C = \").concat(side9,\" \\xD7 \").concat(side9,\" = \").concat(area9,\" \\u0441\\u043C\\xB2\");explanationKey='tasks.areas.square_from_perimeter_explanation';explanationParams={perimeter:perimeter9,side:side9,result:area9};answerFormat=\"число (в см²)\";formatKey='answerFormats.cm2';break;case 10:// Сравнение площадей\nconst sideA10=getRandomInt(4,8);const sideB10=getRandomInt(5,9);const areaA10=sideA10*sideA10;const areaB10=sideB10*sideB10;const comparisonResult=areaA10>areaB10?\"больше\":areaA10<areaB10?\"меньше\":\"равны\";question=\"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0438\\u0442\\u0435 \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u0438 \\u043A\\u0432\\u0430\\u0434\\u0440\\u0430\\u0442\\u043E\\u0432 \\u0441\\u043E \\u0441\\u0442\\u043E\\u0440\\u043E\\u043D\\u0430\\u043C\\u0438 \".concat(sideA10,\" \\u0441\\u043C \\u0438 \").concat(sideB10,\" \\u0441\\u043C\");translationKey='tasks.areas.compare_areas';translationParams={sideA:sideA10,sideB:sideB10};answer=comparisonResult;explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C\\u2081 = \".concat(sideA10,\"\\xB2 = \").concat(areaA10,\" \\u0441\\u043C\\xB2, \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C\\u2082 = \").concat(sideB10,\"\\xB2 = \").concat(areaB10,\" \\u0441\\u043C\\xB2 \\u2192 \").concat(areaA10,\" \").concat(comparisonResult,\" \").concat(areaB10);explanationKey='tasks.areas.compare_areas_explanation';explanationParams={side:sideA10,sideB:sideB10,areaA:areaA10,areaB:areaB10,result:comparisonResult};answerFormat=\"больше/меньше/равно\";formatKey='answerFormats.comparison';break;default:type=getRandomInt(1,10);continue;}if(!usedQuestions.has(question)){usedQuestions.add(question);tasks.push({question,answer,explanation,answerFormat,translationKey,translationParams,explanationKey,explanationParams,formatKey});}}return tasks;};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","areasGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","side1","area1","concat","side","toString","result","length2","width2","area2","width","base3","height3","area3","round","base","height","radius4","area4","radius","base5","height5","area5","diagonal1_6","diagonal2_6","area6","diagonal1","diagonal2","base1_7","base2_7","height7","area7","base1","base2","rectWidth8","rectHeight8","triangleHeight8","areaRect8","areaTriangle8","totalArea8","triHeight","rectArea","triArea","perimeter9","side9","area9","perimeter","sideA10","sideB10","areaA10","areaB10","comparisonResult","sideA","sideB","areaA","areaB","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day9-areas.js"],"sourcesContent":["// day9-areas.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const areasGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Площадь квадрата\n        const side1 = getRandomInt(3, 12);\n        const area1 = side1 * side1;\n        question = `Найдите площадь квадрата со стороной ${side1} см`;\n        translationKey = 'tasks.areas.square';\n        translationParams = { side: side1 };\n        answer = area1.toString();\n        explanation = `Площадь квадрата = сторона² = ${side1} × ${side1} = ${area1} см²`;\n        explanationKey = 'tasks.areas.square_explanation';\n        explanationParams = { side: side1, result: area1 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 2: // Площадь прямоугольника\n        const length2 = getRandomInt(5, 15);\n        const width2 = getRandomInt(3, 10);\n        const area2 = length2 * width2;\n        question = `Найдите площадь прямоугольника ${length2}×${width2} см`;\n        translationKey = 'tasks.areas.rectangle';\n        translationParams = { length: length2, width: width2 };\n        answer = area2.toString();\n        explanation = `Площадь прямоугольника = длина × ширина = ${length2} × ${width2} = ${area2} см²`;\n        explanationKey = 'tasks.areas.rectangle_explanation';\n        explanationParams = { length: length2, width: width2, result: area2 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 3: // Площадь треугольника\n        const base3 = getRandomInt(6, 15);\n        const height3 = getRandomInt(4, 12);\n        const area3 = Math.round((base3 * height3) / 2);\n        question = `Найдите площадь треугольника с основанием ${base3} см и высотой ${height3} см`;\n        translationKey = 'tasks.areas.triangle';\n        translationParams = { base: base3, height: height3 };\n        answer = area3.toString();\n        explanation = `Площадь треугольника = (основание × высота) / 2 = (${base3} × ${height3}) / 2 = ${area3} см²`;\n        explanationKey = 'tasks.areas.triangle_explanation';\n        explanationParams = { base: base3, height: height3, result: area3 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 4: // Площадь круга\n        const radius4 = getRandomInt(2, 8);\n        const area4 = Math.round(3.14 * radius4 * radius4);\n        question = `Найдите площадь круга радиусом ${radius4} см (π≈3.14)`;\n        translationKey = 'tasks.areas.circle';\n        translationParams = { radius: radius4 };\n        answer = area4.toString();\n        explanation = `Площадь круга = π × радиус² = 3.14 × ${radius4}² = ${area4} см²`;\n        explanationKey = 'tasks.areas.circle_explanation';\n        explanationParams = { radius: radius4, result: area4 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 5: // Площадь параллелограмма\n        const base5 = getRandomInt(5, 12);\n        const height5 = getRandomInt(4, 10);\n        const area5 = base5 * height5;\n        question = `Найдите площадь параллелограмма с основанием ${base5} см и высотой ${height5} см`;\n        translationKey = 'tasks.areas.parallelogram';\n        translationParams = { base: base5, height: height5 };\n        answer = area5.toString();\n        explanation = `Площадь параллелограмма = основание × высота = ${base5} × ${height5} = ${area5} см²`;\n        explanationKey = 'tasks.areas.parallelogram_explanation';\n        explanationParams = { base: base5, height: height5, result: area5 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 6: // Площадь ромба\n        const diagonal1_6 = getRandomInt(4, 10);\n        const diagonal2_6 = getRandomInt(6, 12);\n        const area6 = Math.round((diagonal1_6 * diagonal2_6) / 2);\n        question = `Найдите площадь ромба с диагоналями ${diagonal1_6} см и ${diagonal2_6} см`;\n        translationKey = 'tasks.areas.rhombus';\n        translationParams = { diagonal1: diagonal1_6, diagonal2: diagonal2_6 };\n        answer = area6.toString();\n        explanation = `Площадь ромба = (диагональ₁ × диагональ₂) / 2 = (${diagonal1_6} × ${diagonal2_6}) / 2 = ${area6} см²`;\n        explanationKey = 'tasks.areas.rhombus_explanation';\n        explanationParams = { diagonal1: diagonal1_6, diagonal2: diagonal2_6, result: area6 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 7: // Площадь трапеции\n        const base1_7 = getRandomInt(5, 10);\n        const base2_7 = getRandomInt(8, 15);\n        const height7 = getRandomInt(4, 8);\n        const area7 = Math.round(((base1_7 + base2_7) / 2) * height7);\n        question = `Найдите площадь трапеции с основаниями ${base1_7} см и ${base2_7} см и высотой ${height7} см`;\n        translationKey = 'tasks.areas.trapezoid';\n        translationParams = { base1: base1_7, base2: base2_7, height: height7 };\n        answer = area7.toString();\n        explanation = `Площадь трапеции = (основание₁ + основание₂) / 2 × высота = (${base1_7} + ${base2_7}) / 2 × ${height7} = ${area7} см²`;\n        explanationKey = 'tasks.areas.trapezoid_explanation';\n        explanationParams = { base1: base1_7, base2: base2_7, height: height7, result: area7 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 8: // Площадь составной фигуры (прямоугольник + треугольник)\n        const rectWidth8 = getRandomInt(6, 10);\n        const rectHeight8 = getRandomInt(4, 8);\n        const triangleHeight8 = getRandomInt(3, 6);\n        const areaRect8 = rectWidth8 * rectHeight8;\n        const areaTriangle8 = Math.round((rectWidth8 * triangleHeight8) / 2);\n        const totalArea8 = areaRect8 + areaTriangle8;\n        question = `Найдите площадь фигуры: прямоугольник ${rectWidth8}×${rectHeight8} см с треугольником высотой ${triangleHeight8} см наверху`;\n        translationKey = 'tasks.areas.composite_shape';\n        translationParams = { width: rectWidth8, height: rectHeight8, triHeight: triangleHeight8 };\n        answer = totalArea8.toString();\n        explanation = `Площадь прямоугольника = ${rectWidth8} × ${rectHeight8} = ${areaRect8} см², площадь треугольника = (${rectWidth8} × ${triangleHeight8}) / 2 = ${areaTriangle8} см², общая площадь = ${areaRect8} + ${areaTriangle8} = ${totalArea8} см²`;\n        explanationKey = 'tasks.areas.composite_shape_explanation';\n        explanationParams = { width: rectWidth8, height: rectHeight8, triHeight: triangleHeight8, rectArea: areaRect8, triArea: areaTriangle8, result: totalArea8 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 9: // Площадь через периметр (квадрат)\n        const perimeter9 = getRandomInt(20, 40);\n        const side9 = perimeter9 / 4;\n        const area9 = side9 * side9;\n        question = `Периметр квадрата равен ${perimeter9} см. Найдите его площадь`;\n        translationKey = 'tasks.areas.square_from_perimeter';\n        translationParams = { perimeter: perimeter9 };\n        answer = area9.toString();\n        explanation = `Сторона = периметр / 4 = ${perimeter9} / 4 = ${side9} см, площадь = ${side9} × ${side9} = ${area9} см²`;\n        explanationKey = 'tasks.areas.square_from_perimeter_explanation';\n        explanationParams = { perimeter: perimeter9, side: side9, result: area9 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answerFormats.cm2';\n        break;\n\n      case 10: // Сравнение площадей\n        const sideA10 = getRandomInt(4, 8);\n        const sideB10 = getRandomInt(5, 9);\n        const areaA10 = sideA10 * sideA10;\n        const areaB10 = sideB10 * sideB10;\n        const comparisonResult = areaA10 > areaB10 ? \"больше\" : areaA10 < areaB10 ? \"меньше\" : \"равны\";\n        question = `Сравните площади квадратов со сторонами ${sideA10} см и ${sideB10} см`;\n        translationKey = 'tasks.areas.compare_areas';\n        translationParams = { sideA: sideA10, sideB: sideB10 };\n        answer = comparisonResult;\n        explanation = `Площадь₁ = ${sideA10}² = ${areaA10} см², площадь₂ = ${sideB10}² = ${areaB10} см² → ${areaA10} ${comparisonResult} ${areaB10}`;\n        explanationKey = 'tasks.areas.compare_areas_explanation';\n        explanationParams = { side: sideA10, sideB: sideB10, areaA: areaA10, areaB: areaB10, result: comparisonResult };\n        answerFormat = \"больше/меньше/равно\";\n        formatKey = 'answerFormats.comparison';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"AAAA;AACA,KAAM,CAAAA,YAAY,CAAGA,CAACC,GAAG,CAAEC,GAAG,GAAKC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAIH,GAAG,CAAGD,GAAG,CAAG,CAAC,CAAC,CAAC,CAAGA,GAAG,CAEpF,MAAO,MAAM,CAAAK,cAAc,CAAGA,CAACC,KAAK,CAAEC,CAAC,GAAK,CAC1C,KAAM,CAAAC,KAAK,CAAG,EAAE,CAChB,KAAM,CAAAC,aAAa,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CAE/B,MAAOF,KAAK,CAACG,MAAM,CAAGL,KAAK,CAAE,CAC3B,GAAI,CAAAM,QAAQ,CAAEC,MAAM,CAAEC,WAAW,CAAEC,YAAY,CAC/C,GAAI,CAAAC,cAAc,CAAEC,iBAAiB,CAAEC,cAAc,CAAEC,iBAAiB,CAAEC,SAAS,CACnF,GAAI,CAAAC,IAAI,CAAGtB,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CAE9B,OAAQsB,IAAI,EACV,IAAK,EAAC,CAAE;AACN,KAAM,CAAAC,KAAK,CAAGvB,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACjC,KAAM,CAAAwB,KAAK,CAAGD,KAAK,CAAGA,KAAK,CAC3BV,QAAQ,yMAAAY,MAAA,CAA2CF,KAAK,iBAAK,CAC7DN,cAAc,CAAG,oBAAoB,CACrCC,iBAAiB,CAAG,CAAEQ,IAAI,CAAEH,KAAM,CAAC,CACnCT,MAAM,CAAGU,KAAK,CAACG,QAAQ,CAAC,CAAC,CACzBZ,WAAW,mJAAAU,MAAA,CAAoCF,KAAK,WAAAE,MAAA,CAAMF,KAAK,QAAAE,MAAA,CAAMD,KAAK,qBAAM,CAChFL,cAAc,CAAG,gCAAgC,CACjDC,iBAAiB,CAAG,CAAEM,IAAI,CAAEH,KAAK,CAAEK,MAAM,CAAEJ,KAAM,CAAC,CAClDR,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAQ,OAAO,CAAG7B,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACnC,KAAM,CAAA8B,MAAM,CAAG9B,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CAClC,KAAM,CAAA+B,KAAK,CAAGF,OAAO,CAAGC,MAAM,CAC9BjB,QAAQ,+KAAAY,MAAA,CAAqCI,OAAO,SAAAJ,MAAA,CAAIK,MAAM,iBAAK,CACnEb,cAAc,CAAG,uBAAuB,CACxCC,iBAAiB,CAAG,CAAEN,MAAM,CAAEiB,OAAO,CAAEG,KAAK,CAAEF,MAAO,CAAC,CACtDhB,MAAM,CAAGiB,KAAK,CAACJ,QAAQ,CAAC,CAAC,CACzBZ,WAAW,iNAAAU,MAAA,CAAgDI,OAAO,WAAAJ,MAAA,CAAMK,MAAM,QAAAL,MAAA,CAAMM,KAAK,qBAAM,CAC/FZ,cAAc,CAAG,mCAAmC,CACpDC,iBAAiB,CAAG,CAAER,MAAM,CAAEiB,OAAO,CAAEG,KAAK,CAAEF,MAAM,CAAEF,MAAM,CAAEG,KAAM,CAAC,CACrEf,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAY,KAAK,CAAGjC,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACjC,KAAM,CAAAkC,OAAO,CAAGlC,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACnC,KAAM,CAAAmC,KAAK,CAAGhC,IAAI,CAACiC,KAAK,CAAEH,KAAK,CAAGC,OAAO,CAAI,CAAC,CAAC,CAC/CrB,QAAQ,uOAAAY,MAAA,CAAgDQ,KAAK,qEAAAR,MAAA,CAAiBS,OAAO,iBAAK,CAC1FjB,cAAc,CAAG,sBAAsB,CACvCC,iBAAiB,CAAG,CAAEmB,IAAI,CAAEJ,KAAK,CAAEK,MAAM,CAAEJ,OAAQ,CAAC,CACpDpB,MAAM,CAAGqB,KAAK,CAACR,QAAQ,CAAC,CAAC,CACzBZ,WAAW,oOAAAU,MAAA,CAAyDQ,KAAK,WAAAR,MAAA,CAAMS,OAAO,aAAAT,MAAA,CAAWU,KAAK,qBAAM,CAC5GhB,cAAc,CAAG,kCAAkC,CACnDC,iBAAiB,CAAG,CAAEiB,IAAI,CAAEJ,KAAK,CAAEK,MAAM,CAAEJ,OAAO,CAAEN,MAAM,CAAEO,KAAM,CAAC,CACnEnB,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAkB,OAAO,CAAGvC,YAAY,CAAC,CAAC,CAAE,CAAC,CAAC,CAClC,KAAM,CAAAwC,KAAK,CAAGrC,IAAI,CAACiC,KAAK,CAAC,IAAI,CAAGG,OAAO,CAAGA,OAAO,CAAC,CAClD1B,QAAQ,0KAAAY,MAAA,CAAqCc,OAAO,oCAAc,CAClEtB,cAAc,CAAG,oBAAoB,CACrCC,iBAAiB,CAAG,CAAEuB,MAAM,CAAEF,OAAQ,CAAC,CACvCzB,MAAM,CAAG0B,KAAK,CAACb,QAAQ,CAAC,CAAC,CACzBZ,WAAW,iJAAAU,MAAA,CAA2Cc,OAAO,YAAAd,MAAA,CAAOe,KAAK,qBAAM,CAC/ErB,cAAc,CAAG,gCAAgC,CACjDC,iBAAiB,CAAG,CAAEqB,MAAM,CAAEF,OAAO,CAAEX,MAAM,CAAEY,KAAM,CAAC,CACtDxB,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAqB,KAAK,CAAG1C,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACjC,KAAM,CAAA2C,OAAO,CAAG3C,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACnC,KAAM,CAAA4C,KAAK,CAAGF,KAAK,CAAGC,OAAO,CAC7B9B,QAAQ,yPAAAY,MAAA,CAAmDiB,KAAK,qEAAAjB,MAAA,CAAiBkB,OAAO,iBAAK,CAC7F1B,cAAc,CAAG,2BAA2B,CAC5CC,iBAAiB,CAAG,CAAEmB,IAAI,CAAEK,KAAK,CAAEJ,MAAM,CAAEK,OAAQ,CAAC,CACpD7B,MAAM,CAAG8B,KAAK,CAACjB,QAAQ,CAAC,CAAC,CACzBZ,WAAW,+OAAAU,MAAA,CAAqDiB,KAAK,WAAAjB,MAAA,CAAMkB,OAAO,QAAAlB,MAAA,CAAMmB,KAAK,qBAAM,CACnGzB,cAAc,CAAG,uCAAuC,CACxDC,iBAAiB,CAAG,CAAEiB,IAAI,CAAEK,KAAK,CAAEJ,MAAM,CAAEK,OAAO,CAAEf,MAAM,CAAEgB,KAAM,CAAC,CACnE5B,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAwB,WAAW,CAAG7C,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACvC,KAAM,CAAA8C,WAAW,CAAG9C,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACvC,KAAM,CAAA+C,KAAK,CAAG5C,IAAI,CAACiC,KAAK,CAAES,WAAW,CAAGC,WAAW,CAAI,CAAC,CAAC,CACzDjC,QAAQ,mMAAAY,MAAA,CAA0CoB,WAAW,0BAAApB,MAAA,CAASqB,WAAW,iBAAK,CACtF7B,cAAc,CAAG,qBAAqB,CACtCC,iBAAiB,CAAG,CAAE8B,SAAS,CAAEH,WAAW,CAAEI,SAAS,CAAEH,WAAY,CAAC,CACtEhC,MAAM,CAAGiC,KAAK,CAACpB,QAAQ,CAAC,CAAC,CACzBZ,WAAW,wNAAAU,MAAA,CAAuDoB,WAAW,WAAApB,MAAA,CAAMqB,WAAW,aAAArB,MAAA,CAAWsB,KAAK,qBAAM,CACpH5B,cAAc,CAAG,iCAAiC,CAClDC,iBAAiB,CAAG,CAAE4B,SAAS,CAAEH,WAAW,CAAEI,SAAS,CAAEH,WAAW,CAAElB,MAAM,CAAEmB,KAAM,CAAC,CACrF/B,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAA6B,OAAO,CAAGlD,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACnC,KAAM,CAAAmD,OAAO,CAAGnD,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACnC,KAAM,CAAAoD,OAAO,CAAGpD,YAAY,CAAC,CAAC,CAAE,CAAC,CAAC,CAClC,KAAM,CAAAqD,KAAK,CAAGlD,IAAI,CAACiC,KAAK,CAAE,CAACc,OAAO,CAAGC,OAAO,EAAI,CAAC,CAAIC,OAAO,CAAC,CAC7DvC,QAAQ,qNAAAY,MAAA,CAA6CyB,OAAO,0BAAAzB,MAAA,CAAS0B,OAAO,qEAAA1B,MAAA,CAAiB2B,OAAO,iBAAK,CACzGnC,cAAc,CAAG,uBAAuB,CACxCC,iBAAiB,CAAG,CAAEoC,KAAK,CAAEJ,OAAO,CAAEK,KAAK,CAAEJ,OAAO,CAAEb,MAAM,CAAEc,OAAQ,CAAC,CACvEtC,MAAM,CAAGuC,KAAK,CAAC1B,QAAQ,CAAC,CAAC,CACzBZ,WAAW,iRAAAU,MAAA,CAAmEyB,OAAO,QAAAzB,MAAA,CAAM0B,OAAO,gBAAA1B,MAAA,CAAW2B,OAAO,QAAA3B,MAAA,CAAM4B,KAAK,qBAAM,CACrIlC,cAAc,CAAG,mCAAmC,CACpDC,iBAAiB,CAAG,CAAEkC,KAAK,CAAEJ,OAAO,CAAEK,KAAK,CAAEJ,OAAO,CAAEb,MAAM,CAAEc,OAAO,CAAExB,MAAM,CAAEyB,KAAM,CAAC,CACtFrC,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAmC,UAAU,CAAGxD,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CACtC,KAAM,CAAAyD,WAAW,CAAGzD,YAAY,CAAC,CAAC,CAAE,CAAC,CAAC,CACtC,KAAM,CAAA0D,eAAe,CAAG1D,YAAY,CAAC,CAAC,CAAE,CAAC,CAAC,CAC1C,KAAM,CAAA2D,SAAS,CAAGH,UAAU,CAAGC,WAAW,CAC1C,KAAM,CAAAG,aAAa,CAAGzD,IAAI,CAACiC,KAAK,CAAEoB,UAAU,CAAGE,eAAe,CAAI,CAAC,CAAC,CACpE,KAAM,CAAAG,UAAU,CAAGF,SAAS,CAAGC,aAAa,CAC5C/C,QAAQ,+MAAAY,MAAA,CAA4C+B,UAAU,SAAA/B,MAAA,CAAIgC,WAAW,oJAAAhC,MAAA,CAA+BiC,eAAe,4DAAa,CACxIzC,cAAc,CAAG,6BAA6B,CAC9CC,iBAAiB,CAAG,CAAEc,KAAK,CAAEwB,UAAU,CAAElB,MAAM,CAAEmB,WAAW,CAAEK,SAAS,CAAEJ,eAAgB,CAAC,CAC1F5C,MAAM,CAAG+C,UAAU,CAAClC,QAAQ,CAAC,CAAC,CAC9BZ,WAAW,sIAAAU,MAAA,CAA+B+B,UAAU,WAAA/B,MAAA,CAAMgC,WAAW,QAAAhC,MAAA,CAAMkC,SAAS,+IAAAlC,MAAA,CAAiC+B,UAAU,WAAA/B,MAAA,CAAMiC,eAAe,aAAAjC,MAAA,CAAWmC,aAAa,oGAAAnC,MAAA,CAAyBkC,SAAS,QAAAlC,MAAA,CAAMmC,aAAa,QAAAnC,MAAA,CAAMoC,UAAU,qBAAM,CACvP1C,cAAc,CAAG,yCAAyC,CAC1DC,iBAAiB,CAAG,CAAEY,KAAK,CAAEwB,UAAU,CAAElB,MAAM,CAAEmB,WAAW,CAAEK,SAAS,CAAEJ,eAAe,CAAEK,QAAQ,CAAEJ,SAAS,CAAEK,OAAO,CAAEJ,aAAa,CAAEhC,MAAM,CAAEiC,UAAW,CAAC,CAC3J7C,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAA4C,UAAU,CAAGjE,YAAY,CAAC,EAAE,CAAE,EAAE,CAAC,CACvC,KAAM,CAAAkE,KAAK,CAAGD,UAAU,CAAG,CAAC,CAC5B,KAAM,CAAAE,KAAK,CAAGD,KAAK,CAAGA,KAAK,CAC3BrD,QAAQ,qIAAAY,MAAA,CAA8BwC,UAAU,2HAA0B,CAC1EhD,cAAc,CAAG,mCAAmC,CACpDC,iBAAiB,CAAG,CAAEkD,SAAS,CAAEH,UAAW,CAAC,CAC7CnD,MAAM,CAAGqD,KAAK,CAACxC,QAAQ,CAAC,CAAC,CACzBZ,WAAW,wGAAAU,MAAA,CAA+BwC,UAAU,YAAAxC,MAAA,CAAUyC,KAAK,iEAAAzC,MAAA,CAAkByC,KAAK,WAAAzC,MAAA,CAAMyC,KAAK,QAAAzC,MAAA,CAAM0C,KAAK,qBAAM,CACtHhD,cAAc,CAAG,+CAA+C,CAChEC,iBAAiB,CAAG,CAAEgD,SAAS,CAAEH,UAAU,CAAEvC,IAAI,CAAEwC,KAAK,CAAEtC,MAAM,CAAEuC,KAAM,CAAC,CACzEnD,YAAY,CAAG,eAAe,CAC9BK,SAAS,CAAG,mBAAmB,CAC/B,MAEF,IAAK,GAAE,CAAE;AACP,KAAM,CAAAgD,OAAO,CAAGrE,YAAY,CAAC,CAAC,CAAE,CAAC,CAAC,CAClC,KAAM,CAAAsE,OAAO,CAAGtE,YAAY,CAAC,CAAC,CAAE,CAAC,CAAC,CAClC,KAAM,CAAAuE,OAAO,CAAGF,OAAO,CAAGA,OAAO,CACjC,KAAM,CAAAG,OAAO,CAAGF,OAAO,CAAGA,OAAO,CACjC,KAAM,CAAAG,gBAAgB,CAAGF,OAAO,CAAGC,OAAO,CAAG,QAAQ,CAAGD,OAAO,CAAGC,OAAO,CAAG,QAAQ,CAAG,OAAO,CAC9F3D,QAAQ,2NAAAY,MAAA,CAA8C4C,OAAO,0BAAA5C,MAAA,CAAS6C,OAAO,iBAAK,CAClFrD,cAAc,CAAG,2BAA2B,CAC5CC,iBAAiB,CAAG,CAAEwD,KAAK,CAAEL,OAAO,CAAEM,KAAK,CAAEL,OAAQ,CAAC,CACtDxD,MAAM,CAAG2D,gBAAgB,CACzB1D,WAAW,uDAAAU,MAAA,CAAiB4C,OAAO,YAAA5C,MAAA,CAAO8C,OAAO,2EAAA9C,MAAA,CAAoB6C,OAAO,YAAA7C,MAAA,CAAO+C,OAAO,8BAAA/C,MAAA,CAAU8C,OAAO,MAAA9C,MAAA,CAAIgD,gBAAgB,MAAAhD,MAAA,CAAI+C,OAAO,CAAE,CAC5IrD,cAAc,CAAG,uCAAuC,CACxDC,iBAAiB,CAAG,CAAEM,IAAI,CAAE2C,OAAO,CAAEM,KAAK,CAAEL,OAAO,CAAEM,KAAK,CAAEL,OAAO,CAAEM,KAAK,CAAEL,OAAO,CAAE5C,MAAM,CAAE6C,gBAAiB,CAAC,CAC/GzD,YAAY,CAAG,qBAAqB,CACpCK,SAAS,CAAG,0BAA0B,CACtC,MAEF,QACEC,IAAI,CAAGtB,YAAY,CAAC,CAAC,CAAE,EAAE,CAAC,CAC1B,SACJ,CAEA,GAAI,CAACU,aAAa,CAACoE,GAAG,CAACjE,QAAQ,CAAC,CAAE,CAChCH,aAAa,CAACqE,GAAG,CAAClE,QAAQ,CAAC,CAC3BJ,KAAK,CAACuE,IAAI,CAAC,CACTnE,QAAQ,CACRC,MAAM,CACNC,WAAW,CACXC,YAAY,CACZC,cAAc,CACdC,iBAAiB,CACjBC,cAAc,CACdC,iBAAiB,CACjBC,SACF,CAAC,CAAC,CACJ,CACF,CACA,MAAO,CAAAZ,KAAK,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}