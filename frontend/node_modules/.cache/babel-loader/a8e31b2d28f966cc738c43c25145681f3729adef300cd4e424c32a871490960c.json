{"ast":null,"code":"// day5-ratios.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nexport const ratiosGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n    switch (type) {\n      case 1:\n        // Простое отношение\n        const a1 = getRandomInt(2, 8);\n        const b1 = getRandomInt(2, 8);\n        question = `Запишите отношение ${a1} к ${b1}`;\n        translationKey = 'tasks.ratios.simple_ratio';\n        translationParams = {\n          a: a1,\n          b: b1\n        };\n        answer = `${a1}:${b1}`;\n        explanation = `Отношение = ${a1}:${b1}`;\n        explanationKey = 'tasks.ratios.simple_ratio_explanation';\n        explanationParams = {\n          a: a1,\n          b: b1\n        };\n        answerFormat = \"отношение (a:b)\";\n        formatKey = 'answerFormats.ratio';\n        break;\n      case 2:\n        // Упрощение отношения\n        const a2 = getRandomInt(4, 12) * 2;\n        const b2 = getRandomInt(4, 12) * 2;\n        const gcd2 = (x, y) => y === 0 ? x : gcd2(y, x % y);\n        const divisor2 = gcd2(a2, b2);\n        const simplifiedA = a2 / divisor2;\n        const simplifiedB = b2 / divisor2;\n        question = `Упростите отношение ${a2}:${b2}`;\n        translationKey = 'tasks.ratios.simplify_ratio';\n        translationParams = {\n          a: a2,\n          b: b2\n        };\n        answer = `${simplifiedA}:${simplifiedB}`;\n        explanation = `Делим на ${divisor2}: ${a2}:${b2} = ${answer}`;\n        explanationKey = 'tasks.ratios.simplify_ratio_explanation';\n        explanationParams = {\n          a: a2,\n          b: b2,\n          divisor: divisor2,\n          result: answer\n        };\n        answerFormat = \"отношение (a:b)\";\n        formatKey = 'answerFormats.ratio';\n        break;\n      case 3:\n        // Пропорция: нахождение x\n        const a3 = getRandomInt(2, 6);\n        const b3 = getRandomInt(2, 6);\n        const c3 = getRandomInt(2, 8);\n        const x3 = b3 * c3 / a3;\n        question = `Найдите x: ${a3}/${b3} = ${c3}/x`;\n        translationKey = 'tasks.ratios.find_proportion';\n        translationParams = {\n          a: a3,\n          b: b3,\n          c: c3\n        };\n        answer = x3.toString();\n        explanation = `x = (${b3} × ${c3}) / ${a3} = ${x3}`;\n        explanationKey = 'tasks.ratios.find_proportion_explanation';\n        explanationParams = {\n          a: a3,\n          b: b3,\n          c: c3,\n          result: x3\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 4:\n        // Деление в данном отношении\n        const total4 = getRandomInt(30, 60);\n        const ratioA4 = getRandomInt(2, 5);\n        const ratioB4 = getRandomInt(2, 5);\n        const partA4 = Math.round(total4 * ratioA4 / (ratioA4 + ratioB4));\n        const partB4 = Math.round(total4 * ratioB4 / (ratioA4 + ratioB4));\n        question = `Разделите ${total4} в отношении ${ratioA4}:${ratioB4}`;\n        translationKey = 'tasks.ratios.divide_in_ratio';\n        translationParams = {\n          total: total4,\n          a: ratioA4,\n          b: ratioB4\n        };\n        answer = `${partA4}:${partB4}`;\n        explanation = `${total4} / (${ratioA4} + ${ratioB4}) = ${total4 / (ratioA4 + ratioB4)}, части: ${partA4} и ${partB4}`;\n        explanationKey = 'tasks.ratios.divide_in_ratio_explanation';\n        explanationParams = {\n          total: total4,\n          a: ratioA4,\n          b: ratioB4,\n          unit: total4 / (ratioA4 + ratioB4),\n          result: answer\n        };\n        answerFormat = \"отношение (a:b)\";\n        formatKey = 'answerFormats.ratio';\n        break;\n      case 5:\n        // Масштаб\n        const distance5 = getRandomInt(10, 50);\n        const scale5 = getRandomInt(2, 5);\n        const realDistance5 = distance5 * scale5;\n        question = `По карте масштаба 1:${scale5} расстояние ${distance5} см. Найдите реальное расстояние.`;\n        translationKey = 'tasks.ratios.scale';\n        translationParams = {\n          distance: distance5,\n          scale: scale5\n        };\n        answer = realDistance5.toString();\n        explanation = `Реальное расстояние = ${distance5} × ${scale5} = ${realDistance5} см`;\n        explanationKey = 'tasks.ratios.scale_explanation';\n        explanationParams = {\n          distance: distance5,\n          scale: scale5,\n          result: realDistance5\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 6:\n        // Процентное отношение\n        const part6 = getRandomInt(5, 20);\n        const whole6 = getRandomInt(30, 60);\n        const percentage6 = Math.round(part6 / whole6 * 100);\n        question = `Какой процент составляет ${part6} от ${whole6}?`;\n        translationKey = 'tasks.ratios.percentage_ratio';\n        translationParams = {\n          part: part6,\n          whole: whole6\n        };\n        answer = percentage6.toString();\n        explanation = `(${part6} / ${whole6}) × 100 = ${percentage6}%`;\n        explanationKey = 'tasks.ratios.percentage_ratio_explanation';\n        explanationParams = {\n          part: part6,\n          whole: whole6,\n          result: percentage6\n        };\n        answerFormat = \"процент\";\n        formatKey = 'answerFormats.percentage';\n        break;\n      case 7:\n        // Обратное отношение\n        const a7 = getRandomInt(2, 6);\n        const b7 = getRandomInt(2, 6);\n        question = `Запишите обратное отношение к ${a7}:${b7}`;\n        translationKey = 'tasks.ratios.inverse_ratio';\n        translationParams = {\n          a: a7,\n          b: b7\n        };\n        answer = `${b7}:${a7}`;\n        explanation = `Обратное отношение = ${b7}:${a7}`;\n        explanationKey = 'tasks.ratios.inverse_ratio_explanation';\n        explanationParams = {\n          a: a7,\n          b: b7\n        };\n        answerFormat = \"отношение (a:b)\";\n        formatKey = 'answerFormats.ratio';\n        break;\n      case 8:\n        // Отношение трех чисел\n        const a8 = getRandomInt(2, 5);\n        const b8 = getRandomInt(2, 5);\n        const c8 = getRandomInt(2, 5);\n        question = `Запишите отношение ${a8} : ${b8} : ${c8}`;\n        translationKey = 'tasks.ratios.triple_ratio';\n        translationParams = {\n          a: a8,\n          b: b8,\n          c: c8\n        };\n        answer = `${a8}:${b8}:${c8}`;\n        explanation = `Отношение = ${a8}:${b8}:${c8}`;\n        explanationKey = 'tasks.ratios.triple_ratio_explanation';\n        explanationParams = {\n          a: a8,\n          b: b8,\n          c: c8\n        };\n        answerFormat = \"отношение (a:b:c)\";\n        formatKey = 'answerFormats.ratio';\n        break;\n      case 9:\n        // Пропорция из текста\n        const ratio9 = getRandomInt(2, 4);\n        const boys9 = getRandomInt(10, 20);\n        const girls9 = boys9 * ratio9;\n        question = `Мальчиков ${boys9}, девочек в ${ratio9} раза больше. Найдите отношение мальчиков к девочкам.`;\n        translationKey = 'tasks.ratios.word_problem';\n        translationParams = {\n          boys: boys9,\n          ratio: ratio9\n        };\n        answer = `1:${ratio9}`;\n        explanation = `Девочек = ${boys9} × ${ratio9} = ${girls9}, отношение = 1:${ratio9}`;\n        explanationKey = 'tasks.ratios.word_problem_explanation';\n        explanationParams = {\n          boys: boys9,\n          girls: girls9,\n          ratio: ratio9\n        };\n        answerFormat = \"отношение (a:b)\";\n        formatKey = 'answerFormats.ratio';\n        break;\n      case 10:\n        // Сравнение отношений\n        const a10 = getRandomInt(2, 5);\n        const b10 = getRandomInt(2, 5);\n        const c10 = getRandomInt(2, 5);\n        const d10 = getRandomInt(2, 5);\n        const ratio1 = a10 / b10;\n        const ratio2 = c10 / d10;\n        const comparisonResult = ratio1 > ratio2 ? \"больше\" : ratio1 < ratio2 ? \"меньше\" : \"равны\";\n        question = `Сравните отношения ${a10}:${b10} и ${c10}:${d10}`;\n        translationKey = 'tasks.ratios.compare_ratios';\n        translationParams = {\n          a: a10,\n          b: b10,\n          c: c10,\n          d: d10\n        };\n        answer = comparisonResult;\n        explanation = `${a10}/${b10} = ${ratio1.toFixed(2)}, ${c10}/${d10} = ${ratio2.toFixed(2)} - ${comparisonResult}`;\n        explanationKey = 'tasks.ratios.compare_ratios_explanation';\n        explanationParams = {\n          a: a10,\n          b: b10,\n          c: c10,\n          d: d10,\n          value1: ratio1.toFixed(2),\n          value2: ratio2.toFixed(2),\n          result: comparisonResult\n        };\n        answerFormat = \"больше/меньше/равно\";\n        formatKey = 'answerFormats.comparison';\n        break;\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({\n        question,\n        answer,\n        explanation,\n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey,\n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","ratiosGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","a1","b1","a","b","a2","b2","gcd2","x","y","divisor2","simplifiedA","simplifiedB","divisor","result","a3","b3","c3","x3","c","toString","total4","ratioA4","ratioB4","partA4","round","partB4","total","unit","distance5","scale5","realDistance5","distance","scale","part6","whole6","percentage6","part","whole","a7","b7","a8","b8","c8","ratio9","boys9","girls9","boys","ratio","girls","a10","b10","c10","d10","ratio1","ratio2","comparisonResult","d","toFixed","value1","value2","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day5-ratios.js"],"sourcesContent":["// day5-ratios.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const ratiosGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Простое отношение\n        const a1 = getRandomInt(2, 8);\n        const b1 = getRandomInt(2, 8);\n        question = `Запишите отношение ${a1} к ${b1}`;\n        translationKey = 'tasks.ratios.simple_ratio';\n        translationParams = { a: a1, b: b1 };\n        answer = `${a1}:${b1}`;\n        explanation = `Отношение = ${a1}:${b1}`;\n        explanationKey = 'tasks.ratios.simple_ratio_explanation';\n        explanationParams = { a: a1, b: b1 };\n        answerFormat = \"отношение (a:b)\";\n        formatKey = 'answerFormats.ratio';\n        break;\n\n      case 2: // Упрощение отношения\n        const a2 = getRandomInt(4, 12) * 2;\n        const b2 = getRandomInt(4, 12) * 2;\n        const gcd2 = (x, y) => y === 0 ? x : gcd2(y, x % y);\n        const divisor2 = gcd2(a2, b2);\n        const simplifiedA = a2 / divisor2;\n        const simplifiedB = b2 / divisor2;\n        question = `Упростите отношение ${a2}:${b2}`;\n        translationKey = 'tasks.ratios.simplify_ratio';\n        translationParams = { a: a2, b: b2 };\n        answer = `${simplifiedA}:${simplifiedB}`;\n        explanation = `Делим на ${divisor2}: ${a2}:${b2} = ${answer}`;\n        explanationKey = 'tasks.ratios.simplify_ratio_explanation';\n        explanationParams = { a: a2, b: b2, divisor: divisor2, result: answer };\n        answerFormat = \"отношение (a:b)\";\n        formatKey = 'answerFormats.ratio';\n        break;\n\n      case 3: // Пропорция: нахождение x\n        const a3 = getRandomInt(2, 6);\n        const b3 = getRandomInt(2, 6);\n        const c3 = getRandomInt(2, 8);\n        const x3 = (b3 * c3) / a3;\n        question = `Найдите x: ${a3}/${b3} = ${c3}/x`;\n        translationKey = 'tasks.ratios.find_proportion';\n        translationParams = { a: a3, b: b3, c: c3 };\n        answer = x3.toString();\n        explanation = `x = (${b3} × ${c3}) / ${a3} = ${x3}`;\n        explanationKey = 'tasks.ratios.find_proportion_explanation';\n        explanationParams = { a: a3, b: b3, c: c3, result: x3 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 4: // Деление в данном отношении\n        const total4 = getRandomInt(30, 60);\n        const ratioA4 = getRandomInt(2, 5);\n        const ratioB4 = getRandomInt(2, 5);\n        const partA4 = Math.round((total4 * ratioA4) / (ratioA4 + ratioB4));\n        const partB4 = Math.round((total4 * ratioB4) / (ratioA4 + ratioB4));\n        question = `Разделите ${total4} в отношении ${ratioA4}:${ratioB4}`;\n        translationKey = 'tasks.ratios.divide_in_ratio';\n        translationParams = { total: total4, a: ratioA4, b: ratioB4 };\n        answer = `${partA4}:${partB4}`;\n        explanation = `${total4} / (${ratioA4} + ${ratioB4}) = ${total4/(ratioA4+ratioB4)}, части: ${partA4} и ${partB4}`;\n        explanationKey = 'tasks.ratios.divide_in_ratio_explanation';\n        explanationParams = { \n          total: total4, \n          a: ratioA4, \n          b: ratioB4, \n          unit: total4/(ratioA4+ratioB4),\n          result: answer\n        };\n        answerFormat = \"отношение (a:b)\";\n        formatKey = 'answerFormats.ratio';\n        break;\n\n      case 5: // Масштаб\n        const distance5 = getRandomInt(10, 50);\n        const scale5 = getRandomInt(2, 5);\n        const realDistance5 = distance5 * scale5;\n        question = `По карте масштаба 1:${scale5} расстояние ${distance5} см. Найдите реальное расстояние.`;\n        translationKey = 'tasks.ratios.scale';\n        translationParams = { distance: distance5, scale: scale5 };\n        answer = realDistance5.toString();\n        explanation = `Реальное расстояние = ${distance5} × ${scale5} = ${realDistance5} см`;\n        explanationKey = 'tasks.ratios.scale_explanation';\n        explanationParams = { distance: distance5, scale: scale5, result: realDistance5 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 6: // Процентное отношение\n        const part6 = getRandomInt(5, 20);\n        const whole6 = getRandomInt(30, 60);\n        const percentage6 = Math.round((part6 / whole6) * 100);\n        question = `Какой процент составляет ${part6} от ${whole6}?`;\n        translationKey = 'tasks.ratios.percentage_ratio';\n        translationParams = { part: part6, whole: whole6 };\n        answer = percentage6.toString();\n        explanation = `(${part6} / ${whole6}) × 100 = ${percentage6}%`;\n        explanationKey = 'tasks.ratios.percentage_ratio_explanation';\n        explanationParams = { part: part6, whole: whole6, result: percentage6 };\n        answerFormat = \"процент\";\n        formatKey = 'answerFormats.percentage';\n        break;\n\n      case 7: // Обратное отношение\n        const a7 = getRandomInt(2, 6);\n        const b7 = getRandomInt(2, 6);\n        question = `Запишите обратное отношение к ${a7}:${b7}`;\n        translationKey = 'tasks.ratios.inverse_ratio';\n        translationParams = { a: a7, b: b7 };\n        answer = `${b7}:${a7}`;\n        explanation = `Обратное отношение = ${b7}:${a7}`;\n        explanationKey = 'tasks.ratios.inverse_ratio_explanation';\n        explanationParams = { a: a7, b: b7 };\n        answerFormat = \"отношение (a:b)\";\n        formatKey = 'answerFormats.ratio';\n        break;\n\n      case 8: // Отношение трех чисел\n        const a8 = getRandomInt(2, 5);\n        const b8 = getRandomInt(2, 5);\n        const c8 = getRandomInt(2, 5);\n        question = `Запишите отношение ${a8} : ${b8} : ${c8}`;\n        translationKey = 'tasks.ratios.triple_ratio';\n        translationParams = { a: a8, b: b8, c: c8 };\n        answer = `${a8}:${b8}:${c8}`;\n        explanation = `Отношение = ${a8}:${b8}:${c8}`;\n        explanationKey = 'tasks.ratios.triple_ratio_explanation';\n        explanationParams = { a: a8, b: b8, c: c8 };\n        answerFormat = \"отношение (a:b:c)\";\n        formatKey = 'answerFormats.ratio';\n        break;\n\n      case 9: // Пропорция из текста\n        const ratio9 = getRandomInt(2, 4);\n        const boys9 = getRandomInt(10, 20);\n        const girls9 = boys9 * ratio9;\n        question = `Мальчиков ${boys9}, девочек в ${ratio9} раза больше. Найдите отношение мальчиков к девочкам.`;\n        translationKey = 'tasks.ratios.word_problem';\n        translationParams = { boys: boys9, ratio: ratio9 };\n        answer = `1:${ratio9}`;\n        explanation = `Девочек = ${boys9} × ${ratio9} = ${girls9}, отношение = 1:${ratio9}`;\n        explanationKey = 'tasks.ratios.word_problem_explanation';\n        explanationParams = { boys: boys9, girls: girls9, ratio: ratio9 };\n        answerFormat = \"отношение (a:b)\";\n        formatKey = 'answerFormats.ratio';\n        break;\n\n      case 10: // Сравнение отношений\n        const a10 = getRandomInt(2, 5);\n        const b10 = getRandomInt(2, 5);\n        const c10 = getRandomInt(2, 5);\n        const d10 = getRandomInt(2, 5);\n        const ratio1 = a10 / b10;\n        const ratio2 = c10 / d10;\n        const comparisonResult = ratio1 > ratio2 ? \"больше\" : ratio1 < ratio2 ? \"меньше\" : \"равны\";\n        question = `Сравните отношения ${a10}:${b10} и ${c10}:${d10}`;\n        translationKey = 'tasks.ratios.compare_ratios';\n        translationParams = { a: a10, b: b10, c: c10, d: d10 };\n        answer = comparisonResult;\n        explanation = `${a10}/${b10} = ${ratio1.toFixed(2)}, ${c10}/${d10} = ${ratio2.toFixed(2)} - ${comparisonResult}`;\n        explanationKey = 'tasks.ratios.compare_ratios_explanation';\n        explanationParams = { \n          a: a10, b: b10, c: c10, d: d10, \n          value1: ratio1.toFixed(2), \n          value2: ratio2.toFixed(2),\n          result: comparisonResult\n        };\n        answerFormat = \"больше/меньше/равно\";\n        formatKey = 'answerFormats.comparison';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAKC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;AAEpF,OAAO,MAAMK,eAAe,GAAGA,CAACC,KAAK,EAAEC,CAAC,KAAK;EAC3C,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC;EAE/B,OAAOF,KAAK,CAACG,MAAM,GAAGL,KAAK,EAAE;IAC3B,IAAIM,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,YAAY;IAC/C,IAAIC,cAAc,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,SAAS;IACnF,IAAIC,IAAI,GAAGtB,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;IAE9B,QAAQsB,IAAI;MACV,KAAK,CAAC;QAAE;QACN,MAAMC,EAAE,GAAGvB,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAMwB,EAAE,GAAGxB,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7Ba,QAAQ,GAAG,sBAAsBU,EAAE,MAAMC,EAAE,EAAE;QAC7CP,cAAc,GAAG,2BAA2B;QAC5CC,iBAAiB,GAAG;UAAEO,CAAC,EAAEF,EAAE;UAAEG,CAAC,EAAEF;QAAG,CAAC;QACpCV,MAAM,GAAG,GAAGS,EAAE,IAAIC,EAAE,EAAE;QACtBT,WAAW,GAAG,eAAeQ,EAAE,IAAIC,EAAE,EAAE;QACvCL,cAAc,GAAG,uCAAuC;QACxDC,iBAAiB,GAAG;UAAEK,CAAC,EAAEF,EAAE;UAAEG,CAAC,EAAEF;QAAG,CAAC;QACpCR,YAAY,GAAG,iBAAiB;QAChCK,SAAS,GAAG,qBAAqB;QACjC;MAEF,KAAK,CAAC;QAAE;QACN,MAAMM,EAAE,GAAG3B,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;QAClC,MAAM4B,EAAE,GAAG5B,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;QAClC,MAAM6B,IAAI,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAK,CAAC,GAAGD,CAAC,GAAGD,IAAI,CAACE,CAAC,EAAED,CAAC,GAAGC,CAAC,CAAC;QACnD,MAAMC,QAAQ,GAAGH,IAAI,CAACF,EAAE,EAAEC,EAAE,CAAC;QAC7B,MAAMK,WAAW,GAAGN,EAAE,GAAGK,QAAQ;QACjC,MAAME,WAAW,GAAGN,EAAE,GAAGI,QAAQ;QACjCnB,QAAQ,GAAG,uBAAuBc,EAAE,IAAIC,EAAE,EAAE;QAC5CX,cAAc,GAAG,6BAA6B;QAC9CC,iBAAiB,GAAG;UAAEO,CAAC,EAAEE,EAAE;UAAED,CAAC,EAAEE;QAAG,CAAC;QACpCd,MAAM,GAAG,GAAGmB,WAAW,IAAIC,WAAW,EAAE;QACxCnB,WAAW,GAAG,YAAYiB,QAAQ,KAAKL,EAAE,IAAIC,EAAE,MAAMd,MAAM,EAAE;QAC7DK,cAAc,GAAG,yCAAyC;QAC1DC,iBAAiB,GAAG;UAAEK,CAAC,EAAEE,EAAE;UAAED,CAAC,EAAEE,EAAE;UAAEO,OAAO,EAAEH,QAAQ;UAAEI,MAAM,EAAEtB;QAAO,CAAC;QACvEE,YAAY,GAAG,iBAAiB;QAChCK,SAAS,GAAG,qBAAqB;QACjC;MAEF,KAAK,CAAC;QAAE;QACN,MAAMgB,EAAE,GAAGrC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAMsC,EAAE,GAAGtC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAMuC,EAAE,GAAGvC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAMwC,EAAE,GAAIF,EAAE,GAAGC,EAAE,GAAIF,EAAE;QACzBxB,QAAQ,GAAG,cAAcwB,EAAE,IAAIC,EAAE,MAAMC,EAAE,IAAI;QAC7CtB,cAAc,GAAG,8BAA8B;QAC/CC,iBAAiB,GAAG;UAAEO,CAAC,EAAEY,EAAE;UAAEX,CAAC,EAAEY,EAAE;UAAEG,CAAC,EAAEF;QAAG,CAAC;QAC3CzB,MAAM,GAAG0B,EAAE,CAACE,QAAQ,CAAC,CAAC;QACtB3B,WAAW,GAAG,QAAQuB,EAAE,MAAMC,EAAE,OAAOF,EAAE,MAAMG,EAAE,EAAE;QACnDrB,cAAc,GAAG,0CAA0C;QAC3DC,iBAAiB,GAAG;UAAEK,CAAC,EAAEY,EAAE;UAAEX,CAAC,EAAEY,EAAE;UAAEG,CAAC,EAAEF,EAAE;UAAEH,MAAM,EAAEI;QAAG,CAAC;QACvDxB,YAAY,GAAG,OAAO;QACtBK,SAAS,GAAG,sBAAsB;QAClC;MAEF,KAAK,CAAC;QAAE;QACN,MAAMsB,MAAM,GAAG3C,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC;QACnC,MAAM4C,OAAO,GAAG5C,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAClC,MAAM6C,OAAO,GAAG7C,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAClC,MAAM8C,MAAM,GAAG3C,IAAI,CAAC4C,KAAK,CAAEJ,MAAM,GAAGC,OAAO,IAAKA,OAAO,GAAGC,OAAO,CAAC,CAAC;QACnE,MAAMG,MAAM,GAAG7C,IAAI,CAAC4C,KAAK,CAAEJ,MAAM,GAAGE,OAAO,IAAKD,OAAO,GAAGC,OAAO,CAAC,CAAC;QACnEhC,QAAQ,GAAG,aAAa8B,MAAM,gBAAgBC,OAAO,IAAIC,OAAO,EAAE;QAClE5B,cAAc,GAAG,8BAA8B;QAC/CC,iBAAiB,GAAG;UAAE+B,KAAK,EAAEN,MAAM;UAAElB,CAAC,EAAEmB,OAAO;UAAElB,CAAC,EAAEmB;QAAQ,CAAC;QAC7D/B,MAAM,GAAG,GAAGgC,MAAM,IAAIE,MAAM,EAAE;QAC9BjC,WAAW,GAAG,GAAG4B,MAAM,OAAOC,OAAO,MAAMC,OAAO,OAAOF,MAAM,IAAEC,OAAO,GAACC,OAAO,CAAC,YAAYC,MAAM,MAAME,MAAM,EAAE;QACjH7B,cAAc,GAAG,0CAA0C;QAC3DC,iBAAiB,GAAG;UAClB6B,KAAK,EAAEN,MAAM;UACblB,CAAC,EAAEmB,OAAO;UACVlB,CAAC,EAAEmB,OAAO;UACVK,IAAI,EAAEP,MAAM,IAAEC,OAAO,GAACC,OAAO,CAAC;UAC9BT,MAAM,EAAEtB;QACV,CAAC;QACDE,YAAY,GAAG,iBAAiB;QAChCK,SAAS,GAAG,qBAAqB;QACjC;MAEF,KAAK,CAAC;QAAE;QACN,MAAM8B,SAAS,GAAGnD,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC;QACtC,MAAMoD,MAAM,GAAGpD,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QACjC,MAAMqD,aAAa,GAAGF,SAAS,GAAGC,MAAM;QACxCvC,QAAQ,GAAG,uBAAuBuC,MAAM,eAAeD,SAAS,mCAAmC;QACnGlC,cAAc,GAAG,oBAAoB;QACrCC,iBAAiB,GAAG;UAAEoC,QAAQ,EAAEH,SAAS;UAAEI,KAAK,EAAEH;QAAO,CAAC;QAC1DtC,MAAM,GAAGuC,aAAa,CAACX,QAAQ,CAAC,CAAC;QACjC3B,WAAW,GAAG,yBAAyBoC,SAAS,MAAMC,MAAM,MAAMC,aAAa,KAAK;QACpFlC,cAAc,GAAG,gCAAgC;QACjDC,iBAAiB,GAAG;UAAEkC,QAAQ,EAAEH,SAAS;UAAEI,KAAK,EAAEH,MAAM;UAAEhB,MAAM,EAAEiB;QAAc,CAAC;QACjFrC,YAAY,GAAG,OAAO;QACtBK,SAAS,GAAG,sBAAsB;QAClC;MAEF,KAAK,CAAC;QAAE;QACN,MAAMmC,KAAK,GAAGxD,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QACjC,MAAMyD,MAAM,GAAGzD,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC;QACnC,MAAM0D,WAAW,GAAGvD,IAAI,CAAC4C,KAAK,CAAES,KAAK,GAAGC,MAAM,GAAI,GAAG,CAAC;QACtD5C,QAAQ,GAAG,4BAA4B2C,KAAK,OAAOC,MAAM,GAAG;QAC5DxC,cAAc,GAAG,+BAA+B;QAChDC,iBAAiB,GAAG;UAAEyC,IAAI,EAAEH,KAAK;UAAEI,KAAK,EAAEH;QAAO,CAAC;QAClD3C,MAAM,GAAG4C,WAAW,CAAChB,QAAQ,CAAC,CAAC;QAC/B3B,WAAW,GAAG,IAAIyC,KAAK,MAAMC,MAAM,aAAaC,WAAW,GAAG;QAC9DvC,cAAc,GAAG,2CAA2C;QAC5DC,iBAAiB,GAAG;UAAEuC,IAAI,EAAEH,KAAK;UAAEI,KAAK,EAAEH,MAAM;UAAErB,MAAM,EAAEsB;QAAY,CAAC;QACvE1C,YAAY,GAAG,SAAS;QACxBK,SAAS,GAAG,0BAA0B;QACtC;MAEF,KAAK,CAAC;QAAE;QACN,MAAMwC,EAAE,GAAG7D,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAM8D,EAAE,GAAG9D,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7Ba,QAAQ,GAAG,iCAAiCgD,EAAE,IAAIC,EAAE,EAAE;QACtD7C,cAAc,GAAG,4BAA4B;QAC7CC,iBAAiB,GAAG;UAAEO,CAAC,EAAEoC,EAAE;UAAEnC,CAAC,EAAEoC;QAAG,CAAC;QACpChD,MAAM,GAAG,GAAGgD,EAAE,IAAID,EAAE,EAAE;QACtB9C,WAAW,GAAG,wBAAwB+C,EAAE,IAAID,EAAE,EAAE;QAChD1C,cAAc,GAAG,wCAAwC;QACzDC,iBAAiB,GAAG;UAAEK,CAAC,EAAEoC,EAAE;UAAEnC,CAAC,EAAEoC;QAAG,CAAC;QACpC9C,YAAY,GAAG,iBAAiB;QAChCK,SAAS,GAAG,qBAAqB;QACjC;MAEF,KAAK,CAAC;QAAE;QACN,MAAM0C,EAAE,GAAG/D,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAMgE,EAAE,GAAGhE,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAMiE,EAAE,GAAGjE,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7Ba,QAAQ,GAAG,sBAAsBkD,EAAE,MAAMC,EAAE,MAAMC,EAAE,EAAE;QACrDhD,cAAc,GAAG,2BAA2B;QAC5CC,iBAAiB,GAAG;UAAEO,CAAC,EAAEsC,EAAE;UAAErC,CAAC,EAAEsC,EAAE;UAAEvB,CAAC,EAAEwB;QAAG,CAAC;QAC3CnD,MAAM,GAAG,GAAGiD,EAAE,IAAIC,EAAE,IAAIC,EAAE,EAAE;QAC5BlD,WAAW,GAAG,eAAegD,EAAE,IAAIC,EAAE,IAAIC,EAAE,EAAE;QAC7C9C,cAAc,GAAG,uCAAuC;QACxDC,iBAAiB,GAAG;UAAEK,CAAC,EAAEsC,EAAE;UAAErC,CAAC,EAAEsC,EAAE;UAAEvB,CAAC,EAAEwB;QAAG,CAAC;QAC3CjD,YAAY,GAAG,mBAAmB;QAClCK,SAAS,GAAG,qBAAqB;QACjC;MAEF,KAAK,CAAC;QAAE;QACN,MAAM6C,MAAM,GAAGlE,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QACjC,MAAMmE,KAAK,GAAGnE,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC;QAClC,MAAMoE,MAAM,GAAGD,KAAK,GAAGD,MAAM;QAC7BrD,QAAQ,GAAG,aAAasD,KAAK,eAAeD,MAAM,uDAAuD;QACzGjD,cAAc,GAAG,2BAA2B;QAC5CC,iBAAiB,GAAG;UAAEmD,IAAI,EAAEF,KAAK;UAAEG,KAAK,EAAEJ;QAAO,CAAC;QAClDpD,MAAM,GAAG,KAAKoD,MAAM,EAAE;QACtBnD,WAAW,GAAG,aAAaoD,KAAK,MAAMD,MAAM,MAAME,MAAM,mBAAmBF,MAAM,EAAE;QACnF/C,cAAc,GAAG,uCAAuC;QACxDC,iBAAiB,GAAG;UAAEiD,IAAI,EAAEF,KAAK;UAAEI,KAAK,EAAEH,MAAM;UAAEE,KAAK,EAAEJ;QAAO,CAAC;QACjElD,YAAY,GAAG,iBAAiB;QAChCK,SAAS,GAAG,qBAAqB;QACjC;MAEF,KAAK,EAAE;QAAE;QACP,MAAMmD,GAAG,GAAGxE,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAMyE,GAAG,GAAGzE,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM0E,GAAG,GAAG1E,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM2E,GAAG,GAAG3E,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM4E,MAAM,GAAGJ,GAAG,GAAGC,GAAG;QACxB,MAAMI,MAAM,GAAGH,GAAG,GAAGC,GAAG;QACxB,MAAMG,gBAAgB,GAAGF,MAAM,GAAGC,MAAM,GAAG,QAAQ,GAAGD,MAAM,GAAGC,MAAM,GAAG,QAAQ,GAAG,OAAO;QAC1FhE,QAAQ,GAAG,sBAAsB2D,GAAG,IAAIC,GAAG,MAAMC,GAAG,IAAIC,GAAG,EAAE;QAC7D1D,cAAc,GAAG,6BAA6B;QAC9CC,iBAAiB,GAAG;UAAEO,CAAC,EAAE+C,GAAG;UAAE9C,CAAC,EAAE+C,GAAG;UAAEhC,CAAC,EAAEiC,GAAG;UAAEK,CAAC,EAAEJ;QAAI,CAAC;QACtD7D,MAAM,GAAGgE,gBAAgB;QACzB/D,WAAW,GAAG,GAAGyD,GAAG,IAAIC,GAAG,MAAMG,MAAM,CAACI,OAAO,CAAC,CAAC,CAAC,KAAKN,GAAG,IAAIC,GAAG,MAAME,MAAM,CAACG,OAAO,CAAC,CAAC,CAAC,MAAMF,gBAAgB,EAAE;QAChH3D,cAAc,GAAG,yCAAyC;QAC1DC,iBAAiB,GAAG;UAClBK,CAAC,EAAE+C,GAAG;UAAE9C,CAAC,EAAE+C,GAAG;UAAEhC,CAAC,EAAEiC,GAAG;UAAEK,CAAC,EAAEJ,GAAG;UAC9BM,MAAM,EAAEL,MAAM,CAACI,OAAO,CAAC,CAAC,CAAC;UACzBE,MAAM,EAAEL,MAAM,CAACG,OAAO,CAAC,CAAC,CAAC;UACzB5C,MAAM,EAAE0C;QACV,CAAC;QACD9D,YAAY,GAAG,qBAAqB;QACpCK,SAAS,GAAG,0BAA0B;QACtC;MAEF;QACEC,IAAI,GAAGtB,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;QAC1B;IACJ;IAEA,IAAI,CAACU,aAAa,CAACyE,GAAG,CAACtE,QAAQ,CAAC,EAAE;MAChCH,aAAa,CAAC0E,GAAG,CAACvE,QAAQ,CAAC;MAC3BJ,KAAK,CAAC4E,IAAI,CAAC;QACTxE,QAAQ;QACRC,MAAM;QACNC,WAAW;QACXC,YAAY;QACZC,cAAc;QACdC,iBAAiB;QACjBC,cAAc;QACdC,iBAAiB;QACjBC;MACF,CAAC,CAAC;IACJ;EACF;EACA,OAAOZ,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}