{"ast":null,"code":"// day1-fractions.js\nconst getRandomInt=(min,max)=>Math.floor(Math.random()*(max-min+1))+min;// Генераторы задач день 1\nexport const fractionsGenerator=(count,t)=>{const tasks=[];const usedQuestions=new Set();while(tasks.length<count){let question,answer,explanation,answerFormat;let translationKey,translationParams,explanationKey,explanationParams,formatKey;let type=getRandomInt(1,10);switch(type){case 1:// Простые дроби\nconst num=getRandomInt(1,5);const den=getRandomInt(2,8);question=\"\\u0421\\u043E\\u043A\\u0440\\u0430\\u0442\\u0438\\u0442\\u0435 \\u0434\\u0440\\u043E\\u0431\\u044C: \".concat(num*2,\"/\").concat(den*2);translationKey='tasks.fractions.reduce';translationParams={numerator:num*2,denominator:den*2};answer=\"\".concat(num,\"/\").concat(den);explanation=\"\\u0414\\u0435\\u043B\\u0438\\u043C \\u0447\\u0438\\u0441\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C \\u0438 \\u0437\\u043D\\u0430\\u043C\\u0435\\u043D\\u0430\\u0442\\u0435\\u043B\\u044C \\u043D\\u0430 2: \".concat(num*2,\"/\").concat(den*2,\" = \").concat(num,\"/\").concat(den);explanationKey='tasks.fractions.reduce_explanation';explanationParams={numerator:num*2,denominator:den*2,result:\"\".concat(num,\"/\").concat(den)};answerFormat=\"дробь (например: 3/4)\";formatKey='answerFormats.fraction';break;case 2:// Проценты\nconst percent=getRandomInt(10,90);const number=getRandomInt(20,200);const result=Math.round(percent/100*number);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \".concat(percent,\"% \\u043E\\u0442 \\u0447\\u0438\\u0441\\u043B\\u0430 \").concat(number);translationKey='tasks.fractions.percentage_of';translationParams={percent,number};answer=result.toString();explanation=\"\".concat(percent,\"% \\u043E\\u0442 \").concat(number,\" = (\").concat(percent,\" \\xD7 \").concat(number,\") / 100 = \").concat(result);explanationKey='tasks.fractions.percentage_of_explanation';explanationParams={percent,number,result};answerFormat=\"число\";formatKey='answerFormats.number';break;case 3:// Сложение дробей\nconst a=getRandomInt(1,4);const b=getRandomInt(1,4);const sum=a+b;question=\"\\u0421\\u043B\\u043E\\u0436\\u0438\\u0442\\u0435 \\u0434\\u0440\\u043E\\u0431\\u0438: \".concat(a,\"/6 + \").concat(b,\"/6\");translationKey='tasks.fractions.addition';translationParams={a,b};answer=\"\".concat(sum,\"/6\");explanation=\"\\u041F\\u0440\\u0438 \\u043E\\u0434\\u0438\\u043D\\u0430\\u043A\\u043E\\u0432\\u044B\\u0445 \\u0437\\u043D\\u0430\\u043C\\u0435\\u043D\\u0430\\u0442\\u0435\\u043B\\u044F\\u0445 \\u0441\\u043A\\u043B\\u0430\\u0434\\u044B\\u0432\\u0430\\u0435\\u043C \\u0447\\u0438\\u0441\\u043B\\u0438\\u0442\\u0435\\u043B\\u0438: \".concat(a,\" + \").concat(b,\" = \").concat(sum);explanationKey='tasks.fractions.addition_explanation';explanationParams={a,b,result:sum};answerFormat=\"дробь (например: 5/6)\";formatKey='answerFormats.fraction';break;case 4:// Вычитание дробей\nconst x=getRandomInt(3,7);const y=getRandomInt(1,3);const diff=x-y;question=\"\\u0412\\u044B\\u0447\\u0442\\u0438\\u0442\\u0435 \\u0434\\u0440\\u043E\\u0431\\u0438: \".concat(x,\"/8 - \").concat(y,\"/8\");translationKey='tasks.fractions.subtraction';translationParams={x,y};answer=\"\".concat(diff,\"/8\");explanation=\"\\u041F\\u0440\\u0438 \\u043E\\u0434\\u0438\\u043D\\u0430\\u043A\\u043E\\u0432\\u044B\\u0445 \\u0437\\u043D\\u0430\\u043C\\u0435\\u043D\\u0430\\u0442\\u0435\\u043B\\u044F\\u0445 \\u0432\\u044B\\u0447\\u0438\\u0442\\u0430\\u0435\\u043C \\u0447\\u0438\\u0441\\u043B\\u0438\\u0442\\u0435\\u043B\\u0438: \".concat(x,\" - \").concat(y,\" = \").concat(diff);explanationKey='tasks.fractions.subtraction_explanation';explanationParams={x,y,result:diff};answerFormat=\"дробь\";formatKey='answerFormats.fraction';break;case 5:// Перевод процентов в дроби\nconst p=getRandomInt(5,95);question=\"\\u041F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \".concat(p,\"% \\u0432 \\u0432\\u0438\\u0434\\u0435 \\u043D\\u0435\\u0441\\u043E\\u043A\\u0440\\u0430\\u0442\\u0438\\u043C\\u043E\\u0439 \\u0434\\u0440\\u043E\\u0431\\u0438\");translationKey='tasks.fractions.percentage_to_fraction';translationParams={p};answer=\"\".concat(p,\"/100\");explanation=\"\".concat(p,\"% = \").concat(p,\"/100\");explanationKey='tasks.fractions.percentage_to_fraction_explanation';explanationParams={p};answerFormat=\"дробь\";formatKey='answerFormats.fraction';break;case 6:// Нахождение числа по проценту\nconst perc=getRandomInt(10,40);const value=getRandomInt(15,60);const total=Math.round(value*100/perc);question=\"\\u0415\\u0441\\u043B\\u0438 \".concat(perc,\"% \\u0447\\u0438\\u0441\\u043B\\u0430 \\u0440\\u0430\\u0432\\u043D\\u044B \").concat(value,\", \\u043D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0441\\u0451 \\u0447\\u0438\\u0441\\u043B\\u043E\");translationKey='tasks.fractions.find_number_by_percentage';translationParams={perc,value};answer=total.toString();explanation=\"100% = (\".concat(value,\" \\xD7 100) / \").concat(perc,\" = \").concat(total);explanationKey='tasks.fractions.find_number_by_percentage_explanation';explanationParams={perc,value,total};answerFormat=\"число\";formatKey='answerFormats.number';break;case 7:// Сравнение дробей\nconst a2=getRandomInt(1,5);const b2=getRandomInt(2,8);const c2=getRandomInt(1,5);const d2=getRandomInt(2,8);const result1=(a2/b2).toFixed(3);const result2=(c2/d2).toFixed(3);question=\"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0438\\u0442\\u0435 \\u0434\\u0440\\u043E\\u0431\\u0438: \".concat(a2,\"/\").concat(b2,\" \\u0438 \").concat(c2,\"/\").concat(d2);translationKey='tasks.fractions.compare_fractions';translationParams={a:a2,b:b2,c:c2,d:d2};answer=a2/b2>c2/d2?\"больше\":a2/b2<c2/d2?\"меньше\":\"равны\";explanation=\"\\u041F\\u0440\\u0438\\u0432\\u043E\\u0434\\u0438\\u043C \\u043A \\u043E\\u0431\\u0449\\u0435\\u043C\\u0443 \\u0437\\u043D\\u0430\\u043C\\u0435\\u043D\\u0430\\u0442\\u0435\\u043B\\u044E: \".concat(a2,\"/\").concat(b2,\" = \").concat(result1,\", \").concat(c2,\"/\").concat(d2,\" = \").concat(result2);explanationKey='tasks.fractions.compare_fractions_explanation';explanationParams={a:a2,b:b2,c:c2,d:d2,result1,result2};answerFormat=\"больше/меньше/равно\";formatKey='answerFormats.comparison';break;case 8:// Смешанное число в неправильную дробь\nconst whole8=getRandomInt(1,5);const num8=getRandomInt(1,4);const den8=getRandomInt(2,8);const improper8=whole8*den8+num8;question=\"\\u041F\\u0435\\u0440\\u0435\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043C\\u0435\\u0448\\u0430\\u043D\\u043D\\u043E\\u0435 \\u0447\\u0438\\u0441\\u043B\\u043E \".concat(whole8,\" \").concat(num8,\"/\").concat(den8,\" \\u0432 \\u043D\\u0435\\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u0443\\u044E \\u0434\\u0440\\u043E\\u0431\\u044C\");translationKey='tasks.fractions.mixed_to_improper';translationParams={whole:whole8,num:num8,den:den8};answer=\"\".concat(improper8,\"/\").concat(den8);explanation=\"\".concat(whole8,\" \").concat(num8,\"/\").concat(den8,\" = (\").concat(whole8,\" \\xD7 \").concat(den8,\" + \").concat(num8,\") / \").concat(den8,\" = \").concat(improper8,\"/\").concat(den8);explanationKey='tasks.fractions.mixed_to_improper_explanation';explanationParams={whole:whole8,num:num8,den:den8,result:\"\".concat(improper8,\"/\").concat(den8)};answerFormat=\"дробь\";formatKey='answerFormats.fraction';break;case 9:// Неправильная дробь в смешанное число\nconst numerator9=getRandomInt(7,20);const denominator9=getRandomInt(2,6);const wholePart9=Math.floor(numerator9/denominator9);const remainder9=numerator9%denominator9;question=\"\\u041F\\u0435\\u0440\\u0435\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0435\\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u0443\\u044E \\u0434\\u0440\\u043E\\u0431\\u044C \".concat(numerator9,\"/\").concat(denominator9,\" \\u0432 \\u0441\\u043C\\u0435\\u0448\\u0430\\u043D\\u043D\\u043E\\u0435 \\u0447\\u0438\\u0441\\u043B\\u043E\");translationKey='tasks.fractions.improper_to_mixed';translationParams={num:numerator9,den:denominator9};answer=remainder9===0?\"\".concat(wholePart9):\"\".concat(wholePart9,\" \").concat(remainder9,\"/\").concat(denominator9);explanation=\"\".concat(numerator9,\"/\").concat(denominator9,\" = \").concat(wholePart9,\" \\u0446\\u0435\\u043B\\u044B\\u0445 \\u0438 \").concat(remainder9,\"/\").concat(denominator9);explanationKey='tasks.fractions.improper_to_mixed_explanation';explanationParams={num:numerator9,den:denominator9,whole:wholePart9,remainder:remainder9};answerFormat=\"смешанное число (например: 2 3/4)\";formatKey='answerFormats.mixed_number';break;case 10:// Умножение дробей\nconst a10=getRandomInt(1,4);const b10=getRandomInt(2,6);const c10=getRandomInt(1,4);const d10=getRandomInt(2,6);const resNum10=a10*c10;const resDen10=b10*d10;question=\"\\u0423\\u043C\\u043D\\u043E\\u0436\\u044C\\u0442\\u0435 \\u0434\\u0440\\u043E\\u0431\\u0438: \".concat(a10,\"/\").concat(b10,\" \\xD7 \").concat(c10,\"/\").concat(d10);translationKey='tasks.fractions.multiply_fractions';translationParams={a:a10,b:b10,c:c10,d:d10};answer=\"\".concat(resNum10,\"/\").concat(resDen10);explanation=\"\\u0423\\u043C\\u043D\\u043E\\u0436\\u0430\\u0435\\u043C \\u0447\\u0438\\u0441\\u043B\\u0438\\u0442\\u0435\\u043B\\u0438 \\u0438 \\u0437\\u043D\\u0430\\u043C\\u0435\\u043D\\u0430\\u0442\\u0435\\u043B\\u0438: (\".concat(a10,\" \\xD7 \").concat(c10,\") / (\").concat(b10,\" \\xD7 \").concat(d10,\") = \").concat(resNum10,\"/\").concat(resDen10);explanationKey='tasks.fractions.multiply_fractions_explanation';explanationParams={a:a10,b:b10,c:c10,d:d10,result:\"\".concat(resNum10,\"/\").concat(resDen10)};answerFormat=\"дробь\";formatKey='answerFormats.fraction';break;default:type=getRandomInt(1,10);continue;}if(!usedQuestions.has(question)){usedQuestions.add(question);tasks.push({question,answer,explanation,answerFormat,translationKey,translationParams,explanationKey,explanationParams,formatKey});}}return tasks;};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","fractionsGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","num","den","concat","numerator","denominator","result","percent","number","round","toString","a","b","sum","x","y","diff","p","perc","value","total","a2","b2","c2","d2","result1","toFixed","result2","c","d","whole8","num8","den8","improper8","whole","numerator9","denominator9","wholePart9","remainder9","remainder","a10","b10","c10","d10","resNum10","resDen10","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day1-fractions.js"],"sourcesContent":["// day1-fractions.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\n// Генераторы задач день 1\nexport const fractionsGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Простые дроби\n        const num = getRandomInt(1, 5);\n        const den = getRandomInt(2, 8);\n        question = `Сократите дробь: ${num * 2}/${den * 2}`;\n        translationKey = 'tasks.fractions.reduce';\n        translationParams = { numerator: num * 2, denominator: den * 2 };\n        answer = `${num}/${den}`;\n        explanation = `Делим числитель и знаменатель на 2: ${num * 2}/${den * 2} = ${num}/${den}`;\n        explanationKey = 'tasks.fractions.reduce_explanation';\n        explanationParams = { numerator: num * 2, denominator: den * 2, result: `${num}/${den}` };\n        answerFormat = \"дробь (например: 3/4)\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 2: // Проценты\n        const percent = getRandomInt(10, 90);\n        const number = getRandomInt(20, 200);\n        const result = Math.round((percent / 100) * number);\n        question = `Найдите ${percent}% от числа ${number}`;\n        translationKey = 'tasks.fractions.percentage_of';\n        translationParams = { percent, number };\n        answer = result.toString();\n        explanation = `${percent}% от ${number} = (${percent} × ${number}) / 100 = ${result}`;\n        explanationKey = 'tasks.fractions.percentage_of_explanation';\n        explanationParams = { percent, number, result };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 3: // Сложение дробей\n        const a = getRandomInt(1, 4);\n        const b = getRandomInt(1, 4);\n        const sum = a + b;\n        question = `Сложите дроби: ${a}/6 + ${b}/6`;\n        translationKey = 'tasks.fractions.addition';\n        translationParams = { a, b };\n        answer = `${sum}/6`;\n        explanation = `При одинаковых знаменателях складываем числители: ${a} + ${b} = ${sum}`;\n        explanationKey = 'tasks.fractions.addition_explanation';\n        explanationParams = { a, b, result: sum };\n        answerFormat = \"дробь (например: 5/6)\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 4: // Вычитание дробей\n        const x = getRandomInt(3, 7);\n        const y = getRandomInt(1, 3);\n        const diff = x - y;\n        question = `Вычтите дроби: ${x}/8 - ${y}/8`;\n        translationKey = 'tasks.fractions.subtraction';\n        translationParams = { x, y };\n        answer = `${diff}/8`;\n        explanation = `При одинаковых знаменателях вычитаем числители: ${x} - ${y} = ${diff}`;\n        explanationKey = 'tasks.fractions.subtraction_explanation';\n        explanationParams = { x, y, result: diff };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 5: // Перевод процентов в дроби\n        const p = getRandomInt(5, 95);\n        question = `Представьте ${p}% в виде несократимой дроби`;\n        translationKey = 'tasks.fractions.percentage_to_fraction';\n        translationParams = { p };\n        answer = `${p}/100`;\n        explanation = `${p}% = ${p}/100`;\n        explanationKey = 'tasks.fractions.percentage_to_fraction_explanation';\n        explanationParams = { p };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 6: // Нахождение числа по проценту\n        const perc = getRandomInt(10, 40);\n        const value = getRandomInt(15, 60);\n        const total = Math.round((value * 100) / perc);\n        question = `Если ${perc}% числа равны ${value}, найдите всё число`;\n        translationKey = 'tasks.fractions.find_number_by_percentage';\n        translationParams = { perc, value };\n        answer = total.toString();\n        explanation = `100% = (${value} × 100) / ${perc} = ${total}`;\n        explanationKey = 'tasks.fractions.find_number_by_percentage_explanation';\n        explanationParams = { perc, value, total };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 7: // Сравнение дробей\n        const a2 = getRandomInt(1, 5);\n        const b2 = getRandomInt(2, 8);\n        const c2 = getRandomInt(1, 5);\n        const d2 = getRandomInt(2, 8);\n        const result1 = (a2 / b2).toFixed(3);\n        const result2 = (c2 / d2).toFixed(3);\n        question = `Сравните дроби: ${a2}/${b2} и ${c2}/${d2}`;\n        translationKey = 'tasks.fractions.compare_fractions';\n        translationParams = { a: a2, b: b2, c: c2, d: d2 };\n        answer = a2/b2 > c2/d2 ? \"больше\" : a2/b2 < c2/d2 ? \"меньше\" : \"равны\";\n        explanation = `Приводим к общему знаменателю: ${a2}/${b2} = ${result1}, ${c2}/${d2} = ${result2}`;\n        explanationKey = 'tasks.fractions.compare_fractions_explanation';\n        explanationParams = { a: a2, b: b2, c: c2, d: d2, result1, result2 };\n        answerFormat = \"больше/меньше/равно\";\n        formatKey = 'answerFormats.comparison';\n        break;\n\n      case 8: // Смешанное число в неправильную дробь\n        const whole8 = getRandomInt(1, 5);\n        const num8 = getRandomInt(1, 4);\n        const den8 = getRandomInt(2, 8);\n        const improper8 = whole8 * den8 + num8;\n        question = `Переведите смешанное число ${whole8} ${num8}/${den8} в неправильную дробь`;\n        translationKey = 'tasks.fractions.mixed_to_improper';\n        translationParams = { whole: whole8, num: num8, den: den8 };\n        answer = `${improper8}/${den8}`;\n        explanation = `${whole8} ${num8}/${den8} = (${whole8} × ${den8} + ${num8}) / ${den8} = ${improper8}/${den8}`;\n        explanationKey = 'tasks.fractions.mixed_to_improper_explanation';\n        explanationParams = { whole: whole8, num: num8, den: den8, result: `${improper8}/${den8}` };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 9: // Неправильная дробь в смешанное число\n        const numerator9 = getRandomInt(7, 20);\n        const denominator9 = getRandomInt(2, 6);\n        const wholePart9 = Math.floor(numerator9 / denominator9);\n        const remainder9 = numerator9 % denominator9;\n        question = `Переведите неправильную дробь ${numerator9}/${denominator9} в смешанное число`;\n        translationKey = 'tasks.fractions.improper_to_mixed';\n        translationParams = { num: numerator9, den: denominator9 };\n        answer = remainder9 === 0 ? `${wholePart9}` : `${wholePart9} ${remainder9}/${denominator9}`;\n        explanation = `${numerator9}/${denominator9} = ${wholePart9} целых и ${remainder9}/${denominator9}`;\n        explanationKey = 'tasks.fractions.improper_to_mixed_explanation';\n        explanationParams = { num: numerator9, den: denominator9, whole: wholePart9, remainder: remainder9 };\n        answerFormat = \"смешанное число (например: 2 3/4)\";\n        formatKey = 'answerFormats.mixed_number';\n        break;\n\n      case 10: // Умножение дробей\n        const a10 = getRandomInt(1, 4);\n        const b10 = getRandomInt(2, 6);\n        const c10 = getRandomInt(1, 4);\n        const d10 = getRandomInt(2, 6);\n        const resNum10 = a10 * c10;\n        const resDen10 = b10 * d10;\n        question = `Умножьте дроби: ${a10}/${b10} × ${c10}/${d10}`;\n        translationKey = 'tasks.fractions.multiply_fractions';\n        translationParams = { a: a10, b: b10, c: c10, d: d10 };\n        answer = `${resNum10}/${resDen10}`;\n        explanation = `Умножаем числители и знаменатели: (${a10} × ${c10}) / (${b10} × ${d10}) = ${resNum10}/${resDen10}`;\n        explanationKey = 'tasks.fractions.multiply_fractions_explanation';\n        explanationParams = { a: a10, b: b10, c: c10, d: d10, result: `${resNum10}/${resDen10}` };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}