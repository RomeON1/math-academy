{"ast":null,"code":"// day7-commonFractions.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nexport const commonFractionsGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n    switch (type) {\n      case 1:\n        // Сокращение дроби\n        const num1 = getRandomInt(2, 8);\n        const den1 = getRandomInt(3, 12);\n        const gcd1 = (a, b) => b === 0 ? a : gcd1(b, a % b);\n        const divisor1 = gcd1(num1 * 2, den1 * 2);\n        question = `Сократите дробь: ${num1 * 2}/${den1 * 2}`;\n        translationKey = 'tasks.common_fractions.reduce';\n        translationParams = {\n          numerator: num1 * 2,\n          denominator: den1 * 2\n        };\n        answer = `${num1}/${den1}`;\n        explanation = `Делим числитель и знаменатель на ${divisor1}: ${num1 * 2}/${den1 * 2} = ${num1}/${den1}`;\n        explanationKey = 'tasks.common_fractions.reduce_explanation';\n        explanationParams = {\n          numerator: num1 * 2,\n          denominator: den1 * 2,\n          divisor: divisor1,\n          result: `${num1}/${den1}`\n        };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n      case 2:\n        // Приведение к общему знаменателю\n        const a2 = getRandomInt(1, 4);\n        const b2 = getRandomInt(1, 4);\n        const den2 = 6;\n        const fraction1 = `${a2 * 2}/${den2}`;\n        const fraction2 = `${b2 * 3}/${den2}`;\n        question = `Приведите дроби ${a2}/3 и ${b2}/2 к общему знаменателю ${den2}`;\n        translationKey = 'tasks.common_fractions.common_denominator';\n        translationParams = {\n          a: a2,\n          b: b2,\n          den: den2\n        };\n        answer = `${fraction1} и ${fraction2}`;\n        explanation = `3 → ${den2}: ×2 = ${fraction1}, 2 → ${den2}: ×3 = ${fraction2}`;\n        explanationKey = 'tasks.common_fractions.common_denominator_explanation';\n        explanationParams = {\n          a: a2,\n          b: b2,\n          den: den2,\n          result: answer\n        };\n        answerFormat = \"две дроби через 'и'\";\n        formatKey = 'answerFormats.fractions_pair';\n        break;\n      case 3:\n        // Сравнение дробей\n        const num3_1 = getRandomInt(1, 3);\n        const den3_1 = getRandomInt(4, 8);\n        const num3_2 = getRandomInt(1, 3);\n        const den3_2 = getRandomInt(4, 8);\n        const value1 = (num3_1 / den3_1).toFixed(2);\n        const value2 = (num3_2 / den3_2).toFixed(2);\n        const comparisonResult = num3_1 / den3_1 > num3_2 / den3_2 ? \">\" : num3_1 / den3_1 < num3_2 / den3_2 ? \"<\" : \"=\";\n        question = `Сравните дроби: ${num3_1}/${den3_1} и ${num3_2}/${den3_2}`;\n        translationKey = 'tasks.common_fractions.compare';\n        translationParams = {\n          a: num3_1,\n          b: den3_1,\n          c: num3_2,\n          d: den3_2\n        };\n        answer = comparisonResult;\n        explanation = `${num3_1}/${den3_1} ${comparisonResult} ${num3_2}/${den3_2} (${value1} ${comparisonResult} ${value2})`;\n        explanationKey = 'tasks.common_fractions.compare_explanation';\n        explanationParams = {\n          a: num3_1,\n          b: den3_1,\n          c: num3_2,\n          d: den3_2,\n          value1,\n          value2,\n          result: comparisonResult\n        };\n        answerFormat = \"больше/меньше/равно\";\n        formatKey = 'answerFormats.comparison';\n        break;\n      case 4:\n        // Перевод в смешанное число\n        const num4 = getRandomInt(7, 15);\n        const den4 = getRandomInt(2, 5);\n        const whole4 = Math.floor(num4 / den4);\n        const remainder4 = num4 % den4;\n        question = `Переведите дробь ${num4}/${den4} в смешанное число`;\n        translationKey = 'tasks.common_fractions.to_mixed';\n        translationParams = {\n          numerator: num4,\n          denominator: den4\n        };\n        answer = remainder4 === 0 ? `${whole4}` : `${whole4} ${remainder4}/${den4}`;\n        explanation = `${num4}/${den4} = ${whole4} целых и ${remainder4}/${den4}`;\n        explanationKey = 'tasks.common_fractions.to_mixed_explanation';\n        explanationParams = {\n          numerator: num4,\n          denominator: den4,\n          whole: whole4,\n          remainder: remainder4\n        };\n        answerFormat = \"смешанное число\";\n        formatKey = 'answerFormats.mixed_number';\n        break;\n      case 5:\n        // Перевод из смешанного числа\n        const whole5 = getRandomInt(1, 3);\n        const num5 = getRandomInt(1, 4);\n        const den5 = getRandomInt(2, 6);\n        const improperFraction = `${whole5 * den5 + num5}/${den5}`;\n        question = `Переведите смешанное число ${whole5} ${num5}/${den5} в неправильную дробь`;\n        translationKey = 'tasks.common_fractions.from_mixed';\n        translationParams = {\n          whole: whole5,\n          numerator: num5,\n          denominator: den5\n        };\n        answer = improperFraction;\n        explanation = `${whole5} ${num5}/${den5} = (${whole5} × ${den5} + ${num5}) / ${den5} = ${improperFraction}`;\n        explanationKey = 'tasks.common_fractions.from_mixed_explanation';\n        explanationParams = {\n          whole: whole5,\n          numerator: num5,\n          denominator: den5,\n          result: improperFraction\n        };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n      case 6:\n        // Сложение с общим знаменателем\n        const num6_1 = getRandomInt(1, 4);\n        const num6_2 = getRandomInt(1, 4);\n        const den6 = 8;\n        const sum6 = num6_1 + num6_2;\n        question = `Сложите дроби: ${num6_1}/${den6} + ${num6_2}/${den6}`;\n        translationKey = 'tasks.common_fractions.add_same_denominator';\n        translationParams = {\n          a: num6_1,\n          b: num6_2,\n          den: den6\n        };\n        answer = `${sum6}/${den6}`;\n        explanation = `При одинаковых знаменателях складываем числители: ${num6_1} + ${num6_2} = ${sum6}`;\n        explanationKey = 'tasks.common_fractions.add_same_denominator_explanation';\n        explanationParams = {\n          a: num6_1,\n          b: num6_2,\n          den: den6,\n          result: answer\n        };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n      case 7:\n        // Вычитание с общим знаменателем\n        const num7_1 = getRandomInt(3, 7);\n        const num7_2 = getRandomInt(1, 3);\n        const den7 = 8;\n        const diff7 = num7_1 - num7_2;\n        question = `Вычтите дроби: ${num7_1}/${den7} - ${num7_2}/${den7}`;\n        translationKey = 'tasks.common_fractions.subtract_same_denominator';\n        translationParams = {\n          a: num7_1,\n          b: num7_2,\n          den: den7\n        };\n        answer = `${diff7}/${den7}`;\n        explanation = `При одинаковых знаменателях вычитаем числители: ${num7_1} - ${num7_2} = ${diff7}`;\n        explanationKey = 'tasks.common_fractions.subtract_same_denominator_explanation';\n        explanationParams = {\n          a: num7_1,\n          b: num7_2,\n          den: den7,\n          result: answer\n        };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n      case 8:\n        // Нахождение части от числа\n        const fraction8 = getRandomInt(1, 4);\n        const den8 = getRandomInt(2, 6);\n        const number8 = getRandomInt(10, 30);\n        const result8 = Math.round(fraction8 / den8 * number8);\n        question = `Найдите ${fraction8}/${den8} от числа ${number8}`;\n        translationKey = 'tasks.common_fractions.fraction_of_number';\n        translationParams = {\n          numerator: fraction8,\n          denominator: den8,\n          number: number8\n        };\n        answer = result8.toString();\n        explanation = `${fraction8}/${den8} от ${number8} = (${fraction8} × ${number8}) / ${den8} = ${result8}`;\n        explanationKey = 'tasks.common_fractions.fraction_of_number_explanation';\n        explanationParams = {\n          numerator: fraction8,\n          denominator: den8,\n          number: number8,\n          result: result8\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 9:\n        // Нахождение числа по его части\n        const fraction9 = getRandomInt(1, 3);\n        const den9 = getRandomInt(2, 5);\n        const part9 = getRandomInt(5, 15);\n        const whole9 = Math.round(part9 * den9 / fraction9);\n        question = `Если ${fraction9}/${den9} числа равны ${part9}, найдите всё число`;\n        translationKey = 'tasks.common_fractions.number_from_fraction';\n        translationParams = {\n          numerator: fraction9,\n          denominator: den9,\n          part: part9\n        };\n        answer = whole9.toString();\n        explanation = `Всё число = (${part9} × ${den9}) / ${fraction9} = ${whole9}`;\n        explanationKey = 'tasks.common_fractions.number_from_fraction_explanation';\n        explanationParams = {\n          numerator: fraction9,\n          denominator: den9,\n          part: part9,\n          result: whole9\n        };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n      case 10:\n        // Приведение к несократимому виду\n        const num10 = getRandomInt(2, 6) * 2;\n        const den10 = getRandomInt(3, 9) * 2;\n        const gcd10 = (a, b) => b === 0 ? a : gcd10(b, a % b);\n        const divisor10 = gcd10(num10, den10);\n        const simplifiedFraction = `${num10 / divisor10}/${den10 / divisor10}`;\n        question = `Приведите дробь ${num10}/${den10} к несократимому виду`;\n        translationKey = 'tasks.common_fractions.simplify';\n        translationParams = {\n          numerator: num10,\n          denominator: den10\n        };\n        answer = simplifiedFraction;\n        explanation = `Делим на ${divisor10}: ${num10}/${den10} = ${simplifiedFraction}`;\n        explanationKey = 'tasks.common_fractions.simplify_explanation';\n        explanationParams = {\n          numerator: num10,\n          denominator: den10,\n          divisor: divisor10,\n          result: simplifiedFraction\n        };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({\n        question,\n        answer,\n        explanation,\n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey,\n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","commonFractionsGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","num1","den1","gcd1","a","b","divisor1","numerator","denominator","divisor","result","a2","b2","den2","fraction1","fraction2","den","num3_1","den3_1","num3_2","den3_2","value1","toFixed","value2","comparisonResult","c","d","num4","den4","whole4","remainder4","whole","remainder","whole5","num5","den5","improperFraction","num6_1","num6_2","den6","sum6","num7_1","num7_2","den7","diff7","fraction8","den8","number8","result8","round","number","toString","fraction9","den9","part9","whole9","part","num10","den10","gcd10","divisor10","simplifiedFraction","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day7-commonFractions.js"],"sourcesContent":["// day7-commonFractions.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const commonFractionsGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Сокращение дроби\n        const num1 = getRandomInt(2, 8);\n        const den1 = getRandomInt(3, 12);\n        const gcd1 = (a, b) => b === 0 ? a : gcd1(b, a % b);\n        const divisor1 = gcd1(num1 * 2, den1 * 2);\n        question = `Сократите дробь: ${num1 * 2}/${den1 * 2}`;\n        translationKey = 'tasks.common_fractions.reduce';\n        translationParams = { numerator: num1 * 2, denominator: den1 * 2 };\n        answer = `${num1}/${den1}`;\n        explanation = `Делим числитель и знаменатель на ${divisor1}: ${num1 * 2}/${den1 * 2} = ${num1}/${den1}`;\n        explanationKey = 'tasks.common_fractions.reduce_explanation';\n        explanationParams = { numerator: num1 * 2, denominator: den1 * 2, divisor: divisor1, result: `${num1}/${den1}` };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 2: // Приведение к общему знаменателю\n        const a2 = getRandomInt(1, 4);\n        const b2 = getRandomInt(1, 4);\n        const den2 = 6;\n        const fraction1 = `${a2 * 2}/${den2}`;\n        const fraction2 = `${b2 * 3}/${den2}`;\n        question = `Приведите дроби ${a2}/3 и ${b2}/2 к общему знаменателю ${den2}`;\n        translationKey = 'tasks.common_fractions.common_denominator';\n        translationParams = { a: a2, b: b2, den: den2 };\n        answer = `${fraction1} и ${fraction2}`;\n        explanation = `3 → ${den2}: ×2 = ${fraction1}, 2 → ${den2}: ×3 = ${fraction2}`;\n        explanationKey = 'tasks.common_fractions.common_denominator_explanation';\n        explanationParams = { a: a2, b: b2, den: den2, result: answer };\n        answerFormat = \"две дроби через 'и'\";\n        formatKey = 'answerFormats.fractions_pair';\n        break;\n\n      case 3: // Сравнение дробей\n        const num3_1 = getRandomInt(1, 3);\n        const den3_1 = getRandomInt(4, 8);\n        const num3_2 = getRandomInt(1, 3);\n        const den3_2 = getRandomInt(4, 8);\n        const value1 = (num3_1 / den3_1).toFixed(2);\n        const value2 = (num3_2 / den3_2).toFixed(2);\n        const comparisonResult = num3_1/den3_1 > num3_2/den3_2 ? \">\" : num3_1/den3_1 < num3_2/den3_2 ? \"<\" : \"=\";\n        question = `Сравните дроби: ${num3_1}/${den3_1} и ${num3_2}/${den3_2}`;\n        translationKey = 'tasks.common_fractions.compare';\n        translationParams = { a: num3_1, b: den3_1, c: num3_2, d: den3_2 };\n        answer = comparisonResult;\n        explanation = `${num3_1}/${den3_1} ${comparisonResult} ${num3_2}/${den3_2} (${value1} ${comparisonResult} ${value2})`;\n        explanationKey = 'tasks.common_fractions.compare_explanation';\n        explanationParams = { \n          a: num3_1, b: den3_1, c: num3_2, d: den3_2, \n          value1, value2, result: comparisonResult \n        };\n        answerFormat = \"больше/меньше/равно\";\n        formatKey = 'answerFormats.comparison';\n        break;\n\n      case 4: // Перевод в смешанное число\n        const num4 = getRandomInt(7, 15);\n        const den4 = getRandomInt(2, 5);\n        const whole4 = Math.floor(num4 / den4);\n        const remainder4 = num4 % den4;\n        question = `Переведите дробь ${num4}/${den4} в смешанное число`;\n        translationKey = 'tasks.common_fractions.to_mixed';\n        translationParams = { numerator: num4, denominator: den4 };\n        answer = remainder4 === 0 ? `${whole4}` : `${whole4} ${remainder4}/${den4}`;\n        explanation = `${num4}/${den4} = ${whole4} целых и ${remainder4}/${den4}`;\n        explanationKey = 'tasks.common_fractions.to_mixed_explanation';\n        explanationParams = { numerator: num4, denominator: den4, whole: whole4, remainder: remainder4 };\n        answerFormat = \"смешанное число\";\n        formatKey = 'answerFormats.mixed_number';\n        break;\n\n      case 5: // Перевод из смешанного числа\n        const whole5 = getRandomInt(1, 3);\n        const num5 = getRandomInt(1, 4);\n        const den5 = getRandomInt(2, 6);\n        const improperFraction = `${whole5 * den5 + num5}/${den5}`;\n        question = `Переведите смешанное число ${whole5} ${num5}/${den5} в неправильную дробь`;\n        translationKey = 'tasks.common_fractions.from_mixed';\n        translationParams = { whole: whole5, numerator: num5, denominator: den5 };\n        answer = improperFraction;\n        explanation = `${whole5} ${num5}/${den5} = (${whole5} × ${den5} + ${num5}) / ${den5} = ${improperFraction}`;\n        explanationKey = 'tasks.common_fractions.from_mixed_explanation';\n        explanationParams = { whole: whole5, numerator: num5, denominator: den5, result: improperFraction };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 6: // Сложение с общим знаменателем\n        const num6_1 = getRandomInt(1, 4);\n        const num6_2 = getRandomInt(1, 4);\n        const den6 = 8;\n        const sum6 = num6_1 + num6_2;\n        question = `Сложите дроби: ${num6_1}/${den6} + ${num6_2}/${den6}`;\n        translationKey = 'tasks.common_fractions.add_same_denominator';\n        translationParams = { a: num6_1, b: num6_2, den: den6 };\n        answer = `${sum6}/${den6}`;\n        explanation = `При одинаковых знаменателях складываем числители: ${num6_1} + ${num6_2} = ${sum6}`;\n        explanationKey = 'tasks.common_fractions.add_same_denominator_explanation';\n        explanationParams = { a: num6_1, b: num6_2, den: den6, result: answer };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 7: // Вычитание с общим знаменателем\n        const num7_1 = getRandomInt(3, 7);\n        const num7_2 = getRandomInt(1, 3);\n        const den7 = 8;\n        const diff7 = num7_1 - num7_2;\n        question = `Вычтите дроби: ${num7_1}/${den7} - ${num7_2}/${den7}`;\n        translationKey = 'tasks.common_fractions.subtract_same_denominator';\n        translationParams = { a: num7_1, b: num7_2, den: den7 };\n        answer = `${diff7}/${den7}`;\n        explanation = `При одинаковых знаменателях вычитаем числители: ${num7_1} - ${num7_2} = ${diff7}`;\n        explanationKey = 'tasks.common_fractions.subtract_same_denominator_explanation';\n        explanationParams = { a: num7_1, b: num7_2, den: den7, result: answer };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 8: // Нахождение части от числа\n        const fraction8 = getRandomInt(1, 4);\n        const den8 = getRandomInt(2, 6);\n        const number8 = getRandomInt(10, 30);\n        const result8 = Math.round((fraction8 / den8) * number8);\n        question = `Найдите ${fraction8}/${den8} от числа ${number8}`;\n        translationKey = 'tasks.common_fractions.fraction_of_number';\n        translationParams = { numerator: fraction8, denominator: den8, number: number8 };\n        answer = result8.toString();\n        explanation = `${fraction8}/${den8} от ${number8} = (${fraction8} × ${number8}) / ${den8} = ${result8}`;\n        explanationKey = 'tasks.common_fractions.fraction_of_number_explanation';\n        explanationParams = { numerator: fraction8, denominator: den8, number: number8, result: result8 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 9: // Нахождение числа по его части\n        const fraction9 = getRandomInt(1, 3);\n        const den9 = getRandomInt(2, 5);\n        const part9 = getRandomInt(5, 15);\n        const whole9 = Math.round((part9 * den9) / fraction9);\n        question = `Если ${fraction9}/${den9} числа равны ${part9}, найдите всё число`;\n        translationKey = 'tasks.common_fractions.number_from_fraction';\n        translationParams = { numerator: fraction9, denominator: den9, part: part9 };\n        answer = whole9.toString();\n        explanation = `Всё число = (${part9} × ${den9}) / ${fraction9} = ${whole9}`;\n        explanationKey = 'tasks.common_fractions.number_from_fraction_explanation';\n        explanationParams = { numerator: fraction9, denominator: den9, part: part9, result: whole9 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 10: // Приведение к несократимому виду\n        const num10 = getRandomInt(2, 6) * 2;\n        const den10 = getRandomInt(3, 9) * 2;\n        const gcd10 = (a, b) => b === 0 ? a : gcd10(b, a % b);\n        const divisor10 = gcd10(num10, den10);\n        const simplifiedFraction = `${num10 / divisor10}/${den10 / divisor10}`;\n        question = `Приведите дробь ${num10}/${den10} к несократимому виду`;\n        translationKey = 'tasks.common_fractions.simplify';\n        translationParams = { numerator: num10, denominator: den10 };\n        answer = simplifiedFraction;\n        explanation = `Делим на ${divisor10}: ${num10}/${den10} = ${simplifiedFraction}`;\n        explanationKey = 'tasks.common_fractions.simplify_explanation';\n        explanationParams = { numerator: num10, denominator: den10, divisor: divisor10, result: simplifiedFraction };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}