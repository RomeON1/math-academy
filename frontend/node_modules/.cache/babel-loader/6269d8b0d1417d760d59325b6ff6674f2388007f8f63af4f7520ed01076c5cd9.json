{"ast":null,"code":"// day6-coordinates.js\nconst getRandomInt=(min,max)=>Math.floor(Math.random()*(max-min+1))+min;export const coordinatesGenerator=(count,t)=>{const tasks=[];const usedQuestions=new Set();while(tasks.length<count){let question,answer,explanation,answerFormat;let translationKey,translationParams,explanationKey,explanationParams,formatKey;let type=getRandomInt(1,10);switch(type){case 1:// Определение координат точки\nconst x1=getRandomInt(-5,5);const y1=getRandomInt(-5,5);question=\"\\u041A\\u0430\\u043A\\u0438\\u0435 \\u043A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u044B \\u0443 \\u0442\\u043E\\u0447\\u043A\\u0438 (\".concat(x1,\", \").concat(y1,\")?\");translationKey='tasks.coordinates.point_coordinates';translationParams={x:x1,y:y1};answer=\"(\".concat(x1,\", \").concat(y1,\")\");explanation=\"\\u0422\\u043E\\u0447\\u043A\\u0430 \\u0438\\u043C\\u0435\\u0435\\u0442 \\u043A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u044B (\".concat(x1,\", \").concat(y1,\") - x=\").concat(x1,\", y=\").concat(y1);explanationKey='tasks.coordinates.point_coordinates_explanation';explanationParams={x:x1,y:y1};answerFormat=\"координаты (x,y)\";formatKey='answerFormats.coordinate';break;case 2:// Построение точки по координатам\nconst x2=getRandomInt(-4,4);const y2=getRandomInt(-4,4);const positionX=x2>0?'правой':'левой';const positionY=y2>0?'верхней':'нижней';question=\"\\u041F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0439\\u0442\\u0435 \\u0442\\u043E\\u0447\\u043A\\u0443 \\u0441 \\u043A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u044B (\".concat(x2,\", \").concat(y2,\")\");translationKey='tasks.coordinates.plot_point';translationParams={x:x2,y:y2};answer=\"\\u0422\\u043E\\u0447\\u043A\\u0430 \\u0432 \".concat(positionX,\" \\u0447\\u0430\\u0441\\u0442\\u0438, \").concat(positionY,\" \\u043F\\u043E\\u043B\\u043E\\u0432\\u0438\\u043D\\u0435\");explanation=\"\\u0422\\u043E\\u0447\\u043A\\u0430 (\".concat(x2,\", \").concat(y2,\") \\u043D\\u0430\\u0445\\u043E\\u0434\\u0438\\u0442\\u0441\\u044F \\u0432 \").concat(positionX,\" \\u0447\\u0430\\u0441\\u0442\\u0438 \\u0438 \").concat(positionY,\" \\u043F\\u043E\\u043B\\u043E\\u0432\\u0438\\u043D\\u0435 \\u043F\\u043B\\u043E\\u0441\\u043A\\u043E\\u0441\\u0442\\u0438\");explanationKey='tasks.coordinates.plot_point_explanation';explanationParams={x:x2,y:y2,positionX,positionY};answerFormat=\"описание положения\";formatKey='answerFormats.description';break;case 3:// Определение четверти\nconst x3=getRandomInt(-5,5);const y3=getRandomInt(-5,5);let quarter3='';if(x3>0&&y3>0)quarter3='I';else if(x3<0&&y3>0)quarter3='II';else if(x3<0&&y3<0)quarter3='III';else if(x3>0&&y3<0)quarter3='IV';else quarter3='на оси';question=\"\\u0412 \\u043A\\u0430\\u043A\\u043E\\u0439 \\u0447\\u0435\\u0442\\u0432\\u0435\\u0440\\u0442\\u0438 \\u043D\\u0430\\u0445\\u043E\\u0434\\u0438\\u0442\\u0441\\u044F \\u0442\\u043E\\u0447\\u043A\\u0430 (\".concat(x3,\", \").concat(y3,\")?\");translationKey='tasks.coordinates.find_quarter';translationParams={x:x3,y:y3};answer=quarter3;explanation=\"\\u0422\\u043E\\u0447\\u043A\\u0430 (\".concat(x3,\", \").concat(y3,\") \\u043D\\u0430\\u0445\\u043E\\u0434\\u0438\\u0442\\u0441\\u044F \").concat(quarter3==='на оси'?'на оси координат':'в '+quarter3+' четверти');explanationKey='tasks.coordinates.find_quarter_explanation';explanationParams={x:x3,y:y3,quarter:quarter3};answerFormat=\"номер четверти (I,II,III,IV)\";formatKey='answerFormats.quarter';break;case 4:// Расстояние между точками\nconst x4_1=getRandomInt(-3,3);const y4_1=getRandomInt(-3,3);const x4_2=getRandomInt(-3,3);const y4_2=getRandomInt(-3,3);const distance4=Math.sqrt(Math.pow(x4_2-x4_1,2)+Math.pow(y4_2-y4_1,2)).toFixed(2);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0441\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435 \\u043C\\u0435\\u0436\\u0434\\u0443 \\u0442\\u043E\\u0447\\u043A\\u0430\\u043C\\u0438 (\".concat(x4_1,\", \").concat(y4_1,\") \\u0438 (\").concat(x4_2,\", \").concat(y4_2,\")\");translationKey='tasks.coordinates.distance_between';translationParams={x1:x4_1,y1:y4_1,x2:x4_2,y2:y4_2};answer=distance4;explanation=\"\\u0420\\u0430\\u0441\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435 = \\u221A((\".concat(x4_2,\"-\").concat(x4_1,\")\\xB2 + (\").concat(y4_2,\"-\").concat(y4_1,\")\\xB2) = \").concat(distance4);explanationKey='tasks.coordinates.distance_between_explanation';explanationParams={x1:x4_1,y1:y4_1,x2:x4_2,y2:y4_2,result:distance4};answerFormat=\"число\";formatKey='answerFormats.number';break;case 5:// Симметрия относительно оси X\nconst x5=getRandomInt(-4,4);const y5=getRandomInt(-4,4);const symmetricX=\"(\".concat(x5,\", \").concat(-y5,\")\");question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0442\\u043E\\u0447\\u043A\\u0443, \\u0441\\u0438\\u043C\\u043C\\u0435\\u0442\\u0440\\u0438\\u0447\\u043D\\u0443\\u044E (\".concat(x5,\", \").concat(y5,\") \\u043E\\u0442\\u043D\\u043E\\u0441\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u043E\\u0441\\u0438 X\");translationKey='tasks.coordinates.symmetry_x';translationParams={x:x5,y:y5};answer=symmetricX;explanation=\"\\u0421\\u0438\\u043C\\u043C\\u0435\\u0442\\u0440\\u0438\\u044F \\u043E\\u0442\\u043D\\u043E\\u0441\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E X: y \\u043C\\u0435\\u043D\\u044F\\u0435\\u0442 \\u0437\\u043D\\u0430\\u043A \\u2192 \".concat(symmetricX);explanationKey='tasks.coordinates.symmetry_x_explanation';explanationParams={x:x5,y:y5,result:symmetricX};answerFormat=\"координаты (x,y)\";formatKey='answerFormats.coordinate';break;case 6:// Симметрия относительно оси Y\nconst x6=getRandomInt(-4,4);const y6=getRandomInt(-4,4);const symmetricY=\"(\".concat(-x6,\", \").concat(y6,\")\");question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0442\\u043E\\u0447\\u043A\\u0443, \\u0441\\u0438\\u043C\\u043C\\u0435\\u0442\\u0440\\u0438\\u0447\\u043D\\u0443\\u044E (\".concat(x6,\", \").concat(y6,\") \\u043E\\u0442\\u043D\\u043E\\u0441\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u043E\\u0441\\u0438 Y\");translationKey='tasks.coordinates.symmetry_y';translationParams={x:x6,y:y6};answer=symmetricY;explanation=\"\\u0421\\u0438\\u043C\\u043C\\u0435\\u0442\\u0440\\u0438\\u044F \\u043E\\u0442\\u043D\\u043E\\u0441\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E Y: x \\u043C\\u0435\\u043D\\u044F\\u0435\\u0442 \\u0437\\u043D\\u0430\\u043A \\u2192 \".concat(symmetricY);explanationKey='tasks.coordinates.symmetry_y_explanation';explanationParams={x:x6,y:y6,result:symmetricY};answerFormat=\"координаты (x,y)\";formatKey='answerFormats.coordinate';break;case 7:// Симметрия относительно начала координат\nconst x7=getRandomInt(-4,4);const y7=getRandomInt(-4,4);const symmetricOrigin=\"(\".concat(-x7,\", \").concat(-y7,\")\");question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0442\\u043E\\u0447\\u043A\\u0443, \\u0441\\u0438\\u043C\\u043C\\u0435\\u0442\\u0440\\u0438\\u0447\\u043D\\u0443\\u044E (\".concat(x7,\", \").concat(y7,\") \\u043E\\u0442\\u043D\\u043E\\u0441\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u043A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\");translationKey='tasks.coordinates.symmetry_origin';translationParams={x:x7,y:y7};answer=symmetricOrigin;explanation=\"\\u0421\\u0438\\u043C\\u043C\\u0435\\u0442\\u0440\\u0438\\u044F \\u043E\\u0442\\u043D\\u043E\\u0441\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E (0,0): x \\u0438 y \\u043C\\u0435\\u043D\\u044F\\u044E\\u0442 \\u0437\\u043D\\u0430\\u043A \\u2192 \".concat(symmetricOrigin);explanationKey='tasks.coordinates.symmetry_origin_explanation';explanationParams={x:x7,y:y7,result:symmetricOrigin};answerFormat=\"координаты (x,y)\";formatKey='answerFormats.coordinate';break;case 8:// Точка на оси\nconst axis8=['X','Y'][getRandomInt(0,1)];const coord8=getRandomInt(-5,5);const point8=axis8==='X'?\"(\".concat(coord8,\", 0)\"):\"(0, \".concat(coord8,\")\");question=\"\\u0417\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u044B \\u0442\\u043E\\u0447\\u043A\\u0438 \\u043D\\u0430 \\u043E\\u0441\\u0438 \".concat(axis8,\" \\u0441 \\u043A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u043E\\u0439 \").concat(coord8);translationKey='tasks.coordinates.on_axis';translationParams={axis:axis8,coord:coord8};answer=point8;explanation=\"\\u041D\\u0430 \\u043E\\u0441\\u0438 \".concat(axis8,\" \\u0432\\u0442\\u043E\\u0440\\u0430\\u044F \\u043A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u0430 \\u0440\\u0430\\u0432\\u043D\\u0430 0 \\u2192 \").concat(point8);explanationKey='tasks.coordinates.on_axis_explanation';explanationParams={axis:axis8,coord:coord8,result:point8};answerFormat=\"координаты (x,y)\";formatKey='answerFormats.coordinate';break;case 9:// Определение по описанию\nconst quadrants=[{q:'I',desc:'правая верхняя'},{q:'II',desc:'левая верхняя'},{q:'III',desc:'левая нижняя'},{q:'IV',desc:'правая нижняя'}];const quadrant9=quadrants[getRandomInt(0,3)];question=\"\\u0412 \\u043A\\u0430\\u043A\\u043E\\u0439 \\u0447\\u0435\\u0442\\u0432\\u0435\\u0440\\u0442\\u0438 \\u043D\\u0430\\u0445\\u043E\\u0434\\u044F\\u0442\\u0441\\u044F \\u0442\\u043E\\u0447\\u043A\\u0438 \\u0441 \".concat(quadrant9.desc,\" \\u0447\\u0435\\u0442\\u0432\\u0435\\u0440\\u0442\\u0438?\");translationKey='tasks.coordinates.by_description';translationParams={description:quadrant9.desc};answer=quadrant9.q;explanation=\"\".concat(quadrant9.desc,\" \\u0447\\u0435\\u0442\\u0432\\u0435\\u0440\\u0442\\u044C \\u2192 \").concat(quadrant9.q,\" \\u0447\\u0435\\u0442\\u0432\\u0435\\u0440\\u0442\\u044C\");explanationKey='tasks.coordinates.by_description_explanation';explanationParams={description:quadrant9.desc,result:quadrant9.q};answerFormat=\"номер четверти (I,II,III,IV)\";formatKey='answerFormats.quarter';break;case 10:// Координаты вершин прямоугольника\nconst x10=getRandomInt(1,3);const y10=getRandomInt(1,3);const width10=getRandomInt(2,4);const height10=getRandomInt(2,4);const vertices=[\"(\".concat(x10,\",\").concat(y10,\")\"),\"(\".concat(x10+width10,\",\").concat(y10,\")\"),\"(\".concat(x10+width10,\",\").concat(y10+height10,\")\"),\"(\".concat(x10,\",\").concat(y10+height10,\")\")].join(', ');question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u044B \\u0432\\u0441\\u0435\\u0445 \\u0432\\u0435\\u0440\\u0448\\u0438\\u043D \\u043F\\u0440\\u044F\\u043C\\u043E\\u0443\\u0433\\u043E\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430 \\u0441 \\u043B\\u0435\\u0432\\u044B\\u043C \\u043D\\u0438\\u0436\\u043D\\u0438\\u043C \\u0443\\u0433\\u043B\\u043E\\u043C (\".concat(x10,\", \").concat(y10,\"), \\u0448\\u0438\\u0440\\u0438\\u043D\\u043E\\u0439 \").concat(width10,\" \\u0438 \\u0432\\u044B\\u0441\\u043E\\u0442\\u043E\\u0439 \").concat(height10);translationKey='tasks.coordinates.rectangle_vertices';translationParams={x:x10,y:y10,width:width10,height:height10};answer=vertices;explanation=\"\\u0412\\u0435\\u0440\\u0448\\u0438\\u043D\\u044B: (\".concat(x10,\",\").concat(y10,\") \\u2192 (+\").concat(width10,\",0) \\u2192 (\").concat(x10+width10,\",\").concat(y10,\") \\u2192 (0,+\").concat(height10,\") \\u2192 (\").concat(x10+width10,\",\").concat(y10+height10,\")\");explanationKey='tasks.coordinates.rectangle_vertices_explanation';explanationParams={x:x10,y:y10,width:width10,height:height10,result:vertices};answerFormat=\"список координат через запятую\";formatKey='answerFormats.coordinates_list';break;default:type=getRandomInt(1,10);continue;}if(!usedQuestions.has(question)){usedQuestions.add(question);tasks.push({question,answer,explanation,answerFormat,translationKey,translationParams,explanationKey,explanationParams,formatKey});}}return tasks;};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","coordinatesGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","x1","y1","concat","x","y","x2","y2","positionX","positionY","x3","y3","quarter3","quarter","x4_1","y4_1","x4_2","y4_2","distance4","sqrt","pow","toFixed","result","x5","y5","symmetricX","x6","y6","symmetricY","x7","y7","symmetricOrigin","axis8","coord8","point8","axis","coord","quadrants","q","desc","quadrant9","description","x10","y10","width10","height10","vertices","join","width","height","has","add","push"],"sources":["/opt/math-app/frontend/src/taskGenerators/day6-coordinates.js"],"sourcesContent":["// day6-coordinates.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const coordinatesGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Определение координат точки\n        const x1 = getRandomInt(-5, 5);\n        const y1 = getRandomInt(-5, 5);\n        question = `Какие координаты у точки (${x1}, ${y1})?`;\n        translationKey = 'tasks.coordinates.point_coordinates';\n        translationParams = { x: x1, y: y1 };\n        answer = `(${x1}, ${y1})`;\n        explanation = `Точка имеет координаты (${x1}, ${y1}) - x=${x1}, y=${y1}`;\n        explanationKey = 'tasks.coordinates.point_coordinates_explanation';\n        explanationParams = { x: x1, y: y1 };\n        answerFormat = \"координаты (x,y)\";\n        formatKey = 'answerFormats.coordinate';\n        break;\n\n      case 2: // Построение точки по координатам\n        const x2 = getRandomInt(-4, 4);\n        const y2 = getRandomInt(-4, 4);\n        const positionX = x2 > 0 ? 'правой' : 'левой';\n        const positionY = y2 > 0 ? 'верхней' : 'нижней';\n        question = `Постройте точку с координаты (${x2}, ${y2})`;\n        translationKey = 'tasks.coordinates.plot_point';\n        translationParams = { x: x2, y: y2 };\n        answer = `Точка в ${positionX} части, ${positionY} половине`;\n        explanation = `Точка (${x2}, ${y2}) находится в ${positionX} части и ${positionY} половине плоскости`;\n        explanationKey = 'tasks.coordinates.plot_point_explanation';\n        explanationParams = { x: x2, y: y2, positionX, positionY };\n        answerFormat = \"описание положения\";\n        formatKey = 'answerFormats.description';\n        break;\n\n      case 3: // Определение четверти\n        const x3 = getRandomInt(-5, 5);\n        const y3 = getRandomInt(-5, 5);\n        let quarter3 = '';\n        if (x3 > 0 && y3 > 0) quarter3 = 'I';\n        else if (x3 < 0 && y3 > 0) quarter3 = 'II';\n        else if (x3 < 0 && y3 < 0) quarter3 = 'III';\n        else if (x3 > 0 && y3 < 0) quarter3 = 'IV';\n        else quarter3 = 'на оси';\n        \n        question = `В какой четверти находится точка (${x3}, ${y3})?`;\n        translationKey = 'tasks.coordinates.find_quarter';\n        translationParams = { x: x3, y: y3 };\n        answer = quarter3;\n        explanation = `Точка (${x3}, ${y3}) находится ${quarter3 === 'на оси' ? 'на оси координат' : 'в ' + quarter3 + ' четверти'}`;\n        explanationKey = 'tasks.coordinates.find_quarter_explanation';\n        explanationParams = { x: x3, y: y3, quarter: quarter3 };\n        answerFormat = \"номер четверти (I,II,III,IV)\";\n        formatKey = 'answerFormats.quarter';\n        break;\n\n      case 4: // Расстояние между точками\n        const x4_1 = getRandomInt(-3, 3);\n        const y4_1 = getRandomInt(-3, 3);\n        const x4_2 = getRandomInt(-3, 3);\n        const y4_2 = getRandomInt(-3, 3);\n        const distance4 = Math.sqrt(Math.pow(x4_2 - x4_1, 2) + Math.pow(y4_2 - y4_1, 2)).toFixed(2);\n        question = `Найдите расстояние между точками (${x4_1}, ${y4_1}) и (${x4_2}, ${y4_2})`;\n        translationKey = 'tasks.coordinates.distance_between';\n        translationParams = { x1: x4_1, y1: y4_1, x2: x4_2, y2: y4_2 };\n        answer = distance4;\n        explanation = `Расстояние = √((${x4_2}-${x4_1})² + (${y4_2}-${y4_1})²) = ${distance4}`;\n        explanationKey = 'tasks.coordinates.distance_between_explanation';\n        explanationParams = { x1: x4_1, y1: y4_1, x2: x4_2, y2: y4_2, result: distance4 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 5: // Симметрия относительно оси X\n        const x5 = getRandomInt(-4, 4);\n        const y5 = getRandomInt(-4, 4);\n        const symmetricX = `(${x5}, ${-y5})`;\n        question = `Найдите точку, симметричную (${x5}, ${y5}) относительно оси X`;\n        translationKey = 'tasks.coordinates.symmetry_x';\n        translationParams = { x: x5, y: y5 };\n        answer = symmetricX;\n        explanation = `Симметрия относительно X: y меняет знак → ${symmetricX}`;\n        explanationKey = 'tasks.coordinates.symmetry_x_explanation';\n        explanationParams = { x: x5, y: y5, result: symmetricX };\n        answerFormat = \"координаты (x,y)\";\n        formatKey = 'answerFormats.coordinate';\n        break;\n\n      case 6: // Симметрия относительно оси Y\n        const x6 = getRandomInt(-4, 4);\n        const y6 = getRandomInt(-4, 4);\n        const symmetricY = `(${-x6}, ${y6})`;\n        question = `Найдите точку, симметричную (${x6}, ${y6}) относительно оси Y`;\n        translationKey = 'tasks.coordinates.symmetry_y';\n        translationParams = { x: x6, y: y6 };\n        answer = symmetricY;\n        explanation = `Симметрия относительно Y: x меняет знак → ${symmetricY}`;\n        explanationKey = 'tasks.coordinates.symmetry_y_explanation';\n        explanationParams = { x: x6, y: y6, result: symmetricY };\n        answerFormat = \"координаты (x,y)\";\n        formatKey = 'answerFormats.coordinate';\n        break;\n\n      case 7: // Симметрия относительно начала координат\n        const x7 = getRandomInt(-4, 4);\n        const y7 = getRandomInt(-4, 4);\n        const symmetricOrigin = `(${-x7}, ${-y7})`;\n        question = `Найдите точку, симметричную (${x7}, ${y7}) относительно начала координат`;\n        translationKey = 'tasks.coordinates.symmetry_origin';\n        translationParams = { x: x7, y: y7 };\n        answer = symmetricOrigin;\n        explanation = `Симметрия относительно (0,0): x и y меняют знак → ${symmetricOrigin}`;\n        explanationKey = 'tasks.coordinates.symmetry_origin_explanation';\n        explanationParams = { x: x7, y: y7, result: symmetricOrigin };\n        answerFormat = \"координаты (x,y)\";\n        formatKey = 'answerFormats.coordinate';\n        break;\n\n      case 8: // Точка на оси\n        const axis8 = ['X', 'Y'][getRandomInt(0, 1)];\n        const coord8 = getRandomInt(-5, 5);\n        const point8 = axis8 === 'X' ? `(${coord8}, 0)` : `(0, ${coord8})`;\n        question = `Запишите координаты точки на оси ${axis8} с координатой ${coord8}`;\n        translationKey = 'tasks.coordinates.on_axis';\n        translationParams = { axis: axis8, coord: coord8 };\n        answer = point8;\n        explanation = `На оси ${axis8} вторая координата равна 0 → ${point8}`;\n        explanationKey = 'tasks.coordinates.on_axis_explanation';\n        explanationParams = { axis: axis8, coord: coord8, result: point8 };\n        answerFormat = \"координаты (x,y)\";\n        formatKey = 'answerFormats.coordinate';\n        break;\n\n      case 9: // Определение по описанию\n        const quadrants = [\n          { q: 'I', desc: 'правая верхняя' },\n          { q: 'II', desc: 'левая верхняя' },\n          { q: 'III', desc: 'левая нижняя' },\n          { q: 'IV', desc: 'правая нижняя' }\n        ];\n        const quadrant9 = quadrants[getRandomInt(0, 3)];\n        question = `В какой четверти находятся точки с ${quadrant9.desc} четверти?`;\n        translationKey = 'tasks.coordinates.by_description';\n        translationParams = { description: quadrant9.desc };\n        answer = quadrant9.q;\n        explanation = `${quadrant9.desc} четверть → ${quadrant9.q} четверть`;\n        explanationKey = 'tasks.coordinates.by_description_explanation';\n        explanationParams = { description: quadrant9.desc, result: quadrant9.q };\n        answerFormat = \"номер четверти (I,II,III,IV)\";\n        formatKey = 'answerFormats.quarter';\n        break;\n\n      case 10: // Координаты вершин прямоугольника\n        const x10 = getRandomInt(1, 3);\n        const y10 = getRandomInt(1, 3);\n        const width10 = getRandomInt(2, 4);\n        const height10 = getRandomInt(2, 4);\n        const vertices = [\n          `(${x10},${y10})`,\n          `(${x10+width10},${y10})`,\n          `(${x10+width10},${y10+height10})`,\n          `(${x10},${y10+height10})`\n        ].join(', ');\n        question = `Найдите координаты всех вершин прямоугольника с левым нижним углом (${x10}, ${y10}), шириной ${width10} и высотой ${height10}`;\n        translationKey = 'tasks.coordinates.rectangle_vertices';\n        translationParams = { x: x10, y: y10, width: width10, height: height10 };\n        answer = vertices;\n        explanation = `Вершины: (${x10},${y10}) → (+${width10},0) → (${x10+width10},${y10}) → (0,+${height10}) → (${x10+width10},${y10+height10})`;\n        explanationKey = 'tasks.coordinates.rectangle_vertices_explanation';\n        explanationParams = { x: x10, y: y10, width: width10, height: height10, result: vertices };\n        answerFormat = \"список координат через запятую\";\n        formatKey = 'answerFormats.coordinates_list';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey,\n        translationParams,\n        explanationKey, \n        explanationParams,\n        formatKey\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}