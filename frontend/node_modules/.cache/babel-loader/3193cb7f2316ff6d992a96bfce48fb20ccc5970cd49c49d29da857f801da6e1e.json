{"ast":null,"code":"// day14-review.js\nconst getRandomInt=(min,max)=>Math.floor(Math.random()*(max-min+1))+min;export const reviewGenerator=(count,t)=>{const tasks=[];const usedQuestions=new Set();while(tasks.length<count){let question,answer,explanation,answerFormat;let translationKey,translationParams,explanationKey,explanationParams,formatKey;let type=getRandomInt(1,10);switch(type){case 1:// Дроби - сокращение\nconst num1=getRandomInt(2,8);const den1=getRandomInt(3,12);question=\"\\u0421\\u043E\\u043A\\u0440\\u0430\\u0442\\u0438\\u0442\\u0435 \\u0434\\u0440\\u043E\\u0431\\u044C: \".concat(num1*2,\"/\").concat(den1*2);translationKey='tasks.review.fractions';translationParams={num:num1*2,den:den1*2};answer=\"\".concat(num1,\"/\").concat(den1);explanation=\"\\u0414\\u0435\\u043B\\u0438\\u043C \\u043D\\u0430 2: \".concat(num1*2,\"/\").concat(den1*2,\" = \").concat(num1,\"/\").concat(den1);explanationKey='tasks.review.fractions_explanation';explanationParams={num:num1*2,den:den1*2,result:\"\".concat(num1,\"/\").concat(den1)};answerFormat=\"дробь\";formatKey='answerFormats.fraction';break;case 2:// Геометрия - площадь квадрата\nconst side2=getRandomInt(3,12);const area2=side2*side2;question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C \\u043A\\u0432\\u0430\\u0434\\u0440\\u0430\\u0442\\u0430 \\u0441\\u043E \\u0441\\u0442\\u043E\\u0440\\u043E\\u043D\\u043E\\u0439 \".concat(side2,\" \\u0441\\u043C\");translationKey='tasks.review.geometry';translationParams={side:side2};answer=area2.toString();explanation=\"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C = \".concat(side2,\" \\xD7 \").concat(side2,\" = \").concat(area2,\" \\u0441\\u043C\\xB2\");explanationKey='tasks.review.geometry_explanation';explanationParams={side:side2,result:area2};answerFormat=\"число (в см²)\";formatKey='answer极formats.cm2';break;case 3:// Уравнения\nconst a3=getRandomInt(2,6);const b3=getRandomInt(5,20);const c3=getRandomInt(25,50);const result3=Math.round((c3-b3)/a3);question=\"\\u0420\\u0435\\u0448\\u0438\\u0442\\u0435 \\u0443\\u0440\\u0430\\u0432\\u043D\\u0435\\u043D\\u0438\\u0435: \".concat(a3,\"x + \").concat(b3,\" = \").concat(c3);translationKey='tasks.review.equations';translationParams={a:a3,b:b3,c:c3};answer=result3.toString();explanation=\"\".concat(a3,\"x = \").concat(c3,\" - \").concat(b3,\" = \").concat(c3-b3,\", x = \").concat(result3);explanationKey='tasks.review.equations_explanation';explanationParams={a:a3,b:b3,c:c3,step:c3-b3,result:result3};answerFormat=\"число\";formatKey='answerFormats.number';break;case 4:// Проценты\nconst percent4=getRandomInt(5,25)*5;const number4=getRandomInt(100,500);const result4=Math.round(percent4/100*number4);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \".concat(percent4,\"% \\u043E\\u0442 \\u0447\\u0438\\u0441\\u043B\\u0430 \").concat(number4);translationKey='tasks.review.percentages';translationParams={percent:percent4,number:number4};answer=result4.toString();explanation=\"\".concat(percent4,\"% \\u043E\\u0442 \").concat(number4,\" = (\").concat(percent4,\" \\xD7 \").concat(number4,\") / 100 = \").concat(result4);explanationKey='tasks.review.percentages_explanation';explanationParams={percent:percent4,number:number4,result:result4};answerFormat=\"число\";formatKey='answerFormats.number';break;case 5:// Отношения\nconst a5=getRandomInt(2,8);const b5=getRandomInt(2,8);question=\"\\u0417\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u043E\\u0442\\u043D\\u043E\\u0448\\u0435\\u043D\\u0438\\u0435 \".concat(a5,\" \\u043A \").concat(b5);translationKey='tasks.review.ratios';translationParams={a:a5,b:b5};answer=\"\".concat(a5,\":\").concat(b5);explanation=\"\\u041E\\u0442\\u043D\\u043E\\u0448\\u0435\\u043D\\u0438\\u0435 = \".concat(a5,\":\").concat(b5);explanationKey='tasks.review.ratios_explanation';explanationParams={a:a5,b:b5};answerFormat=\"отношение (a:b)\";formatKey='answerFormats.ratio';break;case 6:// Координаты - симметрия\nconst x6=getRandomInt(-4,4);const y6=getRandomInt(-4,4);const symmetricPoint6=\"(\".concat(-x6,\", \").concat(y6,\")\");question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0442\\u043E\\u0447\\u043A\\u0443, \\u0441\\u0438\\u043C\\u043C\\u0435\\u0442\\u0440\\u0438\\u0447\\u043D\\u0443\\u044E (\".concat(x6,\", \").concat(y6,\") \\u043E\\u0442\\u043D\\u043E\\u0441\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u043E\\u0441\\u0438 Y\");translationKey='tasks.review.coordinates';translationParams={x:x6,y:y6};answer=symmetricPoint6;explanation=\"\\u0421\\u0438\\u043C\\u043C\\u0435\\u0442\\u0440\\u0438\\u044F \\u043E\\u0442\\u043D\\u043E\\u0441\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E Y: x \\u043C\\u0435\\u043D\\u044F\\u0435\\u0442 \\u0437\\u043D\\u0430\\u043A \\u2192 \".concat(symmetricPoint6);explanationKey='tasks.review.coordinates_explanation';explanationParams={x:x6,y:y6,result:symmetricPoint6};answerFormat=\"координаты (x,y)\";formatKey='answerFormats.coordinate';break;case 7:// Объем куба\nconst edge7=getRandomInt(2,8);const volume7=edge7*edge7*edge7;question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043C \\u043A\\u0443\\u0431\\u0430 \\u0441 \\u0440\\u0435\\u0431\\u0440\\u043E\\u043C \".concat(edge7,\" \\u0441\\u043C\");translationKey='tasks.review.volume';translationParams={edge:edge7};answer=volume7.toString();explanation=\"\\u041E\\u0431\\u044A\\u0435\\u043C = \".concat(edge7,\" \\xD7 \").concat(edge7,\" \\xD7 \").concat(edge7,\" = \").concat(volume7,\" \\u0441\\u043C\\xB3\");explanationKey='tasks.review.volume_explanation';explanationParams={edge:edge7,result:volume7};answerFormat=\"число (в см³)\";formatKey='answerFormats.cm3';break;case 8:// Статистика - среднее\nconst numbers8=Array.from({length:5},()=>getRandomInt(10,20));const sum8=numbers8.reduce((a,b)=>a+b,0);const average8=Math.round(sum8/numbers8.length);question=\"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0440\\u0435\\u0434\\u043D\\u0435\\u0435 \\u0430\\u0440\\u0438\\u0444\\u043C\\u0435\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u043E\\u0435 \\u0447\\u0438\\u0441\\u0435\\u043B: \".concat(numbers8.join(', '));translationKey='tasks.review.statistics';translationParams={numbers:numbers8.join(', ')};answer=average8.toString();explanation=\"\\u0421\\u0443\\u043C\\u043C\\u0430 = \".concat(numbers8.join(' + '),\" = \").concat(sum8,\", \\u0441\\u0440\\u0435\\u0434\\u043D\\u0435\\u0435 = \").concat(sum8,\" / \").concat(numbers8.length,\" = \").concat(average8);explanationKey='tasks.review.statistics_explanation';explanationParams={numbers:numbers8.join(' + '),sum:sum8,count:numbers8.length,result:average8};answerFormat=\"число\";formatKey='answerFormats.number';break;case 9:// Текстовая задача\nconst price9=getRandomInt(50,150);const quantity9=getRandomInt(3,8);const totalCost9=price9*quantity9;question=\"\\u041E\\u0434\\u043D\\u0430 \\u0442\\u0435\\u0442\\u0440\\u0430\\u0434\\u044C \\u0441\\u0442\\u043E\\u0438\\u0442 \".concat(price9,\" \\u0440\\u0443\\u0431. \\u0421\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0441\\u0442\\u043E\\u044F\\u0442 \").concat(quantity9,\" \\u0442\\u0435\\u0442\\u0440\\u0430\\u0434\\u0435\\u0439?\");translationKey='tasks.review.word_problem';translationParams={price:price9,quantity:quantity9};answer=totalCost9.toString();explanation=\"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C = \\u0446\\u0435\\u043D\\u0430 \\xD7 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E = \".concat(price9,\" \\xD7 \").concat(quantity9,\" = \").concat(totalCost9,\" \\u0440\\u0443\\u0431\");explanationKey='tasks.review.word_problem_explanation';explanationParams={price:price9,quantity:quantity9,result:totalCost9};answerFormat=\"число (руб.)\";formatKey='answerFormats.rub';break;case 10:// Симметрия\nconst letter10=\"H\";question=\"\\u041A\\u0430\\u043A\\u0430\\u044F \\u0441\\u0438\\u043C\\u043C\\u0435\\u0442\\u0440\\u0438\\u044F \\u0443 \\u0431\\u0443\\u043A\\u0432\\u044B \\\"\".concat(letter10,\"\\\"?\");translationKey='tasks.review.symmetry';translationParams={letter:letter10};answer=\"вертикальная и горизонтальная\";explanation=\"\\u0411\\u0443\\u043A\\u0432\\u0430 \\\"\".concat(letter10,\"\\\" \\u0438\\u043C\\u0435\\u0435\\u0442 \\u0432\\u0435\\u0440\\u0442\\u0438\\u043A\\u0430\\u043B\\u044C\\u043D\\u0443\\u044E \\u0438 \\u0433\\u043E\\u0440\\u0438\\u0437\\u043E\\u043D\\u0442\\u0430\\u043B\\u044C\\u043D\\u0443\\u044E \\u0441\\u0438\\u043C\\u043C\\u0435\\u0442\\u0440\\u0438\\u044E\");explanationKey='tasks.review.symmetry_explanation';explanationParams={letter:letter10,result:\"вертикальная и горизонтальная\"};answerFormat=\"тип симметрии\";formatKey='answerFormats.symmetry_type';break;default:type=getRandomInt(1,10);continue;}// Fallback: если translationKey не определен, используем обычный текст\nif(!translationKey){translationKey=null;}if(!usedQuestions.has(question)){usedQuestions.add(question);tasks.push({question,answer,explanation,answerFormat,translationKey:translationKey||undefined,translationParams:translationParams||undefined,explanationKey:explanationKey||undefined,explanationParams:explanationParams||undefined,formatKey:formatKey||undefined});}}return tasks;};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","reviewGenerator","count","t","tasks","usedQuestions","Set","length","question","answer","explanation","answerFormat","translationKey","translationParams","explanationKey","explanationParams","formatKey","type","num1","den1","concat","num","den","result","side2","area2","side","toString","a3","b3","c3","result3","round","a","b","c","step","percent4","number4","result4","percent","number","a5","b5","x6","y6","symmetricPoint6","x","y","edge7","volume7","edge","numbers8","Array","from","sum8","reduce","average8","join","numbers","sum","price9","quantity9","totalCost9","price","quantity","letter10","letter","has","add","push","undefined"],"sources":["/opt/math-app/frontend/src/taskGenerators/day14-review.js"],"sourcesContent":["// day14-review.js\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const reviewGenerator = (count, t) => {\n  const tasks = [];\n  const usedQuestions = new Set();\n\n  while (tasks.length < count) {\n    let question, answer, explanation, answerFormat;\n    let translationKey, translationParams, explanationKey, explanationParams, formatKey;\n    let type = getRandomInt(1, 10);\n\n    switch (type) {\n      case 1: // Дроби - сокращение\n        const num1 = getRandomInt(2, 8);\n        const den1 = getRandomInt(3, 12);\n        question = `Сократите дробь: ${num1 * 2}/${den1 * 2}`;\n        translationKey = 'tasks.review.fractions';\n        translationParams = { num: num1 * 2, den: den1 * 2 };\n        answer = `${num1}/${den1}`;\n        explanation = `Делим на 2: ${num1 * 2}/${den1 * 2} = ${num1}/${den1}`;\n        explanationKey = 'tasks.review.fractions_explanation';\n        explanationParams = { num: num1 * 2, den: den1 * 2, result: `${num1}/${den1}` };\n        answerFormat = \"дробь\";\n        formatKey = 'answerFormats.fraction';\n        break;\n\n      case 2: // Геометрия - площадь квадрата\n        const side2 = getRandomInt(3, 12);\n        const area2 = side2 * side2;\n        question = `Найдите площадь квадрата со стороной ${side2} см`;\n        translationKey = 'tasks.review.geometry';\n        translationParams = { side: side2 };\n        answer = area2.toString();\n        explanation = `Площадь = ${side2} × ${side2} = ${area2} см²`;\n        explanationKey = 'tasks.review.geometry_explanation';\n        explanationParams = { side: side2, result: area2 };\n        answerFormat = \"число (в см²)\";\n        formatKey = 'answer极formats.cm2';\n        break;\n\n      case 3: // Уравнения\n        const a3 = getRandomInt(2, 6);\n        const b3 = getRandomInt(5, 20);\n        const c3 = getRandomInt(25, 50);\n        const result3 = Math.round((c3 - b3) / a3);\n        question = `Решите уравнение: ${a3}x + ${b3} = ${c3}`;\n        translationKey = 'tasks.review.equations';\n        translationParams = { a: a3, b: b3, c: c3 };\n        answer = result3.toString();\n        explanation = `${a3}x = ${c3} - ${b3} = ${c3 - b3}, x = ${result3}`;\n        explanationKey = 'tasks.review.equations_explanation';\n        explanationParams = { a: a3, b: b3, c: c3, step: c3 - b3, result: result3 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 4: // Проценты\n        const percent4 = getRandomInt(5, 25) * 5;\n        const number4 = getRandomInt(100, 500);\n        const result4 = Math.round((percent4 / 100) * number4);\n        question = `Найдите ${percent4}% от числа ${number4}`;\n        translationKey = 'tasks.review.percentages';\n        translationParams = { percent: percent4, number: number4 };\n        answer = result4.toString();\n        explanation = `${percent4}% от ${number4} = (${percent4} × ${number4}) / 100 = ${result4}`;\n        explanationKey = 'tasks.review.percentages_explanation';\n        explanationParams = { percent: percent4, number: number4, result: result4 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 5: // Отношения\n        const a5 = getRandomInt(2, 8);\n        const b5 = getRandomInt(2, 8);\n        question = `Запишите отношение ${a5} к ${b5}`;\n        translationKey = 'tasks.review.ratios';\n        translationParams = { a: a5, b: b5 };\n        answer = `${a5}:${b5}`;\n        explanation = `Отношение = ${a5}:${b5}`;\n        explanationKey = 'tasks.review.ratios_explanation';\n        explanationParams = { a: a5, b: b5 };\n        answerFormat = \"отношение (a:b)\";\n        formatKey = 'answerFormats.ratio';\n        break;\n\n      case 6: // Координаты - симметрия\n        const x6 = getRandomInt(-4, 4);\n        const y6 = getRandomInt(-4, 4);\n        const symmetricPoint6 = `(${-x6}, ${y6})`;\n        question = `Найдите точку, симметричную (${x6}, ${y6}) относительно оси Y`;\n        translationKey = 'tasks.review.coordinates';\n        translationParams = { x: x6, y: y6 };\n        answer = symmetricPoint6;\n        explanation = `Симметрия относительно Y: x меняет знак → ${symmetricPoint6}`;\n        explanationKey = 'tasks.review.coordinates_explanation';\n        explanationParams = { x: x6, y: y6, result: symmetricPoint6 };\n        answerFormat = \"координаты (x,y)\";\n        formatKey = 'answerFormats.coordinate';\n        break;\n\n      case 7: // Объем куба\n        const edge7 = getRandomInt(2, 8);\n        const volume7 = edge7 * edge7 * edge7;\n        question = `Найдите объем куба с ребром ${edge7} см`;\n        translationKey = 'tasks.review.volume';\n        translationParams = { edge: edge7 };\n        answer = volume7.toString();\n        explanation = `Объем = ${edge7} × ${edge7} × ${edge7} = ${volume7} см³`;\n        explanationKey = 'tasks.review.volume_explanation';\n        explanationParams = { edge: edge7, result: volume7 };\n        answerFormat = \"число (в см³)\";\n        formatKey = 'answerFormats.cm3';\n        break;\n\n      case 8: // Статистика - среднее\n        const numbers8 = Array.from({length: 5}, () => getRandomInt(10, 20));\n        const sum8 = numbers8.reduce((a, b) => a + b, 0);\n        const average8 = Math.round(sum8 / numbers8.length);\n        question = `Найдите среднее арифметическое чисел: ${numbers8.join(', ')}`;\n        translationKey = 'tasks.review.statistics';\n        translationParams = { numbers: numbers8.join(', ') };\n        answer = average8.toString();\n        explanation = `Сумма = ${numbers8.join(' + ')} = ${sum8}, среднее = ${sum8} / ${numbers8.length} = ${average8}`;\n        explanationKey = 'tasks.review.statistics_explanation';\n        explanationParams = { numbers: numbers8.join(' + '), sum: sum8, count: numbers8.length, result: average8 };\n        answerFormat = \"число\";\n        formatKey = 'answerFormats.number';\n        break;\n\n      case 9: // Текстовая задача\n        const price9 = getRandomInt(50, 150);\n        const quantity9 = getRandomInt(3, 8);\n        const totalCost9 = price9 * quantity9;\n        question = `Одна тетрадь стоит ${price9} руб. Сколько стоят ${quantity9} тетрадей?`;\n        translationKey = 'tasks.review.word_problem';\n        translationParams = { price: price9, quantity: quantity9 };\n        answer = totalCost9.toString();\n        explanation = `Стоимость = цена × количество = ${price9} × ${quantity9} = ${totalCost9} руб`;\n        explanationKey = 'tasks.review.word_problem_explanation';\n        explanationParams = { price: price9, quantity: quantity9, result: totalCost9 };\n        answerFormat = \"число (руб.)\";\n        formatKey = 'answerFormats.rub';\n        break;\n\n      case 10: // Симметрия\n        const letter10 = \"H\";\n        question = `Какая симметрия у буквы \"${letter10}\"?`;\n        translationKey = 'tasks.review.symmetry';\n        translationParams = { letter: letter10 };\n        answer = \"вертикальная и горизонтальная\";\n        explanation = `Буква \"${letter10}\" имеет вертикальную и горизонтальную симметрию`;\n        explanationKey = 'tasks.review.symmetry_explanation';\n        explanationParams = { letter: letter10, result: \"вертикальная и горизонтальная\" };\n        answerFormat = \"тип симметрии\";\n        formatKey = 'answerFormats.symmetry_type';\n        break;\n\n      default:\n        type = getRandomInt(1, 10);\n        continue;\n    }\n\n    // Fallback: если translationKey не определен, используем обычный текст\n    if (!translationKey) {\n      translationKey = null;\n    }\n\n    if (!usedQuestions.has(question)) {\n      usedQuestions.add(question);\n      tasks.push({ \n        question, \n        answer, \n        explanation, \n        answerFormat,\n        translationKey: translationKey || undefined,\n        translationParams: translationParams || undefined,\n        explanationKey: explanationKey || undefined, \n        explanationParams: explanationParams || undefined,\n        formatKey: formatKey || undefined\n      });\n    }\n  }\n  return tasks;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}